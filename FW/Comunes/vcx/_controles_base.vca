SCCTEXT Version 4.0.0.2
PLATFORM C(8,0),UNIQUEID C(10,0),TIMESTAMP N(10,0),CLASS M(4,0),CLASSLOC M(4,0),BASECLASS M(4,0),OBJNAME M(4,0),PARENT M(4,0),PROPERTIES M(4,0),PROTECTED M(4,0),METHODS M(4,0),OBJCODE M(4,0),OLE M(4,0),OLE2 M(4,0),RESERVED1 M(4,0),RESERVED2 M(4,0),RESERVED3 M(4,0),RESERVED4 M(4,0),RESERVED5 M(4,0),RESERVED6 M(4,0),RESERVED7 M(4,0),RESERVED8 M(4,0),USER M(4,0)
1252

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] Class     
[START RESERVED1]
VERSION =   3.00[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _40W0ZYX8M
[CLASS] textbox
[BASECLASS] textbox
[OBJNAME] _textbox
[START PROPERTIES]
Anchor = 0
Visible = .T.
DisabledBackColor = 255,255,255
DisabledForeColor = 0,0,255
IntegralHeight = .T.
olabel = .NULL.
_memberdata =     2588<VFPData><memberdata name="olabel" display="oLabel"/><memberdata name="ccuetext" display="cCueText"/><memberdata name="lcuevisible" display="lCueVisible"/><memberdata name="cforecolor" display="cForecolor"/><memberdata name="lfontitalic" display="lFontItalic"/><memberdata name="uoriginalvalue" display="uOriginalValue"/><memberdata name="nalignment" display="nAlignment"/><memberdata name="cformat" display="cFormat"/><memberdata name="cinputmask" display="cInputMask"/><memberdata name="nmaxlength" display="nMaxLength"/><memberdata name="initialize" display="Initialize"/><memberdata name="lcuevisible_assign" display="lCueVisible_Assign"/><memberdata name="ccuetext_assign" display="cCueText_Assign"/><memberdata name="afterbindcontrols" display="AfterBindControls"/><memberdata name="linitialized" display="lInitialized"/><memberdata name="ofield" display="oField"/><memberdata name="ofield_access" display="oField_Access"/><memberdata name="ctable" display="cTable" favorites="True"/><memberdata name="cfieldname" display="cFieldName"/><memberdata name="cfieldname_access" display="cFieldName_Access"/><memberdata name="lvalid" display="lValid"/><memberdata name="llabelautosize" display="lLabelAutosize"/><memberdata name="nlabelposition" display="nLabelPosition" favorites="True"/><memberdata name="lgeneratelabel" display="lGenerateLabel"/><memberdata name="nleftcolumn" display="nLeftColumn" favorites="True"/><memberdata name="obiz" display="oBiz"/><memberdata name="obiz_access" display="oBiz_Access"/><memberdata name="cclassname" display="cClassName"/><memberdata name="cclasslibrary" display="cClassLibrary"/><memberdata name="lautomaticdisplay" display="lAutomaticDisplay" favorites="True"/><memberdata name="ncolumnsspan" display="nColumnsSpan" favorites="True"/><memberdata name="nlabelspan" display="nLabelSpan" favorites="True"/><memberdata name="ntoprow" display="nTopRow" favorites="True"/><memberdata name="nwidth" display="nWidth"/><memberdata name="nheight" display="nHeight"/><memberdata name="nrowspan" display="nRowSpan"/><memberdata name="anchor" display="Anchor"/><memberdata name="initializerows" display="InitializeRows"/><memberdata name="nverticalalignment" display="nVerticalAlignment"/><memberdata name="enabled" display="Enabled"/><memberdata name="enabled_assign" display="Enabled_Assign"/><memberdata name="lreadonly" display="lReadOnly"/><memberdata name="visible" display="Visible"/><memberdata name="visible_assign" display="Visible_Assign"/><memberdata name="lstr" display="lStr"/><memberdata name="lusecuetext" display="lUseCueText"/></VFPData>
ccuetext = 
lcuevisible = .F.
cforecolor = 
lfontitalic = .F.
uoriginalvalue = .NULL.
nalignment = 3
cformat = 
cinputmask = 
nmaxlength = 0
linitialized = .F.
ofield = .NULL.
ctable = 
cfieldname = 
lvalid = .T.
llabelautosize = .T.
nlabelposition = 2
lgeneratelabel = .F.
nleftcolumn = 1
obiz = .NULL.
cclassname = ControlesBase
cclasslibrary = FW\Comunes\vcx\_Controles_Base.prg
lautomaticdisplay = .T.
ncolumnsspan = 12
nlabelspan = 4
ntoprow = 1
nwidth = 360
nheight = 24
nrowspan = 1
nverticalalignment = 0
lreadonly = .F.
lstr = .F.
lusecuetext = .T.
Name = "_textbox"
[END PROPERTIES]
[START METHODS]
PROCEDURE Destroy
This.oBiz = Null
This.oField = Null
This.oLabel = Null
ENDPROC
PROCEDURE GotFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String

Try

	lcCommand = ""
	If .T. && This.lValid
		This.BackColor = _CB_ONFOCUS_BACKCOLOR

	Else
		This.BackColor = _CB_NOTVALID_BACKCOLOR

	Endif
	
	This.ForeColor = _CB_ONFOCUS_FORECOLOR

	If This.lInitialized And This.lCueVisible
		This.lCueVisible = .F.
	EndIf
	
	Try

		This.oLabel.FontBold = .T.

	Catch To oErr

	Finally

	EndTry


Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry



ENDPROC
PROCEDURE Init
Local lcCommand As String

Try

	lcCommand = ""
	
	This.lFontItalic 	= This.FontItalic
	This.cForecolor 	= This.ForeColor
	This.nAlignment 	= This.Alignment
	This.cFormat 		= This.Format
	This.cInputMask 	= This.InputMask
	This.nMaxLength 	= This.MaxLength
	This.lInitialized 	= .F.

	If Pemstatus( Thisform, 'InitializeControls', 5 )
		Bindevent( Thisform, 'InitializeControls', This, 'Initialize', 1 )
	Endif

	If Pemstatus( Thisform, 'InitializeRows', 5 )
		Bindevent( Thisform, 'InitializeRows', This, 'InitializeRows', 1 )
	Endif

	If Pemstatus( Thisform, 'AfterBindControls', 5 )
		Bindevent( Thisform, 'AfterBindControls', This, 'AfterBindControls', 1 )
	Endif

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE InteractiveChange
This.uOriginalValue = This.Value
ENDPROC
PROCEDURE LostFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String
Local luValue As Variant
Local loLabel As Label

Try

    lcCommand = ""

    If This.lValid
        This.BackColor = _CB_BACKCOLOR

    Else
        This.BackColor = _CB_NOTVALID_BACKCOLOR

    Endif

    This.ForeColor = _CB_FORECOLOR

    luValue = This.Value
    If This.lInitialized And ( Empty( Alltrim( Transform( luValue ) ) ) Or Isnull( luValue ) )
        This.lCueVisible = .T.
    Endif

    Try

        loLabel = This.oLabel
        loLabel.FontBold = .F.

        If This.lValid
            loLabel.ForeColor = loLabel.nForeColor

        Else
            loLabel.ForeColor = Rgb(255,0,0)

        Endif

    Catch To oErr

    Finally

    Endtry


Catch To oErr
    Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
    loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
    loError.Cremark = lcCommand
    loError.Process( oErr )
    Throw loError

Finally
    If This.lValid
        Wait Clear
    Endif


Endtry

ENDPROC
PROCEDURE MouseDown
Lparameters nButton, nShift, nXCoord, nYCoord

Do Case
	Case nButton = 2 And nShift = 0 && Right Click

		Define Popup Emergente SHORTCUT Relative From Mrow(),Mcol()


		Define Bar _Med_undo Of emergente Prompt "\<Deshacer" Key CTRL+Z, "Ctrl+Z" PICTRES _Med_undo ;
			message "Deshace el último comando o acción."
		Define Bar _Med_redo Of emergente Prompt "Re\<hacer" Key CTRL+R, "Ctrl+R" PICTRES _Med_redo ;
			message "Repite el último comando o acción."
		Define Bar 3 Of emergente Prompt "\-"
		Define Bar _Med_cut Of emergente Prompt "Cor\<tar" Key CTRL+X, "Ctrl+X" PICTRES _Med_cut ;
			message "Quita la selección y la coloca en el Portapapeles."
		Define Bar _Med_copy Of emergente Prompt "\<Copiar" Key CTRL+C, "Ctrl+C" PICTRES _Med_copy ;
			message "Copia la selección al Portapapeles."
		Define Bar _Med_paste Of emergente Prompt "Peg\<ar"	Key CTRL+V, "Ctrl+V" PICTRES _Med_paste ;
			message "Pega el contenido del Portapapeles."
		Define Bar 7 Of emergente Prompt "\-"
		Define Bar _Med_slcta Of emergente Prompt "\<Seleccionar todo" Key CTRL+A, "Ctrl+A" PICTRES _Med_slcta ;
			message "Selecciona todos los elementos o texto de la ventana actual."
			
		Activate Popup Emergente
		Thisform.Refresh()

Endcase

ENDPROC
PROCEDURE Valid
Local lcCommand As String
Local loField As oField Of 'Tools\DataDictionary\prg\oField.prg'
Local llValid As Boolean

Try

	lcCommand = ""
	llValid = .T.
	loField = This.oField

	If !Isnull( loField )
		If llValid
			If loField.lRequired  And Empty( This.Value )
				*Warning( "Valor Obligatorio", loField.cCaption )
				llValid = .F.

				TEXT To lcMsg NoShow TextMerge Pretext 03
				<<loField.cCaption>>

				Valor Obligatorio
				ENDTEXT

				Wait Window Nowait Noclear lcMsg

			Endif
		Endif
	Endif

	This.lValid = llValid
	
	If llValid
		Wait CLEAR
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


Endtry

* RA 19/09/2021(17:31:19)
* Permite seguir. La validación final se hacel al confirmar globalmente
Return .T.

ENDPROC
PROCEDURE afterbindcontrols
Local lcCommand As String

Try

	lcCommand = ""

	If Thisform.BindControls And ! This.lInitialized
		This.lFontItalic 	= This.FontItalic
		This.cForecolor 	= This.ForeColor
		This.nAlignment 	= This.Alignment
		This.uOriginalValue = This.Value
		This.cFormat 		= This.Format
		This.cInputMask 	= This.InputMask
		This.nMaxLength 	= This.MaxLength
		
		This.lInitialized 	= .T.

		luValue = This.Value
		This.lCueVisible 	= ( Empty( Alltrim( Transform( luValue ) ) ) Or Isnull( luValue ) )

	Endif
	
	If !Thisform.BindControls
		This.lInitialized = .F.
		This.uOriginalValue = ""
	EndIf


Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE ccuetext_assign
#INCLUDE "FW\Comunes\Include\Praxis.h"

Lparameters tcCueText
This.cCueText = tcCueText
If Empty( This.ToolTipText )
	This.ToolTipText = This.cCueText

Else
	This.ToolTipText = This.ToolTipText + CRLF + " ( " + This.cCueText + " )"

Endif


ENDPROC
PROCEDURE cfieldname_access
If Empty( This.cFieldName )
    This.cFieldName = Substr( This.Name, 4 )
EndIf

Return This.cFieldName

ENDPROC
PROCEDURE enabled_assign
lparameters tEnabled
This.Enabled = tEnabled

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.FontBold = !tEnabled
EndIf

ENDPROC
PROCEDURE initialize
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

    lcCommand = ""

    If This.lAutomaticDisplay
        If Empty( This.cTable )
            This.cTable = This.Parent.cTable
        Endif
    Endif

    loBiz = This.oBiz
    loBiz.Initialize()
    If Empty( This.ControlSource )
        If This.lStr
            This.ControlSource = "Thisform.oRegistro.Str_" + This.cFieldName

        Else
            This.ControlSource = "Thisform.oRegistro." + This.cFieldName

        Endif

    Endif

    Thisform.oControles.Add( This, Lower( This.Parent.Name ) + "_" + Lower( This.Name ))

Catch To oErr
    Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
    loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
    loError.Cremark = lcCommand
    loError.Process( oErr )
    Throw loError

Finally
    loBiz = Null

Endtry

ENDPROC
PROCEDURE initializerows
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""

	loBiz = This.oBiz
	loBiz.InicializarFilas()
	
Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null
	This.oBiz = Null

Endtry

ENDPROC
PROCEDURE lcuevisible_assign
Lparameters tlCueVisible

Local lcCommand As String

Try

    lcCommand = ""

    If This.lUseCueText

        This.lCueVisible = tlCueVisible

        If This.lInitialized
            If This.lCueVisible
                This.Format 	= ''
                This.InputMask 	= ''
                This.MaxLength 	= 0
                This.ForeColor 	= This.DisabledForeColor
                This.FontItalic = .T.
                This.Alignment 	= 3
                This.Value 		= Alltrim( This.cCueText )

            Else
                This.Format 	= This.cFormat
                This.InputMask 	= This.cInputMask
                This.MaxLength 	= This.nMaxLength
                This.ForeColor 	= This.cForecolor
                This.FontItalic = This.lFontItalic
                This.Alignment 	= This.nAlignment

                If Alltrim( Transform( This.Value ) ) == Alltrim( This.cCueText )
                    This.Value = This.uOriginalValue
                Endif

            Endif

        Endif
    Endif

Catch To oErr
    Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
    loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
    loError.Cremark = lcCommand
    loError.Process( oErr )
    Throw loError

Finally


Endtry


ENDPROC
PROCEDURE obiz_access
Local lcCommand as String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	If Vartype( This.oBiz ) # "O"
		loBiz = NewObject( This.cClassName, This.cClassLibrary )
 		loBiz.oControl = This
 		loBiz.oThisForm = Thisform
		This.oBiz = loBiz
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loBiz = Null


EndTry

Return This.oBiz
ENDPROC
PROCEDURE visible_assign
lparameters tVisible
This.Visible = tVisible

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.Visible = tVisible
EndIf

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
olabel Referencia al objeto Label vinculado al control
_memberdata XML Metadata for customizable properties
ccuetext Texto aclaratorio
lcuevisible Muestra texto aclaratorio
cforecolor Guarda el ForeColor activo
lfontitalic Guarda el FontItalic activo
uoriginalvalue Guarda el Value original
nalignment Guarda el Aligment activo
cformat Guarda el Format activo
cinputmask Guarda el InputMask activo
nmaxlength Guarda el MaxLength activo
linitialized Indica si está inicializado
ofield
ctable Nombre de la tabla asociada
cfieldname
lvalid Indica si el control contiene un valor válido luego de dejar el foco
llabelautosize Indica si dimensiona el control Label asociado
nlabelposition Posición del Label con respecto al control. 2 - Izquierda, 5 - Derecha, 6 - Arriba, 9 - Abajo
lgeneratelabel Indica si el control Label se genera automáticamente en tiempo de ejecución
nleftcolumn El Form se divide en 12 columnas virtuales (estilo Bootstrap) Nº de la columna donde se posiciona el control (con el label incluído, en caso de que el mismo estuviera a la izquierda)
obiz Clase de negocios que controla el control
cclassname Nombre de la Clase de Negocios
cclasslibrary Nombre de la librería donde se encuentra la Clase de Negocios
lautomaticdisplay Indica si utiliza la clase de negocios para el deploy automático
ncolumnsspan El Form se divide en 12 columnas virtuales. Indica cuantas columnas ocupa, con Label incluído
nlabelspan En caso que el label se posicione en la misma fila del control, cantidad de columnas que ocupa el label. (no se toma en cuenta si está arriba u abajo)
ntoprow Nº de fila donde se posiciona el control (Con el label incluido en caso caso de que el mismo estuviera arriba o abajo)\n
nwidth Ancho Total del Control en pixeles. (Label incluido)
nheight Alto Total del Control en pixeles. (Label incluido)
nrowspan En caso de controles tipo Grilla o EditBox, indica cuantas filas ocupa
nverticalalignment En caso de encontrarse en una fila con alto doble, porque el label se encuentra arriba o abajo, indica donde se alínea, en el caso de ocupar un alto simple.
lreadonly Si es .T., tiene preeminencia sobre las definiciones del diccionario de datos
lstr Si es .T., le añade al ControlSource el prefijo "Str_"
lusecuetext Muestra texto indicativo cuando está vacío
*initialize Inicializa el control desde Thisform.InitializeControls
*lcuevisible_assign 
*ccuetext_assign 
*afterbindcontrols Se ejecuta cada vez que se le asigna un valor a Thisform.BindControls
*obiz_access 
*initializerows Inicializa la propiedad Top para ubicarse en la fila correspondiente
*enabled_assign 
*visible_assign 
*cfieldname_access 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _textbox
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]
[START RESERVED1]
  ..\include\praxis.hnnfdV ..\include\foxpro.hvÊrûF ..\include\strings.h~ZOJ* ..\..\..\tools\namespaces\include\system.h±ÙF[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _40W12PH7X
[CLASS] form
[BASECLASS] form
[OBJNAME] _form
[START PROPERTIES]
Top = 0
Left = 0
Height = 360
Width = 567
DoCreate = .T.
ShowTips = .T.
Caption = "Form"
MinHeight = 360
MinWidth = 360
KeyPreview = .T.
BindControls = .F.
_memberdata =     1247<VFPData><memberdata name="initializecontrols" display="InitializeControls"/><memberdata name="bindcontrols" display="BindControls"/><memberdata name="bindcontrols_assign" display="BindControls_Assign"/><memberdata name="afterbindcontrols" display="AfterBindControls"/><memberdata name="on_ctrl_f10" display="On_Ctrl_F10"/><memberdata name="aceptar" display="Aceptar"/><memberdata name="cancelar" display="Cancelar"/><memberdata name="cerrar" display="Cerrar"/><memberdata name="process" display="Process"/><memberdata name="oreturn" display="oReturn"/><memberdata name="ocoltables" display="oColTables"/><memberdata name="ocoltables_access" display="oColTables_Access"/><memberdata name="gettable" display="GetTable"/><memberdata name="oregistro" display="oRegistro"/><memberdata name="cmodelo" display="cModelo"/><memberdata name="obiz" display="oBiz"/><memberdata name="obiz_access" display="oBiz_Access"/><memberdata name="ocontroles" display="oControles"/><memberdata name="ocontroles_access" display="oControles_Access"/><memberdata name="ctable" display="cTable"/><memberdata name="ctable_access" display="cTable_Access"/><memberdata name="lbindcontrols" display="lBindControls"/><memberdata name="ncolumna" display="nColumna"/></VFPData>

oreturn = .NULL.
ocoltables = .NULL.
oregistro = .NULL.
cmodelo = 
obiz = .NULL.
ocontroles = .NULL.
ctable = 
lbindcontrols = .F.
ncolumna = 0
Name = "_form"
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand as String

Try

	lcCommand = ""
	Thisform.InitializeControls()

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	
	
EndTry

ENDPROC
PROCEDURE KeyPress
#INCLUDE "FW\Comunes\Include\Praxis.h"

Lparameters nKeyCode, nShiftAltCtrl

If nShiftAltCtrl = KEY_CTRL_DOWN And nKeyCode = KEY_CTRL_F10
	Thisform.On_Ctrl_F10()

Else

Endif

ENDPROC
PROCEDURE afterbindcontrols
* RA 2014-03-20(15:25:26)
* Es llamado por BindControls_Assign, para que los controles que lo necesiten
* se cuelgen de éste evento con BindEvent()
ENDPROC
PROCEDURE bindcontrols_assign
Lparameters tBindControls

If Thisform.lBindControls
    This.BindControls = tBindControls
    Thisform.AfterBindControls()
Endif

ENDPROC
PROCEDURE cancelar
Thisform.Cerrar()
ENDPROC
PROCEDURE cerrar
Thisform.Visible = .F.
Thisform.Release()
ENDPROC
PROCEDURE ctable_access

If Empty( This.cTable )
	Local loBiz As oModelo Of "FrontEnd\Prg\Modelo.prg"
	loBiz = Thisform.oBiz
	This.cTable = loBiz.cTabla
	loBiz = Null
Endif
Return This.cTable

ENDPROC
PROCEDURE gettable
Lparameters cTabla As String

Local lcCommand As String,;
    lcPropiedad As String,;
    lcValor As String

Local loArchivo As Archivo Of "Clientes\Utiles\Prg\utRutina.prg",;
    loBiz As oModelo Of "FrontEnd\Prg\Modelo.prg",;
    loColTables As oColTables Of 'Tools\DataDictionary\prg\oColTables.prg',;
    loField As oField Of 'Tools\DataDictionary\prg\oField.prg'

Local llNew As Boolean

Try

    lcCommand 	= ""
    llNew 		= .F.

    If Empty( cTabla )
        loBiz 	= Thisform.oBiz
        cTabla 	= loBiz.cTabla
    Endif

    loColTables = This.oColTables

    loArchivo = loColTables.GetItem( cTabla )

    If Isnull( loArchivo )
        loArchivo 	= GetTable( cTabla, .T. )
        llNew 		= .T.
    Endif

    If Isnull( loArchivo )
        loBiz 		= Thisform.oBiz
        cTabla 		= loBiz.cTabla
        loArchivo 	= GetTable( cTabla, .T. )
        llNew 		= .T.
    Endif

    If llNew And !Isnull( loArchivo )
    	loColTables.Add( loArchivo, Lower( cTabla ) )
        If FileExist( "Personalizar_Front_End.DBF" )
            TEXT To lcCommand NoShow TextMerge Pretext 15
				Select 	Lower( Modelo ) as Modelo,
						Lower( Tabla ) as Tabla,
						Lower( Campo ) as Campo,
						Lower( Propiedad ) as Propiedad,
						Valor
					From Personalizar_Front_End
					Where !Deleted() and Lower( Alltrim( Tabla )) == Lower( cTabla )
					Order By Modelo,Tabla,Campo,Propiedad
					Into Cursor cPFE ReadWrite
            ENDTEXT

            &lcCommand
            lcCommand = ""

            Select cPFE
            Scan For !Empty( Campo )
                loField = loArchivo.GetField( Lower( Alltrim( Campo )))

                lcPropiedad = Alltrim( Propiedad )
                lcValor 	= Alltrim( Valor )

                TEXT To lcCommand NoShow TextMerge Pretext 15
				loField.<<lcPropiedad>> = '<<lcValor>>'
                ENDTEXT

                &lcCommand
                lcCommand = ""

            Endscan

        Endif

    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject ( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    loBiz = Null
	loField = Null
	loColTables = Null
	
	Use in Select( "cPFE" )
	Use in Select( "Personalizar_Front_End.DBF" )

Endtry

Return loArchivo


ENDPROC
PROCEDURE obiz_access
Local lcCommand as String

Try

	lcCommand = ""
	
	If Vartype( This.oBiz ) # "O"
		This.oBiz = GetEntity( This.cModelo )
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

return This.oBiz

ENDPROC
PROCEDURE ocoltables_access
Local lcCommand as String

Try

	lcCommand = ""
	If IsNull( This.oColTables )
		This.oColTables = Newobject( "oColTables", 'Tools\DataDictionary\prg\oColTables.prg' )
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

return This.oColTables

ENDPROC
PROCEDURE ocontroles_access
Local lcCommand As String

Try

	lcCommand = ""
	If Isnull( This.oControles )
		This.oControles = Createobject( "Collection" )
	Endif

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


Endtry

Return This.oControles

ENDPROC
PROCEDURE on_ctrl_f10
#INCLUDE "FW\Comunes\Include\Praxis.h"

Try

	Define Popup Emergente SHORTCUT Relative From Wrows()/2, Wcols()/2

	*!*	Definir el menu.
	Define Bar 1 Of Emergente Prompt "Cancelar \<Proceso" Key P, "" ;
		message "Cancela el proceso en ejecución."

	Define Bar 2 Of Emergente Prompt "Cerrar \<Módulo" Key M, "" ;
		message "Cierra el Módulo actual."

	Define Bar 3 Of Emergente Prompt "\-"

	Define Bar 4 Of Emergente Prompt "Entorno de \<Datos" Key D, "" ;
		message "Abrir el Entorno de Datos."

	On Selection Bar 1 Of Emergente Error "Proceso cancelado por el usuario"
	On Selection Bar 2 Of Emergente Quit
	On Selection Bar 4 Of Emergente Set

	Activate Popup Emergente


Catch To oErr
	Thisform.Release()

Finally
	Deactivate Popup Emergente
	Release Popups Emergente Extended


Endtry

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
_memberdata XML Metadata for customizable properties
oreturn
ocoltables
oregistro
cmodelo
obiz
ocontroles Colección de controles
ctable
lbindcontrols Indica si los controles pueden activar o desactivar la propiedad Thisform.BindControls
ncolumna
*initializecontrols Inicializa los controles Bindeados al evento
*bindcontrols_assign 
*afterbindcontrols Se ejecuta después de asignar un valor a BindControls
*on_ctrl_f10 
*aceptar 
*cancelar 
*cerrar 
*process 
*ocoltables_access 
*gettable 
*obiz_access 
*ocontroles_access 
*ctable_access 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _form
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]
[START RESERVED1]
  ..\include\praxis.hN!nfdV ..\include\foxpro.hV"ÊrûF ..\include\strings.h^#ZOJ* ..\..\..\tools\namespaces\include\system.hf$±ÙF[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _40W1372R7
[CLASS] label
[BASECLASS] label
[OBJNAME] _label
[START PROPERTIES]
BackStyle = 0
Caption = "Label1"
Height = 17
Width = 48
_memberdata =      532<VFPData><memberdata name="onclick" display="OnClick"/><memberdata name="nforecolor" display="nForeColor"/><memberdata name="nhovercolor" display="nHoverColor"/><memberdata name="lhyperlink" display="lHyperlink" favorites="True"/><memberdata name="ocontrol" display="oControl"/><memberdata name="lvalid" display="lValid"/><memberdata name="ncolumnspan" display="nColumnSpan"/><memberdata name="nheight" display="nHeight"/><memberdata name="nleftcolumn" display="nLeftColumn"/><memberdata name="ntoprow" display="nTopRow"/></VFPData>
nforecolor = 0
nhovercolor = 0
lhyperlink = .F.
ocontrol = .NULL.
lvalid = .F.
ncolumnspan = 2
nheight = 24
nleftcolumn = 1
ntoprow = 1
Name = "_label"
[END PROPERTIES]
[START METHODS]
PROCEDURE Click

This.OnClick()
ENDPROC
PROCEDURE Init
Local lcCommand As String

Try

	lcCommand = ""

	If This.lHyperlink
		Declare Integer GetSysColor In 'user32' Integer nIndex
		This.nForeColor 	= This.ForeColor && GetSysColor( 26 ) && COLOR_HOTLIGHT
		This.nHoverColor 	= GetSysColor( 29 ) && COLOR_MENUHILIGHT
	Endif

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE MouseEnter
Lparameters nButton, nShift, nXCoord, nYCoord

Local lcCommand As String

Try

	lcCommand = ""
	If This.lHyperlink
		With This
			.MousePointer 	= 15
			.ForeColor 		= .nHoverColor
			.FontUnderline 	= .T.
			.Caption 		= .Caption
		Endwith
	Endif

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE MouseLeave
Lparameters nButton, nShift, nXCoord, nYCoord

Local lcCommand As String

Try

	lcCommand = ""
	If This.lHyperlink
		With This
			.MousePointer	= 0
			.ForeColor 		= .nForeColor
			.FontUnderline 	= .F.
			.Caption 		= .Caption
		Endwith
	EndIf


Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE onclick
Local lcCommand As String

Try

	lcCommand = ""
	Try

		This.oControl.SetFocus()

		If !Empty( This.oControl.ToolTipText )
			Wait Window Nowait Noclear This.oControl.ToolTipText
		Endif

	Catch To oErr

	Finally

	Endtry


Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
_memberdata XML Metadata for customizable properties
nforecolor COLOR_HOTLIGHT
nhovercolor COLOR_MENUHILIGHT
lhyperlink Indica si se comporta como un Hyperlink
ocontrol Referencia al objeto en el que hace foco el metoso OnClick()
lvalid Indica si el control contiene un valor válido luego de dejar el foco
ncolumnspan El Form se divide en 12 columnas virtuales. Indica cuantas columnas ocupa, con Label incluído
nheight Alto Total del Control en pixeles. (Label incluido)
nleftcolumn El Form se divide en 12 columnas virtuales (estilo Bootstrap) Nº de la columna donde se posiciona el control (con el label incluído, en caso de que el mismo estuviera a la izquierda)
ntoprow Nº de fila donde se posiciona el control (Con el label incluido en caso caso de que el mismo estuviera arriba o abajo)\n
*onclick Metodo abstracto llamado por el evento Click()
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _label

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _40X11KRJI
[CLASS] combobox
[BASECLASS] combobox
[OBJNAME] _combobox
[START PROPERTIES]
Enabled = .T.
Height = 24
Visible = .T.
Width = 100
DisabledBackColor = 255,255,255
DisabledForeColor = 0,0,255
ItemTips = .T.
olabel = .NULL.
_memberdata =     2710<VFPData><memberdata name="olabel" display="oLabel"/><memberdata name="initialize" display="Initialize"/><memberdata name="cfieldname" display="cFieldName"/><memberdata name="ctable" display="cTable" favorites="True"/><memberdata name="llabelautosize" display="lLabelAutosize"/><memberdata name="nalignment" display="nAlignment"/><memberdata name="nlabelposition" display="nLabelPosition" favorites="True"/><memberdata name="ofield" display="oField"/><memberdata name="cargarcombo" display="CargarCombo"/><memberdata name="obiz" display="oBiz"/><memberdata name="obiz_access" display="oBiz_Access"/><memberdata name="cclassname" display="cClassName"/><memberdata name="cclasslibrary" display="cClassLibrary"/><memberdata name="cmodelo" display="cModelo"/><memberdata name="lautomaticdisplay" display="lAutomaticDisplay"/><memberdata name="ncolumnsspan" display="nColumnsSpan" favorites="True"/><memberdata name="nheight" display="nHeight"/><memberdata name="nlabelspan" display="nLabelSpan" favorites="True"/><memberdata name="nleftcolumn" display="nLeftColumn" favorites="True"/><memberdata name="nrowspan" display="nRowSpan" favorites="True"/><memberdata name="ntoprow" display="nTopRow" favorites="True"/><memberdata name="nverticalalignment" display="nVerticalAlignment"/><memberdata name="nwidth" display="nWidth"/><memberdata name="initializerows" display="InitializeRows"/><memberdata name="afterbindcontrols" display="AfterBindControls"/><memberdata name="omodelo" display="oModelo"/><memberdata name="omodelo_access" display="oModelo_Access"/><memberdata name="cargarlistbox" display="CargarListBox"/><memberdata name="ofiltros" display="oFiltros"/><memberdata name="filtrar" display="Filtrar"/><memberdata name="addfilter" display="AddFilter"/><memberdata name="removefilter" display="RemoveFilter"/><memberdata name="lischild" display="lIsChild"/><memberdata name="oparent" display="oParent"/><memberdata name="vincularalcombopadre" display="VincularAlComboPadre"/><memberdata name="sincronizarconelpadre" display="SincronizarConElPadre"/><memberdata name="lvalid" display="lValid"/><memberdata name="cdisplayfieldname" display="cDisplayFieldName"/><memberdata name="enabled" display="Enabled"/><memberdata name="enabled_assign" display="Enabled_Assign"/><memberdata name="lalreadyloaded" display="lAlreadyLoaded"/><memberdata name="uparentid" display="uParentId"/><memberdata name="lreadonly" display="lReadOnly"/><memberdata name="visible" display="Visible"/><memberdata name="visible_assign" display="Visible_Assign"/><memberdata name="oacciones" display="oAcciones"/><memberdata name="cfieldname_access" display="cFieldName_Access"/><memberdata name="llazyload" display="lLazyLoad"/></VFPData>

cfieldname = 
ctable = 
llabelautosize = .T.
nalignment = 0
nlabelposition = 2
ofield = .NULL.
obiz = .NULL.
cclassname = oCB_ComboBox
cclasslibrary = FW\Comunes\vcx\_Controles_Base.prg
cmodelo = 
lautomaticdisplay = .T.
ncolumnsspan = 8
nheight = 24
nlabelspan = 4
nleftcolumn = 1
nrowspan = 1
ntoprow = 1
nverticalalignment = 0
nwidth = 360
omodelo = .NULL.
ofiltros = .NULL.
lischild = .F.
oparent = .NULL.
lvalid = .F.
cdisplayfieldname = Nombre
lalreadyloaded = .F.
uparentid = .F.
lreadonly = .F.
oacciones = .NULL.
llazyload = .T.
Name = "_combobox"
[END PROPERTIES]
[START METHODS]
PROCEDURE Destroy
This.oBiz = Null
This.oField = Null
This.oLabel = Null
This.oModelo = Null
This.oFiltros = Null
This.oAcciones = Null
This.oParent = Null

ENDPROC
PROCEDURE DropDown
Local lcCommand As String

Try

    lcCommand = ""

    loField = This.oField

    If IsEmpty( loField.oChoices )
        If This.lLazyLoad
            This.lLazyLoad = .F.
            This.CargarCombo( .T. )

        Endif
    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally


Endtry

ENDPROC
PROCEDURE GotFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String

Try

	lcCommand = ""
*!*		This.ItemBackColor = _CB_ONFOCUS_BACKCOLOR
*!*		This.ItemForeColor = _CB_ONFOCUS_FORECOLOR
	
*!*		This.SelectedItemBackColor = _CB_ONFOCUS_BACKCOLOR
*!*		This.SelectedItemForeColor = _CB_ONFOCUS_FORECOLOR
	
	Try

		This.oLabel.FontBold = .T.

	Catch To oErr

	Finally

	EndTry

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = _NewObject ( 'ErrorHandler', 'ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE Init
Local lcCommand As String

Try

	lcCommand = ""
	This.BoundColumn 	= 2
	This.BoundTo 		= .T.
	This.ColumnCount 	= 1
	This.RowSourceType 	= 0
	This.RowSource 		= ""
	This.Style			= 2
	

	This.oFiltros = Newobject( "CollectionBase", "Tools\Namespaces\Prg\CollectionBase.Prg" )

	If This.lIsChild
		This.VincularAlComboPadre()
		Bindevent( This.oParent, 'InteractiveChange', This, "SincronizarConElPadre", 1 )
		Bindevent( This.oParent, 'InitializeRows', This, 'InitializeRows', 1 )
		Bindevent( This.oParent, 'Initialize', This, 'Initialize', 1 )
		
	Else
		If Pemstatus( Thisform, 'InitializeControls', 5 )
			Bindevent( Thisform, 'InitializeControls', This, 'Initialize', 1 )
		Endif

		If Pemstatus( Thisform, 'InitializeRows', 5 )
			Bindevent( Thisform, 'InitializeRows', This, 'InitializeRows', 1 )
		Endif

	Endif

	If Pemstatus( Thisform, 'AfterBindControls', 5 )
		Bindevent( Thisform, 'AfterBindControls', This, 'AfterBindControls', 1 )
	Endif

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = _NewObject ( 'ErrorHandler', 'ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE LostFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String

Try

	lcCommand = ""
*!*		This.ItemBackColor = _CB_BACKCOLOR
*!*		This.ItemForeColor = _CB_FORECOLOR
*!*		
*!*		This.SelectedItemBackColor = _CB_BACKCOLOR
*!*		This.SelectedItemForeColor = _CB_FORECOLOR
	
	
	Try

		This.oLabel.FontBold = .F.

	Catch To oErr

	Finally

	EndTry

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = _NewObject ( 'ErrorHandler', 'ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	Wait Clear


Endtry

ENDPROC
PROCEDURE MouseDown
#INCLUDE "FW\Comunes\Include\Praxis.h"

Lparameters nButton, nShift, nXCoord, nYCoord

Local lcCommand As String
Local loModelo As oModelo Of "FrontEnd\Prg\Modelo.prg",;
loRegistro as Object
Local lnOption as Integer

Try

	lcCommand = ""

	Do Case
		Case nButton = 2 And nShift = 0 && Right Click
		
			loModelo = This.oModelo
			
			loRegistro = CreateObject( "Empty" )
			
			Define Popup Emergente SHORTCUT Relative From Mrow(),Mcol()

			Define Bar ABM_ALTA Of Emergente ;
				Prompt "Agregar " + Alltrim( loModelo.cTituloEnForm ) ;
				Picture "v:\CloudFox\FW\Comunes\image\bmp\new.bmp"
				
			Define Bar ABM_MODIFICACION Of Emergente ;
				Prompt "Editar " + Alltrim( loModelo.cTituloEnForm ) ;
				Picture "v:\CloudFox\FW\Comunes\image\bmp\edit.bmp"
				
			Define Bar 99 Of Emergente Prompt "\-"	

			Define Bar 10 Of Emergente ;
				Prompt "Refrescar Datos" ;
				Picture "v:\CloudFox\FW\Comunes\image\ico\refresh.ico"

			On Selection Bar ABM_ALTA Of Emergente lnOption = ABM_ALTA
			On Selection Bar ABM_MODIFICACION Of Emergente lnOption = ABM_MODIFICACION
			On Selection Bar 10 Of Emergente lnOption = 10

			Activate Popup Emergente

			If Not Empty( lnOption )
				 	
				Do Case
				Case lnOption = ABM_ALTA
					AddProperty( loRegistro, loModelo.cPKField )
					AddProperty( loRegistro, "ABM", ABM_ALTA )
					loModelo.LaunchEditForm( loRegistro )

				Case lnOption = ABM_MODIFICACION
					AddProperty( loRegistro, loModelo.cPKField, This.Value )
					AddProperty( loRegistro, "ABM", ABM_MODIFICACION )
					loModelo.LaunchEditForm( loRegistro )

				Case lnOption = 10
					This.CargarCombo()

				EndCase

			Endif


	Endcase

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loModelo = Null


Endtry


ENDPROC
PROCEDURE addfilter
Lparameters loFilter as Object
Local lcCommand as String
Local loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg

Try

	lcCommand = ""
	This.RemoveFilter( loFilter.Nombre )
	loFiltros = This.oFiltros
	loFiltros.AddItem( loFilter, Lower( loFilter.Nombre ))

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loFilter 	= Null
	loFiltros 	= Null


EndTry

ENDPROC
PROCEDURE afterbindcontrols
Local lcCommand As String

Try

	lcCommand = ""
	If This.lIsChild
		This.SincronizarConElPadre()
	Endif

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE cargarcombo
Lparameters lForceLoad As Boolean

#INCLUDE "FW\Comunes\Include\Praxis.h"


Local lcCommand As String,;
    lcAlias As String,;
    lcTo_Field As String,;
    lcStr_Field As String ,;
    lcControlSource As String

Local loModelo As oModelo Of "FrontEnd\Prg\Modelo.prg",;
    loCboPadre As _combobox Of "v:\cloudfox\fw\comunes\vcx\_controles_base.vcx",;
    loParam As Object,;
    loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg,;
    loField As oField Of 'Tools\DataDictionary\prg\oField.prg',;
    loChoices As Object,;
    loReturn As Object

Local llCarga As Boolean
Local lnLen As Integer,;
    i As Integer

   Local luValue as Variant


Try

    lcCommand = ""
    llCarga = .T.

    lcControlSource = ""
    luValue=0

    If Pemstatus( This.Parent, "lLazyLoad", 5 )
        llCarga = !This.Parent.lLazyLoad
    Endif

    loField = This.oField

    If IsEmpty( loField.oChoices )

        loModelo = This.oModelo
        loModelo.cTrace = Program()

        If This.lIsChild
            If !Empty( This.uParentId )
                loModelo.oParent.nId = This.uParentId

            Else
                llCarga = .F.

            Endif
        Endif

        If llCarga
            If This.lLazyLoad And !lForceLoad
                Try

                    * Si el formulario trajo la FK y el nombre de la FK
                    * los carga de allí

                    If Lower( Right( This.cFieldName, 3 )) == "_id"
                        lcStr_Field = Substr( This.cFieldName, 1, Len( This.cFieldName ) - 3 )

                    Else
                        lcStr_Field = This.cFieldName

                    Endif

                    lcControlSource = ""
                    lnLen = GetWordCount( This.ControlSource, "." )

                    For i = 1 to lnLen - 1
                    	lcControlSource = lcControlSource + GetWordNum( This.ControlSource, i, "." ) + "."
                    EndFor

                    This.AddItem( Evaluate( lcControlSource + "Str_" + lcStr_Field ))
                    This.List( This.NewIndex, 2 ) = Transform( Evaluate( lcControlSource + This.cFieldName  ) )

*!*	                    This.AddItem( Evaluate( "Thisform.oRegistro.str_" + lcStr_Field ))
*!*	                    This.List( This.NewIndex, 2 ) = Transform( Evaluate( "Thisform.oRegistro." + This.cFieldName  ) )

                    llCarga = .F.

                Catch To oErr

                Finally

                Endtry

            Endif
        Endif

        If llCarga

            If Empty( loField.cFK_ToField )
                lcTo_Field = loModelo.cPKField

            Else
                lcTo_Field = loField.cFK_ToField

            Endif

            This.Filtrar( lForceLoad )

            loFiltros = This.oFiltros

            loParam = Createobject( "Empty" )
            AddProperty( loParam, "oFilterCriteria", loFiltros )

            lcAlias = loModelo.cMainCursorName + Sys(2015)
            AddProperty( loParam, "cAlias", lcAlias )

            loReturn = loModelo.GetByWhere( loParam )

            This.Clear()
            If loField.lNull
                This.AddItem( "---------" )
                This.List( This.NewIndex, 2 ) = Transform( 0 )
                luValue = Transform( 0 )
            Endif

            If loReturn.lOk
                If !This.lLazyLoad Or lForceLoad

                    Select Alias( lcAlias )
                    Locate
                    Scan
                        If Empty( luValue )
							luValue = Transform( Evaluate( lcTo_Field ) )
                        EndIf

                        This.AddItem( Alltrim( Evaluate( lcAlias + "." + This.cDisplayFieldName )))
                        This.List( This.NewIndex, 2 ) = Transform( Evaluate( lcTo_Field ) )
                    Endscan

                Else
                    This.AddItem( Evaluate( "loReturn.oRegistro." + This.cDisplayFieldName ))
                    This.List( This.NewIndex, 2 ) = Transform( Evaluate( "loReturn.oRegistro." + lcTo_Field  ) )

                    luValue = Transform( Evaluate( lcTo_Field ) )

                Endif

                If IsEmpty( Evaluate( This.ControlSource ))
                    TEXT To lcCommand NoShow TextMerge Pretext 15
                	<<This.ControlSource>> = <<luValue>>
                    ENDTEXT

                    &lcCommand
                    lcCommand = ""

                Endif
            Endif
        Endif

    Else
        For Each loChoice In loField.oChoices
            This.AddItem( Alltrim( loChoice.Descripcion ))
            This.List( This.NewIndex, 2 ) = Transform( loChoice.Valor )
        Endfor

    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    loFiltro = Null
    loFiltros = Null
    loParam = Null
    loModelo = Null

    If !Empty( lcAlias )
        Use In Select( lcAlias )
    Endif


Endtry

ENDPROC
PROCEDURE cfieldname_access
If Empty( This.cFieldName )
    This.cFieldName = Substr( This.Name, 4 )
EndIf

Return This.cFieldName

ENDPROC
PROCEDURE enabled_assign
lparameters tEnabled
This.Enabled = tEnabled

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.FontBold = !tEnabled
EndIf

If This.Enabled
	This.oAcciones = Null

Else
	Local loMenu as _editbutton OF v:\cloudfox\fw\comunes\vcx\_controles_base.vcx
	
	loMenu = NewObject( "_editbutton", "fw\comunes\vcx\_controles_base.vcx" )
	loMenu.oParent = This
	loMenu.Top = This.Top
	loMenu.Left = This.Left + This.Width
	loMenu.Visible = .T.
	
Endif



ENDPROC
PROCEDURE filtrar
Lparameters lForceLoad As Boolean

Local lcCommand As String

Local loFiltro As Object,;
    loModelo As oModelo Of "FrontEnd\Prg\Modelo.prg"
Local lnCurrentSize As Integer
Local luValue As Variant

Try

    lcCommand = ""

    loFiltro = Createobject( "Empty" )
    AddProperty( loFiltro, "Nombre", "Activos" )
    AddProperty( loFiltro, "FieldName", "activo" )
    AddProperty( loFiltro, "FieldRelation", "==" )
    AddProperty( loFiltro, "FieldValue", "True" )

    This.AddFilter( loFiltro )

    If !This.lLazyLoad Or lForceLoad
        lnCurrentSize = 1000
        This.RemoveFilter( "__Pk__" )
        This.RemoveFilter( "__First__" )

    Else
        lnCurrentSize = 1

        Try

            luValue = Evaluate( This.ControlSource )

        Catch To oErr

        	Try

        		luValue = Evaluate( This.ControlSource + "_id" )
        		This.ControlSource = This.ControlSource + "_id"

        	Catch To oErr1
        		Throw oErr

        	Finally

        	EndTry

        Finally

        Endtry

        If !IsEmpty( luValue )
            loFiltro = Createobject( "Empty" )
            AddProperty( loFiltro, "Nombre", "__Pk__" )
            AddProperty( loFiltro, "FieldName", "pk" )
            AddProperty( loFiltro, "FieldRelation", "=" )
            AddProperty( loFiltro, "FieldValue", Transform( luValue ))

            This.AddFilter( loFiltro )

        Else
            loFiltro = Createobject( "Empty" )
            AddProperty( loFiltro, "Nombre", "__First__" )
            AddProperty( loFiltro, "FieldName", "first" )
            AddProperty( loFiltro, "FieldRelation", "=" )
            AddProperty( loFiltro, "FieldValue", "True" )

            This.AddFilter( loFiltro )

            This.lLazyLoad = .F.

        Endif

    Endif

    loFiltro = Createobject( "Empty" )
    AddProperty( loFiltro, "Nombre", "SetPageSize" )
    AddProperty( loFiltro, "FieldName", "current_size" )
    AddProperty( loFiltro, "FieldRelation", "=" )
    AddProperty( loFiltro, "FieldValue", Transform( lnCurrentSize ) )

    This.AddFilter( loFiltro )

    loFiltro = Createobject( "Empty" )
    AddProperty( loFiltro, "Nombre", "Combo" )
    AddProperty( loFiltro, "FieldName", "combo" )
    AddProperty( loFiltro, "FieldRelation", "=" )
    AddProperty( loFiltro, "FieldValue", "True" )

    This.AddFilter( loFiltro )


Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    loFiltro = Null
    loModelo = Null

Endtry

ENDPROC
PROCEDURE initialize
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

    lcCommand = ""

    If This.lAutomaticDisplay
        If Empty( This.cTable )
            This.cTable = This.Parent.cTable
        Endif

        loBiz = This.oBiz
        loBiz.Initialize()
        If Empty( This.ControlSource )
            Do Case
                Case Pemstatus( Thisform.oRegistro, This.cFieldName, 5 )
                    * No hacer Nada

                Case Pemstatus( Thisform.oRegistro, This.cFieldName + "_Id", 5 )
                    This.cFieldName = This.cFieldName + "_Id"

                Case Pemstatus( Thisform.oRegistro, This.cFieldName + "_Str", 5 )
                    This.cFieldName = This.cFieldName + "_Str"

            EndCase

            This.ControlSource = "Thisform.oRegistro." + This.cFieldName

        Endif

        Thisform.oControles.Add( This, Lower( This.Parent.Name ) + "_" + Lower( This.Name ))

        If !This.lIsChild
            This.CargarCombo( This.lLazyLoad )
        Endif
    Endif

Catch To oErr
    Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
    loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
    loError.Cremark = lcCommand
    loError.Process( oErr )
    Throw loError

Finally
    loBiz = Null

Endtry

ENDPROC
PROCEDURE initializerows
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""

	loBiz = This.oBiz
	loBiz.InicializarFilas()
	
Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null
	This.oBiz = Null

Endtry

ENDPROC
PROCEDURE obiz_access
Local lcCommand as String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	If Vartype( This.oBiz ) # "O"
		loBiz = NewObject( This.cClassName, This.cClassLibrary )
 		loBiz.oControl 	= This
 		loBiz.oThisForm = Thisform
		This.oBiz = loBiz
	EndIf
	
	If IsEmpty( This.oBiz.oThisForm )
		This.oBiz.oThisForm = Thisform
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loBiz = Null


EndTry

Return This.oBiz
ENDPROC
PROCEDURE omodelo_access
Local lcCommand as String
Local loField As oField Of 'Tools\DataDictionary\prg\oField.prg'

Try

	lcCommand = ""
	If IsNull( This.oModelo )
		If Empty( This.cModelo )
			loField = This.oField
			This.cModelo = loField.cFK_Modelo
		EndIf
	
		This.oModelo = GetEntity( This.cModelo )
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loField = Null


EndTry

return This.oModelo

ENDPROC
PROCEDURE removefilter
Lparameters cFilterName as String
Local lcCommand as String
Local loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg

Try

	lcCommand = ""
	loFiltros = This.oFiltros
	loFiltros.RemoveItem( Lower( cFilterName ))

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loFiltros = Null


EndTry

ENDPROC
PROCEDURE sincronizarconelpadre
Local lcCommand As String
Local loCboPadre As _combobox Of "v:\cloudfox\fw\comunes\vcx\_controles_base.vcx"
Local luParentId As Variant
Local llSigue as Boolean

Try

    lcCommand = ""
    If This.lIsChild
        loCboPadre = This.oParent
        luParentId = This.uParentId

        If Empty( This.uParentId )
            This.uParentId = loCboPadre.Value
        EndIf

        llSigue = Vartype( luParentId ) == Vartype( This.uParentId )
        If llSigue
			llSigue = luParentId # loCboPadre.Value
			
        Else
        	llSigue = .T.

        EndIf

        If llSigue
        	This.uParentId = loCboPadre.Value
            This.CargarCombo()
            This.Refresh()
            If Empty( This.ListIndex )
                This.ListIndex = 1
            Endif
        Endif
    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally


Endtry

ENDPROC
PROCEDURE vincularalcombopadre
Local lcCommand as String

Try

	lcCommand = ""
	*This.oParent = This.Parent.cboPadre
	

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE visible_assign
lparameters tVisible
This.Visible = tVisible

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.Visible = tVisible
EndIf

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
olabel Referencia a la etiqueta asociada al control
_memberdata XML Metadata for customizable properties
cfieldname
ctable
llabelautosize
nalignment
nlabelposition Posición del Label con respecto al control. 2 - Izquierda, 5 - Derecha, 6 - Arriba, 9 - Abajo	
ofield
obiz
cclassname
cclasslibrary
cmodelo
lautomaticdisplay Indica si utiliza la clase de negocios para el deploy automático
ncolumnsspan El Form se divide en 12 columnas virtuales. Indica cuantas columnas ocupa, con Label incluído
nheight Alto Total del Control en pixeles. (Label incluido)
nlabelspan En caso que el label se posicione en la misma fila del control, cantidad de columnas que ocupa el label. (no se toma en cuenta si está arriba u abajo) 0: No lleva etiqueta
nleftcolumn Columna donde se posiciona el control (con el label incluído, en caso de que el mismo estuviera a la izquierda)
nrowspan En caso de controles tipo Grilla o EditBox, indica cuantas filas ocupa
ntoprow Nº de fila donde se posiciona el control (Con el label incluido en caso caso de que el mismo estuviera arriba o abajo)
nverticalalignment En caso de encontrarse en una fila con alto doble, porque el label se encuentra arriba o abajo, indica donde se alínea, en el caso de ocupar un alto simple. 0: Abajo; 1: Arriba
nwidth Ancho Total del Control en pixeles. (Label incluido)
omodelo Referencia a la clase de Negocios para poder cargar el combo
ofiltros
lischild Indica si es un Combo Hijo asociado a otro Combo
oparent Referencia al control Combo que es el padre de éste combo
lvalid Indica si el control contiene un valor válido luego de dejar el foco
cdisplayfieldname Nombre del campo que se muestra
lalreadyloaded Es un flag para que AfterBindControls no dispare CargarCombo()
uparentid Pk del Combo padre
lreadonly
oacciones Menú de opciones cuando el control tiene Enabled = .F.
llazyload
*initialize 
*cargarcombo 
*obiz_access 
*initializerows 
*afterbindcontrols 
*omodelo_access 
*cargarlistbox 
*filtrar 
*addfilter 
*removefilter 
*vincularalcombopadre Debe ser llenado por el desarrollador y vincularlo al Combo Padre
*sincronizarconelpadre 
*enabled_assign 
*visible_assign 
*cfieldname_access 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _combobox
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]
[START RESERVED1]
  ..\include\praxis.hÆynfdV ..\include\foxpro.hÎzÊrûF ..\include\strings.hÖ{ZOJ* ..\..\..\tools\namespaces\include\system.hÞ|±ÙF[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _40X13YFU6
[CLASS] checkbox
[BASECLASS] checkbox
[OBJNAME] _checkbox
[START PROPERTIES]
Height = 24
Width = 60
AutoSize = .F.
Alignment = 0
BackStyle = 0
Caption = "Check1"
Enabled = .T.
Visible = .T.
DisabledForeColor = 0,0,255
DisabledBackColor = 255,255,255
lhyperlink = .F.
_memberdata =     1799<VFPData><memberdata name="lhyperlink" display="lHyperlink"/><memberdata name="nforecolor" display="nForeColor"/><memberdata name="nhovercolor" display="nHoverColor"/><memberdata name="initialize" display="Initialize"/><memberdata name="lnull" display="lNull"/><memberdata name="nvalue" display="nValue"/><memberdata name="ctable" display="cTable"/><memberdata name="cfieldname" display="cFieldName"/><memberdata name="ofield" display="oField"/><memberdata name="ofield_access" display="oField_Access"/><memberdata name="cclassname" display="cClassName"/><memberdata name="cclasslibrary" display="cClassLibrary"/><memberdata name="lautomaticdisplay" display="lAutomaticDisplay"/><memberdata name="ncolumnsspan" display="nColumnsSpan"/><memberdata name="nheight" display="nHeight"/><memberdata name="nlabelspan" display="nLabelSpan"/><memberdata name="nleftcolumn" display="nLeftColumn"/><memberdata name="nrowspan" display="nRowSpan"/><memberdata name="ntoprow" display="nTopRow"/><memberdata name="nverticalalignment" display="nVerticalAlignment"/><memberdata name="nwidth" display="nWidth"/><memberdata name="nlabelposition" display="nLabelPosition"/><memberdata name="obiz" display="oBiz"/><memberdata name="obiz_access" display="oBiz_Access"/><memberdata name="initializerows" display="InitializeRows"/><memberdata name="afterbindcontrols" display="AfterBindControls"/><memberdata name="olabel" display="oLabel"/><memberdata name="lvalid" display="lValid"/><memberdata name="enabled" display="Enabled"/><memberdata name="enabled_assign" display="Enabled_Assign"/><memberdata name="lreadonly" display="lReadOnly"/><memberdata name="visible" display="Visible"/><memberdata name="visible_assign" display="Visible_Assign"/><memberdata name="cfieldname_access" display="cFieldName_Access"/></VFPData>
nforecolor = 0
nhovercolor = 0
lnull = .F.
nvalue = 0
ctable = 
cfieldname = 
ofield = .NULL.
cclassname = oCB_CheckBox
cclasslibrary = FW\Comunes\vcx\_Controles_Base.prg
lautomaticdisplay = .T.
ncolumnsspan = 12
nheight = 24
nlabelspan = 4
nleftcolumn = 1
nrowspan = 1
ntoprow = 1
nverticalalignment = 0
nwidth = 360
nlabelposition = 2
obiz = .NULL.
olabel = .NULL.
lvalid = .F.
lreadonly = .F.
Name = "_checkbox"
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
If !Empty( This.ToolTipText )
	Wait Window Nowait Noclear This.ToolTipText
EndIf

If This.lNull
	Do Case
	Case This.nValue = 0
		This.nValue = 1

	Case This.nValue = 1
		This.nValue = 2

	Case This.nValue = 2
		This.nValue = 0

	EndCase
	
	This.Value = This.nValue
EndIf

ENDPROC
PROCEDURE Destroy
This.oBiz = Null
This.oField = Null
This.oLabel = Null
ENDPROC
PROCEDURE GotFocus
This.FontBold = .T.

Try

    This.oLabel.FontBold = .T.

Catch To oErr

Finally

Endtry

ENDPROC
PROCEDURE Init
Local lcCommand As String

Try

	lcCommand = ""

	If This.lHyperlink
		Declare Integer GetSysColor In 'user32' Integer nIndex
		This.nForeColor 	= This.ForeColor && GetSysColor( 26 ) && COLOR_HOTLIGHT
		This.nHoverColor 	= GetSysColor( 29 ) && COLOR_MENUHILIGHT
		This.MousePointer 	= 15
		*!*			This.ForeColor 		= Rgb( 0, 102, 204 )
	EndIf
	
	If Pemstatus( Thisform, 'InitializeControls', 5 )
		Bindevent( Thisform, 'InitializeControls', This, 'Initialize', 1 )
	Endif

	If Pemstatus( Thisform, 'InitializeRows', 5 )
		Bindevent( Thisform, 'InitializeRows', This, 'InitializeRows', 1 )
	Endif

	If Pemstatus( Thisform, 'AfterBindControls', 5 )
		Bindevent( Thisform, 'AfterBindControls', This, 'AfterBindControls', 1 )
	Endif


Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE LostFocus
This.FontBold = .F.
Try

    This.oLabel.FontBold = .F.

Catch To oErr

Finally

Endtry

Wait Clear

ENDPROC
PROCEDURE MouseEnter
Lparameters nButton, nShift, nXCoord, nYCoord

Local lcCommand As String

Try

	lcCommand = ""
	With This
		.ForeColor 		= .nHoverColor
		.FontUnderline 	= .T.
		.Caption 		= .Caption
	Endwith

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE MouseLeave
Lparameters nButton, nShift, nXCoord, nYCoord

Local lcCommand As String

Try

	lcCommand = ""
	With This
		.ForeColor 		= .nForeColor
		.FontUnderline 	= .F.
		.Caption 		= .Caption
		Wait Clear
	Endwith


Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE afterbindcontrols
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE cfieldname_access
If Empty( This.cFieldName )
    This.cFieldName = Substr( This.Name, 4 )
EndIf

Return This.cFieldName

ENDPROC
PROCEDURE enabled_assign
lparameters tEnabled
This.Enabled = tEnabled

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.FontBold = !tEnabled
EndIf

ENDPROC
PROCEDURE initialize
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""

	If This.lAutomaticDisplay
		If Empty( This.cTable )
			This.cTable = This.Parent.cTable
		EndIf

		loBiz = This.oBiz
		loBiz.Initialize()

	EndIf


	If !PemStatus( Thisform, "oRegistro", 5 )
		AddProperty( Thisform, "oRegistro", CreateObject( "Empty" ) )
	EndIf
	
	If Vartype( Thisform.oRegistro ) # "O"
		Thisform.oRegistro = CreateObject( "Empty" )
	EndIf
	
	If !PemStatus( Thisform.oRegistro, This.cFieldName, 5 )
		AddProperty( Thisform.oRegistro, This.cFieldName, This.Value )
	EndIf

	If Empty( This.ControlSource )
		This.ControlSource = "Thisform.oRegistro." + This.cFieldName
	EndIf
	
	*Thisform.oControles.Add( This, Lower( This.Name ))
	Thisform.oControles.Add( This, Lower( This.Parent.Name ) + "_" + Lower( This.Name ))

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null

Endtry

ENDPROC
PROCEDURE initializerows
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""

	loBiz = This.oBiz
	loBiz.InicializarFilas()
	
Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null
	This.oBiz = Null

Endtry

ENDPROC
PROCEDURE obiz_access
Local lcCommand as String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	If Vartype( This.oBiz ) # "O"
		loBiz = NewObject( This.cClassName, This.cClassLibrary )
 		loBiz.oControl 	= This
 		loBiz.oThisForm = Thisform
		This.oBiz = loBiz
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loBiz = Null


EndTry

Return This.oBiz
ENDPROC
PROCEDURE visible_assign
lparameters tVisible
This.Visible = tVisible

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.Visible = tVisible
EndIf

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
lhyperlink
_memberdata XML Metadata for customizable properties
nforecolor
nhovercolor
lnull Indica si admite valores nulos
nvalue Contiene un replica del Value
ctable
cfieldname
ofield
cclassname Nombre de la Clase de Negocios
cclasslibrary Nombre de la librería donde se encuentra la Clase de Negocios
lautomaticdisplay Indica si utiliza la clase de negocios para el deploy automático
ncolumnsspan El Form se divide en 12 columnas virtuales. Indica cuantas columnas ocupa, con Label incluído
nheight Alto Total del Control en pixeles. (Label incluido)
nlabelspan En caso que el label se posicione en la misma fila del control, cantidad de columnas que ocupa el label. (no se toma en cuenta si está arriba u abajo) 0: No lleva etiqueta
nleftcolumn Columna donde se posiciona el control (con el label incluído, en caso de que el mismo estuviera a la izquierda)
nrowspan En caso de controles tipo Grilla o EditBox, indica cuantas filas ocupa
ntoprow Nº de fila donde se posiciona el control (Con el label incluido en caso caso de que el mismo estuviera arriba o abajo)
nverticalalignment En caso de encontrarse en una fila con alto doble, porque el label se encuentra arriba o abajo, indica donde se alínea, en el caso de ocupar un alto simple. 0: Abajo; 1: Arriba
nwidth Ancho Total del Control en pixeles. (Label incluido)
nlabelposition Posición del Label con respecto al control. 2 - Izquierda, 5 - Derecha, 6 - Arriba, 9 - Abajo	
obiz
olabel
lvalid Indica si el control contiene un valor válido luego de dejar el foco
lreadonly
*initialize 
*obiz_access 
*initializerows 
*afterbindcontrols 
*enabled_assign 
*visible_assign 
*cfieldname_access 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _checkbox
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _40X14SM7G
[CLASS] keycalmonthform
[CLASSLOC] tadatepicker.vcx
[BASECLASS] container
[OBJNAME] _date
[START PROPERTIES]
Height = 23
Visible = .T.
_memberdata =     1502<VFPData><memberdata name="initialize" display="Initialize"/><memberdata name="olabel" display="oLabel"/><memberdata name="ofield" display="oField"/><memberdata name="ctable" display="cTable" favorites="True"/><memberdata name="cfieldname" display="cFieldName" favorites="True"/><memberdata name="llabelautosize" display="lLabelAutosize" favorites="True"/><memberdata name="nlabelposition" display="nLabelPosition"/><memberdata name="cclassname" display="cClassName"/><memberdata name="cclasslibrary" display="cClassLibrary"/><memberdata name="lautomaticdisplay" display="lAutomaticDisplay"/><memberdata name="nheight" display="nHeight"/><memberdata name="nlabelspan" display="nLabelSpan"/><memberdata name="nleftcolumn" display="nLeftColumn"/><memberdata name="nrowspan" display="nRowSpan"/><memberdata name="ntoprow" display="nTopRow"/><memberdata name="nverticalalignment" display="nVerticalAlignment"/><memberdata name="nwidth" display="nWidth"/><memberdata name="obiz" display="oBiz"/><memberdata name="obiz_access" display="oBiz_Access"/><memberdata name="initializerows" display="InitializeRows"/><memberdata name="afterbindcontrols" display="AfterBindControls"/><memberdata name="ncolumnsspan" display="nColumnsSpan"/><memberdata name="lvalid" display="lValid"/><memberdata name="lreadonly" display="lReadOnly"/><memberdata name="visible" display="Visible"/><memberdata name="visible_assign" display="Visible_Assign"/><memberdata name="cfieldname_access" display="cFieldName_Access"/></VFPData>
olabel = .NULL.
ofield = .NULL.
ctable = 
cfieldname = 
llabelautosize = .T.
nlabelposition = 2
cclassname = oCB_Date
cclasslibrary = FW\Comunes\vcx\_Controles_Base.prg
lautomaticdisplay = .T.
nheight = 24
nlabelspan = 2
nleftcolumn = 1
nrowspan = 1
ntoprow = 1
nverticalalignment = 0
nwidth = 360
obiz = .NULL.
ncolumnsspan = 4
lvalid = .F.
lreadonly = .F.
Name = "_date"
KEYDATE.Height = 23
KEYDATE.DisabledBackColor = 255,255,255
KEYDATE.DisabledForeColor = 0,0,255
KEYDATE.Name = "KEYDATE"
CMDKEYDATE.Height = 23
CMDKEYDATE.Name = "CMDKEYDATE"
[END PROPERTIES]
[START METHODS]
PROCEDURE Destroy
This.oBiz = Null
This.oField = Null
This.oLabel = Null
ENDPROC
PROCEDURE Init
Lparameters lnWidth, lnHeight	&& Optional Width and Height

Local lcCommand As String

Try

	lcCommand = ""
	
	DoDefault( lnWidth, lnHeight )

	If Pemstatus( Thisform, 'InitializeControls', 5 )
		Bindevent( Thisform, 'InitializeControls', This, 'Initialize', 1 )
	Endif

	If Pemstatus( Thisform, 'InitializeRows', 5 )
		Bindevent( Thisform, 'InitializeRows', This, 'InitializeRows', 1 )
	Endif

	If Pemstatus( Thisform, 'AfterBindControls', 5 )
		Bindevent( Thisform, 'AfterBindControls', This, 'AfterBindControls', 1 )
	Endif

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE KEYDATE.GotFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String

Try

	lcCommand = ""
	This.BackColor = _CB_ONFOCUS_BACKCOLOR
	This.ForeColor = _CB_ONFOCUS_FORECOLOR

	Try

		This.oLabel.FontBold = .T.

	Catch To oErr

	Finally

	EndTry


Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry



ENDPROC
PROCEDURE KEYDATE.LostFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String

Try

	lcCommand = ""
	This.BackColor = _CB_BACKCOLOR
	This.ForeColor = _CB_FORECOLOR
	
	Try

		This.oLabel.FontBold = .F.

	Catch To oErr

	Finally

	EndTry


Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	Wait Clear


Endtry

ENDPROC
PROCEDURE afterbindcontrols
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE cfieldname_access
If Empty( This.cFieldName )
    This.cFieldName = Substr( This.Name, 4 )
EndIf

Return This.cFieldName

ENDPROC
PROCEDURE enabled_assign
lparameters tEnabled
DoDefault( tEnabled )

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.FontBold = !tEnabled
EndIf

ENDPROC
PROCEDURE initialize
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""

	If This.lAutomaticDisplay
		If Empty( This.cTable )
			This.cTable = This.Parent.cTable
		Endif
	Endif

	loBiz = This.oBiz
	loBiz.Initialize()
	If Empty( This.ControlSource )
		This.ControlSource = "Thisform.oRegistro." + This.cFieldName
	EndIf
	
	*Thisform.oControles.Add( This, Lower( This.Name ))
	Thisform.oControles.Add( This, Lower( This.Parent.Name ) + "_" + Lower( This.Name ))

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null

Endtry

ENDPROC
PROCEDURE initializerows
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""

	loBiz = This.oBiz
	loBiz.InicializarFilas()
	
Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null
	This.oBiz = Null

Endtry

ENDPROC
PROCEDURE obiz_access
Local lcCommand as String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	If Vartype( This.oBiz ) # "O"
		loBiz = NewObject( This.cClassName, This.cClassLibrary )
 		loBiz.oControl 	= This
 		loBiz.oThisForm = Thisform
		This.oBiz = loBiz
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loBiz = Null


EndTry

Return This.oBiz
ENDPROC
PROCEDURE visible_assign
lparameters tVisible
This.Visible = tVisible

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.Visible = tVisible
EndIf

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
_memberdata XML Metadata for customizable properties
olabel
ofield
ctable
cfieldname
llabelautosize
nlabelposition Posición del Label con respecto al control. 2 - Izquierda, 5 - Derecha, 6 - Arriba, 9 - Abajo	
cclassname Nombre de la Clase de Negocios
cclasslibrary Nombre de la librería donde se encuentra la Clase de Negocios
lautomaticdisplay Indica si utiliza la clase de negocios para el deploy automático
nheight Alto Total del Control en pixeles. (Label incluido)
nlabelspan En caso que el label se posicione en la misma fila del control, cantidad de columnas que ocupa el label. (no se toma en cuenta si está arriba u abajo) 0: No lleva etiqueta
nleftcolumn Columna donde se posiciona el control (con el label incluído, en caso de que el mismo estuviera a la izquierda)
nrowspan En caso de controles tipo Grilla o EditBox, indica cuantas filas ocupa
ntoprow Nº de fila donde se posiciona el control (Con el label incluido en caso caso de que el mismo estuviera arriba o abajo)
nverticalalignment En caso de encontrarse en una fila con alto doble, porque el label se encuentra arriba o abajo, indica donde se alínea, en el caso de ocupar un alto simple. 0: Abajo; 1: Arriba
nwidth Ancho Total del Control en pixeles. (Label incluido)
obiz
ncolumnsspan El Form se divide en 12 columnas virtuales. Indica cuantas columnas ocupa, con Label incluído
lvalid Indica si el control contiene un valor válido luego de dejar el foco
lreadonly
*initialize 
*obiz_access 
*initializerows 
*afterbindcontrols 
*visible_assign 
*cfieldname_access 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _date
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]
[START RESERVED1]
  ..\include\praxis.hÆynfdV ..\include\foxpro.hÎzÊrûF ..\include\strings.hÖ{ZOJ* ..\..\..\tools\namespaces\include\system.hÞ|±ÙF[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _40Y0P1J24
[CLASS] spinner
[BASECLASS] spinner
[OBJNAME] _spinner
[START PROPERTIES]
Enabled = .T.
Height = 24
Visible = .T.
Width = 121
DisabledBackColor = 255,255,255
DisabledForeColor = 0,0,255
ccuetext = 
_memberdata =     2453<VFPData><memberdata name="olabel" display="oLabel"/><memberdata name="ccuetext" display="cCueText"/><memberdata name="lcuevisible" display="lCueVisible"/><memberdata name="cforecolor" display="cForecolor"/><memberdata name="lfontitalic" display="lFontItalic"/><memberdata name="uoriginalvalue" display="uOriginalValue"/><memberdata name="nalignment" display="nAlignment"/><memberdata name="cformat" display="cFormat"/><memberdata name="cinputmask" display="cInputMask"/><memberdata name="nmaxlength" display="nMaxLength"/><memberdata name="initialize" display="Initialize"/><memberdata name="lcuevisible_assign" display="lCueVisible_Assign"/><memberdata name="ccuetext_assign" display="cCueText_Assign"/><memberdata name="afterbindcontrols" display="AfterBindControls"/><memberdata name="linitialized" display="lInitialized"/><memberdata name="ofield" display="oField"/><memberdata name="ctable" display="cTable" favorites="True"/><memberdata name="cfieldname" display="cFieldName" favorites="True"/><memberdata name="lvalid" display="lValid"/><memberdata name="llabelautosize" display="lLabelAutosize"/><memberdata name="nlabelposition" display="nLabelPosition" favorites="True"/><memberdata name="lgeneratelabel" display="lGenerateLabel"/><memberdata name="nleftcolumn" display="nLeftColumn" favorites="True"/><memberdata name="obiz" display="oBiz"/><memberdata name="obiz_access" display="oBiz_Access"/><memberdata name="cclassname" display="cClassName"/><memberdata name="cclasslibrary" display="cClassLibrary"/><memberdata name="lautomaticdisplay" display="lAutomaticDisplay" favorites="True"/><memberdata name="ncolumnsspan" display="nColumnsSpan" favorites="True"/><memberdata name="nlabelspan" display="nLabelSpan" favorites="True"/><memberdata name="ntoprow" display="nTopRow" favorites="True"/><memberdata name="nwidth" display="nWidth"/><memberdata name="nheight" display="nHeight"/><memberdata name="nrowspan" display="nRowSpan"/><memberdata name="anchor" display="Anchor"/><memberdata name="initializerows" display="InitializeRows"/><memberdata name="nverticalalignment" display="nVerticalAlignment"/><memberdata name="enabled" display="Enabled"/><memberdata name="enabled_assign" display="Enabled_Assign"/><memberdata name="lreadonly" display="lReadOnly"/><memberdata name="visible" display="Visible"/><memberdata name="visible_assign" display="Visible_Assign"/><memberdata name="cfieldname_access" display="cFieldName_Access"/></VFPData>
cforecolor = 
cformat = 
cgetinputmask = 
cinputmask = 
cshowinputmask = 
lcuevisible = .F.
lfontitalic = .F.
linitialized = .F.
lseparamiles = .T.
nalignment = 0
ndecimals = 2
nmaxlength = 0
nwidth = 0
olabel = .NULL.
uoriginalvalue = .NULL.
ctable = 
cfieldname = 
llabelautosize = .T.
lvalid = .F.
nlabelposition = 2
ofield = .NULL.
cclassname = oCB_Spinner
cclasslibrary = FW\Comunes\vcx\_Controles_Base.prg
lautomaticdisplay = .T.
lgeneratelabel = .F.
ncolumnsspan = 6
nheight = 0
nlabelspan = 4
nleftcolumn = 1
nrowspan = 1
ntoprow = 1
nverticalalignment = 0
obiz = .NULL.
lreadonly = .F.
Name = "_spinner"
[END PROPERTIES]
[START METHODS]
PROCEDURE Destroy
This.oBiz = Null
This.oField = Null
This.oLabel = Null
ENDPROC
PROCEDURE GotFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String

Try

	lcCommand = ""
	This.BackColor = _CB_ONFOCUS_BACKCOLOR
	This.ForeColor = _CB_ONFOCUS_FORECOLOR

*!*		If This.lInitialized And This.lCueVisible
*!*			This.lCueVisible = .F.
*!*		EndIf
	
	Try

		This.oLabel.FontBold = .T.

	Catch To oErr

	Finally

	EndTry
		
	This.InputMask = This.cGetInputMask

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry



ENDPROC
PROCEDURE Init
Local lcCommand As String

Try

	lcCommand = ""
	
	This.Format = "RK"

	This.lFontItalic 	= This.FontItalic
	This.cForecolor 	= This.ForeColor
	This.nAlignment 	= This.Alignment
	This.cFormat 		= This.Format
	This.cInputMask 	= This.InputMask
*!*		This.lInitialized 	= .F.

	If Pemstatus( Thisform, 'InitializeControls', 5 )
		Bindevent( Thisform, 'InitializeControls', This, 'Initialize', 1 )
	Endif

	If Pemstatus( Thisform, 'InitializeRows', 5 )
		Bindevent( Thisform, 'InitializeRows', This, 'InitializeRows', 1 )
	Endif

	If Pemstatus( Thisform, 'AfterBindControls', 5 )
		Bindevent( Thisform, 'AfterBindControls', This, 'AfterBindControls', 1 )
	Endif

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE LostFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String
Local luValue As Variant

Try

	lcCommand = ""
	If This.lValid
		This.BackColor = _CB_BACKCOLOR

	Else
		This.BackColor = _CB_NOTVALID_BACKCOLOR

	Endif
	
	This.ForeColor = _CB_FORECOLOR
	
	luValue = This.Value
*!*		If This.lInitialized And ( Empty( Alltrim( Transform( luValue ) ) ) Or Isnull( luValue ) )
*!*			This.lCueVisible = .T.
*!*		Endif

	Try

		loLabel = This.oLabel
		loLabel.FontBold = .F.
		
		If This.lValid
			loLabel.ForeColor = loLabel.nForeColor

		Else
			loLabel.ForeColor = RGB(255,0,0)
			
		Endif


	Catch To oErr

	Finally

	EndTry
	
	This.InputMask = This.cShowInputMask


Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	Wait Clear


Endtry

ENDPROC
PROCEDURE MouseDown
Lparameters nButton, nShift, nXCoord, nYCoord

Do Case
	Case nButton = 2 And nShift = 0 && Right Click

		Define Popup Emergente SHORTCUT Relative From Mrow(),Mcol()


		Define Bar _Med_undo Of emergente Prompt "\<Deshacer" Key CTRL+Z, "Ctrl+Z" PICTRES _Med_undo ;
			message "Deshace el último comando o acción."
		Define Bar _Med_redo Of emergente Prompt "Re\<hacer" Key CTRL+R, "Ctrl+R" PICTRES _Med_redo ;
			message "Repite el último comando o acción."
		Define Bar 3 Of emergente Prompt "\-"
		Define Bar _Med_cut Of emergente Prompt "Cor\<tar" Key CTRL+X, "Ctrl+X" PICTRES _Med_cut ;
			message "Quita la selección y la coloca en el Portapapeles."
		Define Bar _Med_copy Of emergente Prompt "\<Copiar" Key CTRL+C, "Ctrl+C" PICTRES _Med_copy ;
			message "Copia la selección al Portapapeles."
		Define Bar _Med_paste Of emergente Prompt "Peg\<ar"	Key CTRL+V, "Ctrl+V" PICTRES _Med_paste ;
			message "Pega el contenido del Portapapeles."
		Define Bar 7 Of emergente Prompt "\-"
		Define Bar _Med_slcta Of emergente Prompt "\<Seleccionar todo" Key CTRL+A, "Ctrl+A" PICTRES _Med_slcta ;
			message "Selecciona todos los elementos o texto de la ventana actual."
			
		Activate Popup Emergente
		Thisform.Refresh()

Endcase

ENDPROC
PROCEDURE Valid
Local lcCommand As String
Local loField As oField Of 'Tools\DataDictionary\prg\oField.prg'
Local llValid As Boolean

Try

	lcCommand = ""
	llValid = .T.
	loField = This.oField
	
	If !Isnull( loField )
		If llValid
			If loField.lRequired  And Empty( This.Value )
				*Warning( "Valor Obligatorio", loField.cCaption )
				llValid = .F.

				TEXT To lcMsg NoShow TextMerge Pretext 03
				<<loField.cCaption>>

				Valor Obligatorio
				ENDTEXT

				Wait Window Nowait Noclear lcMsg

			Endif
		Endif
	Endif

	This.lValid = llValid
	
	If llValid
		Wait CLEAR
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


Endtry

* RA 19/09/2021(17:31:19)
* Permite seguir. La validación final se hacel al confirmar globalmente
Return .T.

ENDPROC
PROCEDURE afterbindcontrols
Local lcCommand As String,;
	lcMsg As String
Local lnLen As Integer

Try

	lcCommand = ""

*!*		If Empty( This.cCueText ) And Thisform.BindControls = .T.
*!*			lnLen = This.nWidth

*!*			If lnLen = 1
*!*				TEXT To lcMsg NoShow TextMerge Pretext 15
*!*				Ingrese un dígito
*!*				ENDTEXT

*!*			Else

*!*				If Empty( This.nDecimals )
*!*					TEXT To lcMsg NoShow TextMerge Pretext 15
*!*					Ingrese hasta <<lnLen>> dígitos
*!*					ENDTEXT

*!*				Else
*!*					TEXT To lcMsg NoShow TextMerge Pretext 15
*!*					Ingrese hasta <<lnLen - This.nDecimals - 1>> dígitos enteros y <<This.nDecimals>> decimales
*!*					ENDTEXT

*!*				Endif


*!*			Endif

*!*			This.cCueText = lcMsg

*!*		Endif

*!*		If Thisform.BindControls And ! This.lInitialized
*!*			This.lFontItalic 	= This.FontItalic
*!*			This.cForecolor 	= This.ForeColor
*!*			This.nAlignment 	= This.Alignment
*!*			This.uOriginalValue = This.Value
*!*			This.cFormat 		= This.Format
*!*			This.cInputMask 	= This.InputMask

*!*			This.lInitialized 	= .T.

*!*			luValue = This.Value
*!*			This.lCueVisible 	= ( Empty( Alltrim( Transform( luValue ) ) ) Or Isnull( luValue ) )

*!*		Endif

*!*		If !Thisform.BindControls
*!*			This.lInitialized = .F.
*!*			This.uOriginalValue = ""
*!*		Endif



Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE ccuetext_assign
#INCLUDE "FW\Comunes\Include\Praxis.h"

Lparameters tcCueText
This.cCueText = tcCueText
If Empty( This.ToolTipText )
	This.ToolTipText = This.cCueText
	
Else
	This.ToolTipText = This.ToolTipText + CRLF + " ( " + This.cCueText + " )"
	
Endif


ENDPROC
PROCEDURE cfieldname_access
If Empty( This.cFieldName )
    This.cFieldName = Substr( This.Name, 4 )
EndIf

Return This.cFieldName

ENDPROC
PROCEDURE enabled_assign
lparameters tEnabled
This.Enabled = tEnabled

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.FontBold = !tEnabled
EndIf

ENDPROC
PROCEDURE initialize
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	
	If This.lAutomaticDisplay
		If Empty( This.cTable )
			This.cTable = This.Parent.cTable
		EndIf
	EndIf

	loBiz = This.oBiz
	loBiz.Initialize()
	If Empty( This.ControlSource )
		This.ControlSource = "Thisform.oRegistro." + This.cFieldName
	EndIf
	
	*Thisform.oControles.Add( This, Lower( This.Name ))
	Thisform.oControles.Add( This, Lower( This.Parent.Name ) + "_" + Lower( This.Name ))
	
Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null

Endtry

ENDPROC
PROCEDURE initializerows
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""

	loBiz = This.oBiz
	loBiz.InicializarFilas()
	
Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null
	This.oBiz = Null

Endtry

ENDPROC
PROCEDURE lcuevisible_assign
Lparameters tlCueVisible

Local lcCommand As String

Try

	lcCommand = ""

	This.lCueVisible = tlCueVisible

*!*		If This.lInitialized
*!*			If This.lCueVisible
*!*				This.Format 	= ''
*!*				This.InputMask 	= ''
*!*				This.ForeColor 	= This.DisabledForeColor
*!*				This.FontItalic = .T.
*!*				This.Alignment 	= 3
*!*				This.Value 		= Alltrim( This.cCueText )

*!*			Else
*!*				This.Format 	= This.cFormat
*!*				This.InputMask 	= This.cInputMask
*!*				This.ForeColor 	= This.cForecolor
*!*				This.FontItalic = This.lFontItalic
*!*				This.Alignment 	= This.nAlignment

*!*				If Alltrim( Transform( This.Value ) ) == Alltrim( This.cCueText )
*!*					This.Value = This.uOriginalValue
*!*				Endif

*!*			Endif

*!*		Endif

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry


ENDPROC
PROCEDURE obiz_access
Local lcCommand as String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	If Vartype( This.oBiz ) # "O"
		loBiz = NewObject( This.cClassName, This.cClassLibrary )
 		loBiz.oControl 	= This
 		loBiz.oThisForm = Thisform
		This.oBiz = loBiz
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loBiz = Null


EndTry

Return This.oBiz
ENDPROC
PROCEDURE visible_assign
lparameters tVisible
This.Visible = tVisible

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.Visible = tVisible
EndIf

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
ccuetext
_memberdata XML Metadata for customizable properties
cforecolor
cformat
cgetinputmask
cinputmask
cshowinputmask
lcuevisible
lfontitalic
linitialized
lseparamiles
nalignment
ndecimals
nmaxlength
nwidth Ancho Total del Control en pixeles. (Label incluido)
olabel
uoriginalvalue
ctable Nombre de la tabla asociada
cfieldname
llabelautosize
lvalid
nlabelposition Posición del Label con respecto al control. 2 - Izquierda, 5 - Derecha, 6 - Arriba, 9 - Abajo	
ofield
cclassname Nombre de la Clase de Negocios
cclasslibrary Nombre de la librería donde se encuentra la Clase de Negocios
lautomaticdisplay Indica si utiliza la clase de negocios para el deploy automático
lgeneratelabel Indica si el control Label se genera automáticamente en tiempo de ejecución
ncolumnsspan El Form se divide en 12 columnas virtuales. Indica cuantas columnas ocupa, con Label incluído
nheight Alto Total del Control en pixeles. (Label incluido)
nlabelspan En caso que el label se posicione en la misma fila del control, cantidad de columnas que ocupa el label. (no se toma en cuenta si está arriba u abajo) 0: No lleva etiqueta
nleftcolumn Columna donde se posiciona el control (con el label incluído, en caso de que el mismo estuviera a la izquierda)
nrowspan En caso de controles tipo Grilla o EditBox, indica cuantas filas ocupa
ntoprow Nº de fila donde se posiciona el control (Con el label incluido en caso caso de que el mismo estuviera arriba o abajo)
nverticalalignment En caso de encontrarse en una fila con alto doble, porque el label se encuentra arriba o abajo, indica donde se alínea, en el caso de ocupar un alto simple. 0: Abajo; 1: Arriba
obiz
lreadonly
*ccuetext_assign 
*initialize 
*lcuevisible_assign 
*afterbindcontrols 
*obiz_access 
*initializerows 
*enabled_assign 
*visible_assign 
*cfieldname_access 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _spinner
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]
[START RESERVED1]
  ..\include\praxis.hÆynfdV ..\include\foxpro.hÎzÊrûF ..\include\strings.hÖ{ZOJ* ..\..\..\tools\namespaces\include\system.hÞ|±ÙF[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _4100ZT7XV
[CLASS] pageframe
[BASECLASS] pageframe
[OBJNAME] _pageframe
[START PROPERTIES]
ErasePage = .T.
MemberClassLibrary = _controles_base.vcx
MemberClass = "_page"
PageCount = 0
ActivePage = 0
Width = 724
Height = 224
ctable = 
_memberdata =     1296<VFPData><memberdata name="ctable" display="cTable"/><memberdata name="cfield_name" display="cField_Name"/><memberdata name="cclassname" display="cClassName"/><memberdata name="cclasslibrary" display="cClassLibrary"/><memberdata name="lautomaticdisplay" display="lAutomaticDisplay"/><memberdata name="ncolumnsspan" display="nColumnsSpan"/><memberdata name="nheight" display="nHeight"/><memberdata name="nlabelspan" display="nLabelSpan"/><memberdata name="nleftcolumn" display="nLeftColumn"/><memberdata name="nrowspan" display="nRowSpan"/><memberdata name="ntoprow" display="nTopRow"/><memberdata name="nverticalalignment" display="nVerticalAlignment"/><memberdata name="nwidth" display="nWidth"/><memberdata name="nlabelposition" display="nLabelPosition"/><memberdata name="obiz" display="oBiz"/><memberdata name="obiz_access" display="oBiz_Access"/><memberdata name="initialize" display="Initialize"/><memberdata name="initializerows" display="InitializeRows"/><memberdata name="nleft" display="nLeft"/><memberdata name="ctable_access" display="cTable_Access"/><memberdata name="ncolumna" display="nColumna"/><memberdata name="ncalculatedheight" display="nCalculatedHeight"/><memberdata name="lvalid" display="lValid"/><memberdata name="pagecount" type="Property" favorites="True"/></VFPData>

cfield_name = 
cclassname = 
cclasslibrary = 
lautomaticdisplay = .F.
ncolumnsspan = 12
nheight = 0
nlabelspan = 0
nleftcolumn = 1
nrowspan = 0
ntoprow = 1
nverticalalignment = 0
nwidth = 0
nlabelposition = 0
obiz = .NULL.
nleft = 0
ncolumna = 0
ncalculatedheight = 0
lvalid = .F.
Name = "_pageframe"
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
Local lcCommand as String

Try

	lcCommand = ""
	If Empty( This.cTable )
		This.cTable = This.Parent.cTable
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE ctable_access

If Empty( This.cTable )
	This.cTable = This.Parent.cTable
Endif

Return This.cTable

ENDPROC
PROCEDURE initialize
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE initializerows
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE obiz_access
return This.oBiz

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
ctable
_memberdata XML Metadata for customizable properties
cfield_name
cclassname
cclasslibrary
lautomaticdisplay
ncolumnsspan
nheight
nlabelspan
nleftcolumn
nrowspan
ntoprow
nverticalalignment
nwidth
nlabelposition
obiz
nleft
ncolumna
ncalculatedheight
lvalid Indica si el control contiene un valor válido luego de dejar el foco
*obiz_access 
*initialize 
*initializerows 
*ctable_access 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _pageframe

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _4100ZTL0Z
[CLASS] page
[BASECLASS] page
[OBJNAME] _page
[START PROPERTIES]
Caption = "Solapa"
BackStyle = 1
Height = 199
Width = 713
cclassname = ControlesBase
_memberdata =     1231<VFPData><memberdata name="cclassname" display="cClassName"/><memberdata name="cclasslibrary" display="cClassLibrary"/><memberdata name="lautomaticdisplay" display="lAutomaticDisplay"/><memberdata name="ncolumnsspan" display="nColumnsSpan"/><memberdata name="nheight" display="nHeight"/><memberdata name="nlabelspan" display="nLabelSpan"/><memberdata name="nleftcolumn" display="nLeftColumn"/><memberdata name="nrowspan" display="nRowSpan"/><memberdata name="ntoprow" display="nTopRow"/><memberdata name="nverticalalignment" display="nVerticalAlignment"/><memberdata name="nwidth" display="nWidth"/><memberdata name="nlabelposition" display="nLabelPosition"/><memberdata name="ctable" display="cTable"/><memberdata name="cfield_name" display="cField_Name"/><memberdata name="obiz" display="oBiz"/><memberdata name="obiz_access" display="oBiz_Access"/><memberdata name="initialize" display="Initialize"/><memberdata name="initializerows" display="InitializeRows"/><memberdata name="nleft" display="nLeft"/><memberdata name="ncolumna" display="nColumna"/><memberdata name="ctable_access" display="cTable_Access"/><memberdata name="ncalculatedheight" display="nCalculatedHeight"/><memberdata name="lvalid" display="lValid"/></VFPData>
cclasslibrary = FW\Comunes\vcx\_Controles_Base.prg
lautomaticdisplay = .T.
ncolumnsspan = 12
nheight = 0
nlabelspan = 0
nleftcolumn = 1
nrowspan = 0
ntoprow = 1
nverticalalignment = 0
nwidth = 0
nlabelposition = 0
ctable = 
cfield_name = 
obiz = .NULL.
nleft = 0
ncolumna = 0
ncalculatedheight = 0
lvalid = .F.
Name = "_page"
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
Local lcCommand as String

Try

	lcCommand = ""
	
	If Empty( This.cTable )
		This.cTable = This.Parent.cTable
	EndIf

	If Pemstatus( Thisform, 'InitializeControls', 5 )
		Bindevent( Thisform, 'InitializeControls', This, 'Initialize', 1 )
	Endif

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE ctable_access

If Empty( This.cTable )
	This.cTable = This.Parent.cTable
Endif

Return This.cTable

ENDPROC
PROCEDURE initialize
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE obiz_access
return This.oBiz

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
2[END RESERVED2]
[START RESERVED3]
cclassname Nombre de la Clase de Negocios
_memberdata XML Metadata for customizable properties
cclasslibrary Nombre de la librería donde se encuentra la Clase de Negocios
lautomaticdisplay Indica si utiliza la clase de negocios para el deploy automático
ncolumnsspan El Form se divide en 12 columnas virtuales. Indica cuantas columnas ocupa, con Label incluído
nheight Alto Total del Control en pixeles. (Label incluido)
nlabelspan En caso que el label se posicione en la misma fila del control, cantidad de columnas que ocupa el label. (no se toma en cuenta si está arriba u abajo) 0: No lleva etiqueta
nleftcolumn Columna donde se posiciona el control (con el label incluído, en caso de que el mismo estuviera a la izquierda)
nrowspan En caso de controles tipo Grilla o EditBox, indica cuantas filas ocupa
ntoprow Nº de fila donde se posiciona el control (Con el label incluido en caso caso de que el mismo estuviera arriba o abajo)
nverticalalignment En caso de encontrarse en una fila con alto doble, porque el label se encuentra arriba o abajo, indica donde se alínea, en el caso de ocupar un alto simple. 0: Abajo; 1: Arriba
nwidth Ancho Total del Control en pixeles. (Label incluido)
nlabelposition Posición del Label con respecto al control. 2 - Izquierda, 5 - Derecha, 6 - Arriba, 9 - Abajo	
ctable
cfield_name
obiz
nleft
ncolumna
ncalculatedheight
lvalid Indica si el control contiene un valor válido luego de dejar el foco
*obiz_access 
*initialize 
*initializerows 
*ctable_access 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _67210A4SR
[CLASS] shape
[BASECLASS] shape
[OBJNAME] Crud_Shape
[PARENT] _page
[START PROPERTIES]
Top = 12
Left = 12
Height = 180
Width = 696
Anchor = 15
BackStyle = 0
Curvature = 12
BorderColor = 0,128,255
ZOrderSet = 0
Name = "Crud_Shape"
[END PROPERTIES]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _page

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _41010GHAO
[CLASS] shape
[BASECLASS] shape
[OBJNAME] _shape
[START PROPERTIES]
Height = 17
Width = 100
lvalid = .F.
_memberdata = <VFPData><memberdata name="lvalid" display="lValid"/><memberdata name="lreadonly" display="lReadOnly"/></VFPData>
lreadonly = .F.
Name = "_shape"
[END PROPERTIES]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
lvalid Indica si el control contiene un valor válido luego de dejar el foco
_memberdata XML Metadata for customizable properties
lreadonly
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _shape

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _41Z0MQI0R
[CLASS] optiongroup
[BASECLASS] optiongroup
[OBJNAME] _optiongroup
[START PROPERTIES]
MemberClassLibrary = _controles_base.vcx
MemberClass = "_optionbutton"
ButtonCount = 0
BackStyle = 0
Value = 0
Height = 48
Width = 180
Visible = .T.
ToolTipText = ""
nlastbutton = 0
_memberdata =     1265<VFPData><memberdata name="nlastbutton" display="nLastButton"/><memberdata name="tooltiptext" display="ToolTipText"/><memberdata name="tooltiptext_assign" display="ToolTipText_Assign"/><memberdata name="cclassname" display="cClassName"/><memberdata name="cclasslibrary" display="cClassLibrary"/><memberdata name="lautomaticdisplay" display="lAutomaticDisplay"/><memberdata name="ncolumnsspan" display="nColumnsSpan"/><memberdata name="nheight" display="nHeight"/><memberdata name="nlabelspan" display="nLabelSpan"/><memberdata name="nleftcolumn" display="nLeftColumn"/><memberdata name="nrowspan" display="nRowSpan"/><memberdata name="ntoprow" display="nTopRow"/><memberdata name="nverticalalignment" display="nVerticalAlignment"/><memberdata name="nwidth" display="nWidth"/><memberdata name="nlabelposition" display="nLabelPosition"/><memberdata name="obiz" display="oBiz"/><memberdata name="obiz_access" display="oBiz_Access"/><memberdata name="initializerows" display="InitializeRows"/><memberdata name="afterbindcontrols" display="AfterBindControls"/><memberdata name="lvalid" display="lValid"/><memberdata name="lreadonly" display="lReadOnly"/><memberdata name="visible" display="Visible"/><memberdata name="visible_assign" display="Visible_Assign"/></VFPData>
cclassname = oCB_OptionGroup
cclasslibrary = FW\Comunes\vcx\_Controles_Base.prg
lautomaticdisplay = .T.
ncolumnsspan = 6
nheight = 24
nlabelspan = 0
nleftcolumn = 1
nrowspan = 3
ntoprow = 1
nverticalalignment = 0
nwidth = 360
nlabelposition = 2
obiz = .NULL.
lvalid = .F.
lreadonly = .F.
Name = "_optiongroup"
[END PROPERTIES]
[START METHODS]
PROCEDURE Destroy
This.oBiz = Null
This.oField = Null
This.oLabel = Null
ENDPROC
PROCEDURE Init
Local lcCommand as String

Try

	lcCommand = ""
	
	If Pemstatus( Thisform, 'InitializeControls', 5 )
		Bindevent( Thisform, 'InitializeControls', This, 'Initialize', 1 )
	Endif

	If Pemstatus( Thisform, 'InitializeRows', 5 )
		Bindevent( Thisform, 'InitializeRows', This, 'InitializeRows', 1 )
	Endif

	If Pemstatus( Thisform, 'AfterBindControls', 5 )
		Bindevent( Thisform, 'AfterBindControls', This, 'AfterBindControls', 1 )
	Endif
	

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE InteractiveChange
*!*	If This.ReadOnly = .T.
*!*		This.Value = This.nLastButton
*!*	EndIf

This.ProgrammaticChange()
ENDPROC
PROCEDURE ProgrammaticChange
Local lcCommand As String

Try

	lcCommand = ""
	
	If ! Empty( This.nLastButton )
		This.Buttons[ This.nLastButton ].FontBold = .F.
	EndIf
	
	This.nLastButton = This.Value
	
	If ! Empty( This.nLastButton )
		This.Buttons[ This.nLastButton ].FontBold = .T.
	Endif

Catch To oErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = Newobject ( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE afterbindcontrols
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE initializerows
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""

	loBiz = This.oBiz
	loBiz.InicializarFilas()
	
Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null
	This.oBiz = Null

Endtry

ENDPROC
PROCEDURE obiz_access
Local lcCommand as String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	If Vartype( This.oBiz ) # "O"
		loBiz = NewObject( This.cClassName, This.cClassLibrary )
 		loBiz.oControl 	= This
 		loBiz.oThisForm = Thisform
		This.oBiz = loBiz
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loBiz = Null


EndTry

Return This.oBiz
ENDPROC
PROCEDURE tooltiptext_assign
Lparameters tToolTipText

Local lcCommand As String
Local loOB As OptionButton

Try

	lcCommand = ""
	This.ToolTipText = tToolTipText

	For Each loOB In This.Objects
		If Empty( loOB.ToolTipText )
			loOB.ToolTipText = tToolTipText
		Endif
	Endfor

Catch To oErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = Newobject ( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loOB = Null

Endtry
ENDPROC
PROCEDURE visible_assign
lparameters tVisible
This.Visible = tVisible

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.Visible = tVisible
EndIf

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
nlastbutton Ultimo botón seleccionado
_memberdata XML Metadata for customizable properties
cclassname Nombre de la Clase de Negocios
cclasslibrary Nombre de la librería donde se encuentra la Clase de Negocios
lautomaticdisplay Indica si utiliza la clase de negocios para el deploy automático
ncolumnsspan El Form se divide en 12 columnas virtuales. Indica cuantas columnas ocupa, con Label incluído
nheight Alto Total del Control en pixeles. (Label incluido)
nlabelspan En caso que el label se posicione en la misma fila del control, cantidad de columnas que ocupa el label. (no se toma en cuenta si está arriba u abajo) 0: No lleva etiqueta
nleftcolumn Columna donde se posiciona el control (con el label incluído, en caso de que el mismo estuviera a la izquierda)
nrowspan En caso de controles tipo Grilla o EditBox, indica cuantas filas ocupa
ntoprow Nº de fila donde se posiciona el control (Con el label incluido en caso caso de que el mismo estuviera arriba o abajo)
nverticalalignment En caso de encontrarse en una fila con alto doble, porque el label se encuentra arriba o abajo, indica donde se alínea, en el caso de ocupar un alto simple. 0: Abajo; 1: Arriba
nwidth Ancho Total del Control en pixeles. (Label incluido)
nlabelposition Posición del Label con respecto al control. 2 - Izquierda, 5 - Derecha, 6 - Arriba, 9 - Abajo	
obiz
lvalid Indica si el control contiene un valor válido luego de dejar el foco
lreadonly
*tooltiptext_assign 
*obiz_access 
*initializerows 
*afterbindcontrols 
*visible_assign 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _optiongroup

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _41Z0NEUW8
[CLASS] optionbutton
[BASECLASS] optionbutton
[OBJNAME] _optionbutton
[START PROPERTIES]
BackStyle = 0
Caption = "Option1"
Height = 17
Width = 61
AutoSize = .T.
DisabledForeColor = 0,0,255
DisabledBackColor = 255,255,255
lvalid = .F.
_memberdata = <VFPData><memberdata name="lvalid" display="lValid"/></VFPData>
Name = "_optionbutton"
[END PROPERTIES]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
lvalid Indica si el control contiene un valor válido luego de dejar el foco
_memberdata XML Metadata for customizable properties
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _optionbutton
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _49H0SGK19
[CLASS] listbox
[BASECLASS] listbox
[OBJNAME] _listbox
[START PROPERTIES]
Enabled = .T.
Height = 60
MultiSelect = .T.
Visible = .T.
Width = 100
DisabledBackColor = 255,255,255
DisabledItemForeColor = 0,0,255
DisabledForeColor = 0,0,255
IntegralHeight = .F.
ItemTips = .T.
AutoHideScrollbar = 1
_memberdata =     1928<VFPData><memberdata name="initialize" display="Initialize"/><memberdata name="cclassname" display="cClassName"/><memberdata name="cclasslibrary" display="cClassLibrary"/><memberdata name="lautomaticdisplay" display="lAutomaticDisplay"/><memberdata name="ncolumnsspan" display="nColumnsSpan"/><memberdata name="nheight" display="nHeight"/><memberdata name="nlabelspan" display="nLabelSpan"/><memberdata name="nleftcolumn" display="nLeftColumn"/><memberdata name="nrowspan" display="nRowSpan"/><memberdata name="ntoprow" display="nTopRow"/><memberdata name="nverticalalignment" display="nVerticalAlignment"/><memberdata name="nwidth" display="nWidth"/><memberdata name="nlabelposition" display="nLabelPosition"/><memberdata name="obiz" display="oBiz"/><memberdata name="obiz_access" display="oBiz_Access"/><memberdata name="initializerows" display="InitializeRows"/><memberdata name="cargarlistbox" display="CargarListBox"/><memberdata name="afterbindcontrols" display="AfterBindControls"/><memberdata name="omodelo" display="oModelo"/><memberdata name="omodelo_access" display="oModelo_Access"/><memberdata name="cmodelo" display="cModelo"/><memberdata name="olabel" display="oLabel"/><memberdata name="ofield" display="oField"/><memberdata name="ctable" display="cTable"/><memberdata name="cfieldname" display="cFieldName"/><memberdata name="multiselect" type="Property" favorites="True"/><memberdata name="ofiltros" display="oFiltros"/><memberdata name="agregarfiltros" display="AgregarFiltros"/><memberdata name="lvalid" display="lValid"/><memberdata name="enabled" display="Enabled"/><memberdata name="enabled_assign" display="Enabled_Assign"/><memberdata name="removerfiltro" display="RemoverFiltro"/><memberdata name="lreadonly" display="lReadOnly"/><memberdata name="visible" display="Visible"/><memberdata name="visible_assign" display="Visible_Assign"/><memberdata name="nsetpagesize" display="nSetPageSize"/></VFPData>
cclassname = oCB_ListBox
cclasslibrary = FW\Comunes\vcx\_Controles_Base.prg
lautomaticdisplay = .T.
ncolumnsspan = 3
nheight = 24
nlabelspan = 2
nleftcolumn = 1
nrowspan = 4
ntoprow = 1
nverticalalignment = 0
nwidth = 360
nlabelposition = 6
obiz = .NULL.
omodelo = .NULL.
cmodelo = 
olabel = .NULL.
ofield = .NULL.
ctable = 
cfieldname = 
ofiltros = .NULL.
lvalid = .F.
lreadonly = .F.
nsetpagesize = 1000
Name = "_listbox"
[END PROPERTIES]
[START METHODS]
PROCEDURE Destroy
This.oBiz = Null
This.oField = Null
This.oLabel = Null
This.oModelo = Null
ENDPROC
PROCEDURE GotFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String

Try

	lcCommand = ""
	This.ItemBackColor = _CB_ONFOCUS_BACKCOLOR
	This.ItemForeColor = _CB_ONFOCUS_FORECOLOR
	
*!*		This.SelectedItemBackColor = _CB_ONFOCUS_BACKCOLOR
*!*		This.SelectedItemForeColor = _CB_ONFOCUS_FORECOLOR
	
	Try

		This.oLabel.FontBold = .T.

	Catch To oErr

	Finally

	EndTry

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = _NewObject ( 'ErrorHandler', 'ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE Init
Local lcCommand as String

Try

	lcCommand = ""
	
	This.BoundColumn 	= 2
	This.BoundTo 		= .T.
	This.ColumnCount 	= 1
	This.RowSourceType 	= 0
	This.RowSource 		= ""
*	This.Style			= 2
	This.Sorted 		= .T.
	
	If Pemstatus( Thisform, 'InitializeControls', 5 )
		Bindevent( Thisform, 'InitializeControls', This, 'Initialize', 1 )
	Endif

	If Pemstatus( Thisform, 'InitializeRows', 5 )
		Bindevent( Thisform, 'InitializeRows', This, 'InitializeRows', 1 )
	Endif

	If Pemstatus( Thisform, 'AfterBindControls', 5 )
		Bindevent( Thisform, 'AfterBindControls', This, 'AfterBindControls', 1 )
	Endif
	
	This.oFiltros = Newobject( "CollectionBase", "Tools\Namespaces\Prg\CollectionBase.Prg" )
	


Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = _NewObject ( 'ErrorHandler', 'ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE LostFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String

Try

	lcCommand = ""
	This.ItemBackColor = _CB_BACKCOLOR
	This.ItemForeColor = _CB_FORECOLOR
*!*		
*!*		This.SelectedItemBackColor = _CB_BACKCOLOR
*!*		This.SelectedItemForeColor = _CB_FORECOLOR
	
	
	Try

		This.oLabel.FontBold = .F.

	Catch To oErr

	Finally

	EndTry

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = _NewObject ( 'ErrorHandler', 'ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	Wait Clear


Endtry

ENDPROC
PROCEDURE MouseDown
#INCLUDE "FW\Comunes\Include\Praxis.h"

Lparameters nButton, nShift, nXCoord, nYCoord

Local lcCommand As String
Local loModelo As oModelo Of "FrontEnd\Prg\Modelo.prg",;
loRegistro as Object
Local lnOption as Integer

Try

	lcCommand = ""

	Do Case
		Case nButton = 2 And nShift = 0 && Right Click
		
			loModelo = This.oModelo
			
			loRegistro = CreateObject( "Empty" )
			
			Define Popup Emergente SHORTCUT Relative From Mrow(),Mcol()

			Define Bar ABM_ALTA Of Emergente ;
				Prompt "Agregar " + Alltrim( loModelo.cTituloEnForm ) ;
				Picture "v:\CloudFox\FW\Comunes\image\bmp\new.bmp"
				
			Define Bar ABM_MODIFICACION Of Emergente ;
				Prompt "Editar " + Alltrim( loModelo.cTituloEnForm ) ;
				Picture "v:\CloudFox\FW\Comunes\image\bmp\edit.bmp"
				
			Define Bar 99 Of Emergente Prompt "\-"	

			Define Bar 10 Of Emergente ;
				Prompt "Refrescar Datos" ;
				Picture "v:\CloudFox\FW\Comunes\image\ico\refresh.ico"

			On Selection Bar ABM_ALTA Of Emergente lnOption = ABM_ALTA
			On Selection Bar ABM_MODIFICACION Of Emergente lnOption = ABM_MODIFICACION
			On Selection Bar 10 Of Emergente lnOption = 10

			Activate Popup Emergente

			If Not Empty( lnOption )
				 	
				Do Case
				Case lnOption = ABM_ALTA
					AddProperty( loRegistro, loModelo.cPKField )
					AddProperty( loRegistro, "ABM", ABM_ALTA )
					loModelo.LaunchEditForm( loRegistro )

				Case lnOption = ABM_MODIFICACION
					AddProperty( loRegistro, loModelo.cPKField, This.Value )
					AddProperty( loRegistro, "ABM", ABM_MODIFICACION )
					loModelo.LaunchEditForm( loRegistro )

				Case lnOption = 10
					This.CargarListBox()

				EndCase

			Endif


	Endcase

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loModelo = Null


Endtry


ENDPROC
PROCEDURE afterbindcontrols
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE agregarfiltros
Local lcCommand as String
Local loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg,;
loFiltro as Object

Try

	lcCommand = ""

	loFiltros = This.oFiltros

	loFiltro = Createobject( "Empty" )
	AddProperty( loFiltro, "Nombre", "Activos" )
	AddProperty( loFiltro, "FieldName", "activo" )
	AddProperty( loFiltro, "FieldRelation", "==" )
	AddProperty( loFiltro, "FieldValue", "True" )
	loFiltros.AddItem( loFiltro, loFiltro.Nombre )
	
    loFiltro = Createobject( "Empty" )
    AddProperty( loFiltro, "Nombre", "SetPageSize" )
    AddProperty( loFiltro, "FieldName", "current_size" )
    AddProperty( loFiltro, "FieldRelation", "=" )
    AddProperty( loFiltro, "FieldValue", Transform( This.nSetPageSize ) )
    loFiltros.AddItem( loFiltro, loFiltro.Nombre )
	
Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loFiltro 	= Null
	loFiltros 	= Null

EndTry

ENDPROC
PROCEDURE cargarlistbox
Local lcCommand As String,;
lcAlias as String
Local loModelo As oModelo Of "FrontEnd\Prg\Modelo.prg",;
	loParam As Object,;
	loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg

Try

	lcCommand = ""
	loModelo = This.oModelo
	
	This.AgregarFiltros()
	
*!*		loFiltros = Newobject( "CollectionBase", "Tools\Namespaces\Prg\CollectionBase.Prg" )

*!*		loFiltro = Createobject( "Empty" )
*!*		AddProperty( loFiltro, "Nombre", "Activos" )
*!*		AddProperty( loFiltro, "FieldName", "activo" )
*!*		AddProperty( loFiltro, "FieldRelation", "==" )
*!*		AddProperty( loFiltro, "FieldValue", "True" )
*!*		loFiltros.AddItem( loFiltro, loFiltro.Nombre )

	loFiltros = This.oFiltros
	loParam = Createobject( "Empty" )

	AddProperty( loParam, "oFilterCriteria", loFiltros )

	lcAlias = loModelo.cMainCursorName + Sys(2015)
	AddProperty( loParam, "cAlias", lcAlias )
	
	loModelo.GetByWhere( loParam )

	This.Clear()
	Select Alias( lcAlias )
	Locate
	Scan
		This.AddItem( Alltrim( Nombre ))
		This.List( This.NewIndex, 2 ) = Transform( Evaluate( loModelo.cPKField ) )
	Endscan

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loFiltro = Null
	loFiltros = Null
	loParam = Null
	loModelo = Null
	
	Use in Select( lcAlias )

Endtry

ENDPROC
PROCEDURE enabled_assign
lparameters tEnabled
This.Enabled = tEnabled

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.FontBold = !tEnabled
EndIf

ENDPROC
PROCEDURE initialize
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	If This.lAutomaticDisplay
		If Empty( This.cTable )
			This.cTable = This.Parent.cTable
		EndIf
	EndIf

	loBiz = This.oBiz
	loBiz.Initialize()
	If Empty( This.ControlSource )
		This.ControlSource = "Thisform.oRegistro." + This.cFieldName
	EndIf
	
	*Thisform.oControles.Add( This, Lower( This.Name ))
	Thisform.oControles.Add( This, Lower( This.Parent.Name ) + "_" + Lower( This.Name ))
	This.CargarListBox()

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null

Endtry

ENDPROC
PROCEDURE initializerows
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""

	loBiz = This.oBiz
	loBiz.InicializarFilas()
	
Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null
	This.oBiz = Null

Endtry

ENDPROC
PROCEDURE obiz_access
Local lcCommand as String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	If Vartype( This.oBiz ) # "O"
		loBiz = NewObject( This.cClassName, This.cClassLibrary )
 		loBiz.oControl 	= This
 		loBiz.oThisForm = Thisform
		This.oBiz = loBiz
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loBiz = Null


EndTry

Return This.oBiz
ENDPROC
PROCEDURE omodelo_access
Local lcCommand as String

Try

	lcCommand = ""
	If IsNull( This.oModelo )
		This.oModelo = GetEntity( This.cModelo )
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

return This.oModelo

ENDPROC
PROCEDURE removerfiltro
Lparameters cFilterName as String
Local lcCommand as String
Local loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg

Try

	lcCommand = ""
	loFiltros = This.oFiltros
	loFiltros.RemoveItem( cFilterName )

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loFiltros = Null


EndTry

ENDPROC
PROCEDURE visible_assign
lparameters tVisible
This.Visible = tVisible

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.Visible = tVisible
EndIf

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
_memberdata XML Metadata for customizable properties
cclassname Nombre de la Clase de Negocios
cclasslibrary Nombre de la librería donde se encuentra la Clase de Negocios
lautomaticdisplay Indica si utiliza la clase de negocios para el deploy automático
ncolumnsspan El Form se divide en 12 columnas virtuales. Indica cuantas columnas ocupa, con Label incluído
nheight Alto Total del Control en pixeles. (Label incluido)
nlabelspan En caso que el label se posicione en la misma fila del control, cantidad de columnas que ocupa el label. (no se toma en cuenta si está arriba u abajo) 0: No lleva etiqueta
nleftcolumn Columna donde se posiciona el control (con el label incluído, en caso de que el mismo estuviera a la izquierda)
nrowspan En caso de controles tipo Grilla o EditBox, indica cuantas filas ocupa
ntoprow Nº de fila donde se posiciona el control (Con el label incluido en caso caso de que el mismo estuviera arriba o abajo)
nverticalalignment En caso de encontrarse en una fila con alto doble, porque el label se encuentra arriba o abajo, indica donde se alínea, en el caso de ocupar un alto simple. 0: Abajo; 1: Arriba
nwidth Ancho Total del Control en pixeles. (Label incluido)
nlabelposition Posición del Label con respecto al control. 2 - Izquierda, 5 - Derecha, 6 - Arriba, 9 - Abajo	
obiz
omodelo
cmodelo
olabel
ofield
ctable
cfieldname
ofiltros
lvalid Indica si el control contiene un valor válido luego de dejar el foco
lreadonly
nsetpagesize Tamaño de página por defecto
*initialize 
*obiz_access 
*initializerows 
*cargarlistbox 
*afterbindcontrols 
*omodelo_access 
*agregarfiltros 
*enabled_assign 
*removerfiltro 
*visible_assign 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _listbox
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]
[START RESERVED1]
  ..\include\praxis.hÆynfdV ..\include\foxpro.hÎzÊrûF ..\include\strings.hÖ{ZOJ* ..\..\..\tools\namespaces\include\system.hÞ|±ÙF[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _6630WHO2Z
[CLASS] editbox
[BASECLASS] editbox
[OBJNAME] _editbox
[START PROPERTIES]
Enabled = .T.
Height = 67
Visible = .T.
Width = 294
DisabledBackColor = 255,255,255
DisabledForeColor = 0,0,255
ccuetext = 
_memberdata =     2374<VFPData><memberdata name="ccuetext" display="cCueText"/><memberdata name="ccuetext_assign" display="cCueText_Assign"/><memberdata name="cfieldname" display="cFieldName"/><memberdata name="cfieldname_access" display="cFieldName_Access"/><memberdata name="cforecolor" display="cForecolor"/><memberdata name="cformat" display="cFormat"/><memberdata name="ctable" display="cTable" favorites="True"/><memberdata name="lcuevisible" display="lCueVisible"/><memberdata name="lcuevisible_assign" display="lCueVisible_Assign"/><memberdata name="lfontitalic" display="lFontItalic"/><memberdata name="linitialized" display="lInitialized"/><memberdata name="llabelautosize" display="lLabelAutosize"/><memberdata name="lvalid" display="lValid"/><memberdata name="nalignment" display="nAlignment" favorites="True"/><memberdata name="nlabelposition" display="nLabelPosition" favorites="True"/><memberdata name="nmaxlength" display="nMaxLength"/><memberdata name="ofield" display="oField"/><memberdata name="olabel" display="oLabel"/><memberdata name="uoriginalvalue" display="uOriginalValue"/><memberdata name="initialize" display="Initialize"/><memberdata name="afterbindcontrols" display="AfterBindControls"/><memberdata name="cclassname" display="cClassName"/><memberdata name="cclasslibrary" display="cClassLibrary"/><memberdata name="lautomaticdisplay" display="lAutomaticDisplay" favorites="True"/><memberdata name="lgeneratelabel" display="lGenerateLabel"/><memberdata name="ncolumnsspan" display="nColumnsSpan" favorites="True"/><memberdata name="nheight" display="nHeight"/><memberdata name="nlabelspan" display="nLabelSpan" favorites="True"/><memberdata name="nleftcolumn" display="nLeftColumn" favorites="True"/><memberdata name="nrowspan" display="nRowSpan" favorites="True"/><memberdata name="ntoprow" display="nTopRow" favorites="True"/><memberdata name="nverticalalignment" display="nVerticalAlignment"/><memberdata name="nwidth" display="nWidth"/><memberdata name="obiz" display="oBiz"/><memberdata name="obiz_access" display="oBiz_Access"/><memberdata name="initializerows" display="InitializeRows"/><memberdata name="enabled" display="Enabled"/><memberdata name="enabled_assign" display="Enabled_Assign"/><memberdata name="lreadonly" display="lReadOnly"/><memberdata name="visible" display="Visible"/><memberdata name="visible_assign" display="Visible_Assign"/></VFPData>
cfieldname = 
cforecolor = 
cformat = 
ctable = 
lcuevisible = .F.
lfontitalic = .F.
linitialized = .F.
llabelautosize = .T.
lvalid = .T.
nlabelposition = 0
nmaxlength = 0
ofield = .NULL.
olabel = .NULL.
uoriginalvalue = .NULL.
cclassname = oCB_EditBox
cclasslibrary = FW\Comunes\vcx\_Controles_Base.prg
lautomaticdisplay = .T.
lgeneratelabel = .F.
ncolumnsspan = 12
nheight = 24
nlabelspan = 4
nleftcolumn = 1
nrowspan = 3
ntoprow = 1
nverticalalignment = 0
nwidth = 360
obiz = .NULL.
lreadonly = .F.
Name = "_editbox"
[END PROPERTIES]
[START METHODS]
PROCEDURE Destroy
This.oBiz = Null
This.oField = Null
This.oLabel = Null
ENDPROC
PROCEDURE GotFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String

Try

	lcCommand = ""
	If .T. && This.lValid
		This.BackColor = _CB_ONFOCUS_BACKCOLOR

	Else
		This.BackColor = _CB_NOTVALID_BACKCOLOR

	Endif
	
	This.ForeColor = _CB_ONFOCUS_FORECOLOR

	If This.lInitialized And This.lCueVisible
		This.lCueVisible = .F.
	EndIf
	
	Try

		This.oLabel.FontBold = .T.

	Catch To oErr

	Finally

	EndTry


Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry



ENDPROC
PROCEDURE Init
Local lcCommand As String

Try

	lcCommand = ""

	This.lFontItalic 	= This.FontItalic
	This.cForecolor 	= This.ForeColor
	This.nAlignment 	= This.Alignment
	This.cFormat 		= This.Format
	This.nMaxLength 	= This.MaxLength
	This.lInitialized 	= .F.

	If Pemstatus( Thisform, 'InitializeControls', 5 )
		Bindevent( Thisform, 'InitializeControls', This, 'Initialize', 1 )
	Endif

	If Pemstatus( Thisform, 'InitializeRows', 5 )
		Bindevent( Thisform, 'InitializeRows', This, 'InitializeRows', 1 )
	Endif

	If Pemstatus( Thisform, 'AfterBindControls', 5 )
		Bindevent( Thisform, 'AfterBindControls', This, 'AfterBindControls', 1 )
	Endif

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE InteractiveChange
This.uOriginalValue = This.Value
ENDPROC
PROCEDURE LostFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String
Local luValue As Variant
Local loLabel as Label

Try

	lcCommand = ""
	If This.lValid
		This.BackColor = _CB_BACKCOLOR

	Else
		This.BackColor = _CB_NOTVALID_BACKCOLOR

	Endif

	This.ForeColor = _CB_FORECOLOR

	luValue = This.Value
	If This.lInitialized And ( Empty( Alltrim( Transform( luValue ) ) ) Or Isnull( luValue ) )
		This.lCueVisible = .T.
	Endif

	Try

		loLabel = This.oLabel
		loLabel.FontBold = .F.
		
		If This.lValid
			loLabel.ForeColor = loLabel.nForeColor

		Else
			loLabel.ForeColor = RGB(255,0,0)
			
		Endif

	Catch To oErr

	Finally

	Endtry


Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	Wait Clear


Endtry

ENDPROC
PROCEDURE MouseDown
Lparameters nButton, nShift, nXCoord, nYCoord

Do Case
	Case nButton = 2 And nShift = 0 && Right Click

		Define Popup Emergente SHORTCUT Relative From Mrow(),Mcol()


		Define Bar _Med_undo Of emergente Prompt "\<Deshacer" Key CTRL+Z, "Ctrl+Z" PICTRES _Med_undo ;
			message "Deshace el último comando o acción."
		Define Bar _Med_redo Of emergente Prompt "Re\<hacer" Key CTRL+R, "Ctrl+R" PICTRES _Med_redo ;
			message "Repite el último comando o acción."
		Define Bar 3 Of emergente Prompt "\-"
		Define Bar _Med_cut Of emergente Prompt "Cor\<tar" Key CTRL+X, "Ctrl+X" PICTRES _Med_cut ;
			message "Quita la selección y la coloca en el Portapapeles."
		Define Bar _Med_copy Of emergente Prompt "\<Copiar" Key CTRL+C, "Ctrl+C" PICTRES _Med_copy ;
			message "Copia la selección al Portapapeles."
		Define Bar _Med_paste Of emergente Prompt "Peg\<ar"	Key CTRL+V, "Ctrl+V" PICTRES _Med_paste ;
			message "Pega el contenido del Portapapeles."
		Define Bar 7 Of emergente Prompt "\-"
		Define Bar _Med_slcta Of emergente Prompt "\<Seleccionar todo" Key CTRL+A, "Ctrl+A" PICTRES _Med_slcta ;
			message "Selecciona todos los elementos o texto de la ventana actual."
			
		Activate Popup Emergente
		Thisform.Refresh()

Endcase

ENDPROC
PROCEDURE Valid
Local lcCommand As String
Local loField As oField Of 'Tools\DataDictionary\prg\oField.prg'
Local llValid As Boolean

Try

	lcCommand = ""
	llValid = .T.
	loField = This.oField

	If !Isnull( loField )
		If llValid
			If loField.lRequired  And Empty( This.Value )
				*Warning( "Valor Obligatorio", loField.cCaption )
				llValid = .F.

				TEXT To lcMsg NoShow TextMerge Pretext 03
				<<loField.cCaption>>

				Valor Obligatorio
				ENDTEXT

				Wait Window Nowait Noclear lcMsg

			Endif
		Endif
	Endif

	This.lValid = llValid
	
	If llValid
		Wait CLEAR
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


Endtry

* RA 19/09/2021(17:31:19)
* Permite seguir. La validación final se hacel al confirmar globalmente
Return .T.

ENDPROC
PROCEDURE afterbindcontrols
Local lcCommand As String

Try

	lcCommand = ""

	If Thisform.BindControls And ! This.lInitialized
		This.lFontItalic 	= This.FontItalic
		This.cForecolor 	= This.ForeColor
		This.nAlignment 	= This.Alignment
		This.uOriginalValue = This.Value
		This.cFormat 		= This.Format
		This.nMaxLength 	= This.MaxLength
		
		This.lInitialized 	= .T.

		luValue = This.Value
		This.lCueVisible 	= ( Empty( Alltrim( Transform( luValue ) ) ) Or Isnull( luValue ) )

	Endif
	
	If !Thisform.BindControls
		This.lInitialized = .F.
		This.uOriginalValue = ""
	EndIf


Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE ccuetext_assign
#INCLUDE "FW\Comunes\Include\Praxis.h"

Lparameters tcCueText
This.cCueText = tcCueText
If Empty( This.ToolTipText )
	This.ToolTipText = This.cCueText

Else
	This.ToolTipText = This.ToolTipText + CRLF + " ( " + This.cCueText + " )"

Endif


ENDPROC
PROCEDURE enabled_assign
lparameters tEnabled
This.Enabled = tEnabled

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.FontBold = !tEnabled
EndIf

ENDPROC
PROCEDURE initialize
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	
	If This.lAutomaticDisplay
		If Empty( This.cTable )
			This.cTable = This.Parent.cTable
		EndIf
	EndIf

	loBiz = This.oBiz
	loBiz.Initialize()
	If Empty( This.ControlSource )
		This.ControlSource = "Thisform.oRegistro." + This.cFieldName
	EndIf
	
	*Thisform.oControles.Add( This, Lower( This.Name ))
	Thisform.oControles.Add( This, Lower( This.Parent.Name ) + "_" + Lower( This.Name ))

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null

Endtry

ENDPROC
PROCEDURE initializerows
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""

	loBiz = This.oBiz
	loBiz.InicializarFilas()
	
Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null
	This.oBiz = Null

Endtry

ENDPROC
PROCEDURE lcuevisible_assign
Lparameters tlCueVisible

Local lcCommand As String

Try

	lcCommand = ""

	This.lCueVisible = tlCueVisible

	If This.lInitialized
		If This.lCueVisible
			This.Format 	= ''
			This.MaxLength 	= 0
			This.ForeColor 	= This.DisabledForeColor
			This.FontItalic = .T.
			This.Alignment 	= 0
			This.Value 		= Alltrim( This.cCueText )

		Else
			This.Format 	= This.cFormat
			This.MaxLength 	= This.nMaxLength
			This.ForeColor 	= This.cForecolor
			This.FontItalic = This.lFontItalic
			This.Alignment 	= This.nAlignment

			If Alltrim( Transform( This.Value ) ) == Alltrim( This.cCueText )
				This.Value = This.uOriginalValue
			Endif

		Endif

	Endif

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry


ENDPROC
PROCEDURE obiz_access
Local lcCommand as String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	If Vartype( This.oBiz ) # "O"
		loBiz = NewObject( This.cClassName, This.cClassLibrary )
 		loBiz.oControl 	= This
 		loBiz.oThisForm = Thisform
		This.oBiz = loBiz
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loBiz = Null


EndTry

Return This.oBiz
ENDPROC
PROCEDURE visible_assign
lparameters tVisible
This.Visible = tVisible

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.Visible = tVisible
EndIf

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
ccuetext Texto Aclaratorio
_memberdata XML Metadata for customizable properties
cfieldname
cforecolor
cformat
ctable
lcuevisible
lfontitalic
linitialized
llabelautosize
lvalid
nalignment
nlabelposition Posición del Label con respecto al control. 2 - Izquierda, 5 - Derecha, 6 - Arriba, 9 - Abajo
nmaxlength
ofield
olabel
uoriginalvalue
cclassname Nombre de la Clase de Negocios
cclasslibrary Nombre de la librería donde se encuentra la Clase de Negocios
lautomaticdisplay Indica si utiliza la clase de negocios para el deploy automático
lgeneratelabel Indica si el control Label se genera automáticamente en tiempo de ejecución
ncolumnsspan El Form se divide en 12 columnas virtuales. Indica cuantas columnas ocupa, con Label incluído
nheight Alto Total del Control en pixeles. (Label incluido)
nlabelspan En caso que el label se posicione en la misma fila del control, cantidad de columnas que ocupa el label. (no se toma en cuenta si está arriba u abajo) 0: No lleva etiqueta
nleftcolumn Columna donde se posiciona el control (con el label incluído, en caso de que el mismo estuviera a la izquierda)
nrowspan En caso de controles tipo Grilla o EditBox, indica cuantas filas ocupa
ntoprow Nº de fila donde se posiciona el control (Con el label incluido en caso caso de que el mismo estuviera arriba o abajo)
nverticalalignment En caso de encontrarse en una fila con alto doble, porque el label se encuentra arriba o abajo, indica donde se alínea, en el caso de ocupar un alto simple. 0: Abajo; 1: Arriba
nwidth Ancho Total del Control en pixeles. (Label incluido)
obiz
lreadonly
*ccuetext_assign 
*lcuevisible_assign 
*initialize 
*afterbindcontrols 
*obiz_access 
*initializerows 
*enabled_assign 
*visible_assign 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _editbox
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]
[START RESERVED1]
  ..\include\praxis.hÆynfdV ..\include\foxpro.hÎzÊrûF ..\include\strings.hÖ{ZOJ* ..\..\..\tools\namespaces\include\system.hÞ|±ÙF[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _66H0UD462
[CLASS] container
[BASECLASS] container
[OBJNAME] _container
[START PROPERTIES]
Width = 200
Height = 200
BackStyle = 0
Visible = .T.
cclassname = oCB_Container
_memberdata =     1477<VFPData><memberdata name="cclassname" display="cClassName"/><memberdata name="cclasslibrary" display="cClassLibrary"/><memberdata name="lautomaticdisplay" display="lAutomaticDisplay"/><memberdata name="ncolumnsspan" display="nColumnsSpan"/><memberdata name="nheight" display="nHeight"/><memberdata name="nlabelspan" display="nLabelSpan"/><memberdata name="nleftcolumn" display="nLeftColumn"/><memberdata name="nrowspan" display="nRowSpan"/><memberdata name="ntoprow" display="nTopRow"/><memberdata name="nverticalalignment" display="nVerticalAlignment"/><memberdata name="nwidth" display="nWidth"/><memberdata name="nlabelposition" display="nLabelPosition"/><memberdata name="ctable" display="cTable"/><memberdata name="obiz" display="oBiz"/><memberdata name="obiz_access" display="oBiz_Access"/><memberdata name="initialize" display="Initialize"/><memberdata name="initializerows" display="InitializeRows"/><memberdata name="cmodelo" display="cModelo"/><memberdata name="afterbindcontrols" display="AfterBindControls"/><memberdata name="cfieldname" display="cFieldName"/><memberdata name="olabel" display="oLabel"/><memberdata name="omodelo" display="oModelo"/><memberdata name="omodelo_access" display="oModelo_Access"/><memberdata name="lvalid" display="lValid"/><memberdata name="ofield" display="oField"/><memberdata name="lreadonly" display="lReadOnly"/><memberdata name="visible" display="Visible"/><memberdata name="visible_assign" display="Visible_Assign"/></VFPData>
cclasslibrary = FW\Comunes\vcx\_Controles_Base.prg
lautomaticdisplay = .T.
ncolumnsspan = 4
nheight = 0
nlabelspan = 0
nleftcolumn = 1
nrowspan = 4
ntoprow = 1
nverticalalignment = 0
nwidth = 0
nlabelposition = 0
ctable = 
obiz = .NULL.
cmodelo = 
cfieldname = 
olabel = .NULL.
omodelo = .NULL.
lvalid = .F.
ofield = .NULL.
lreadonly = .F.
Name = "_container"
[END PROPERTIES]
[START METHODS]
PROCEDURE Destroy
This.oBiz = Null
This.oLabel = Null
ENDPROC
PROCEDURE GotFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String

Try

	lcCommand = ""

	Try

		This.oLabel.FontBold = .T.

	Catch To oErr

	Finally

	EndTry

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = _NewObject ( 'ErrorHandler', 'ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE Init
Local lcCommand as String

Try

	lcCommand = ""
	This.BorderWidth = 0
	If Empty( This.cTable )
		This.cTable = This.Parent.cTable
	EndIf
	
	If Pemstatus( Thisform, 'InitializeControls', 5 )
		Bindevent( Thisform, 'InitializeControls', This, 'Initialize', 1 )
	Endif

	If Pemstatus( Thisform, 'InitializeRows', 5 )
		Bindevent( Thisform, 'InitializeRows', This, 'InitializeRows', 1 )
	Endif

	If Pemstatus( Thisform, 'AfterBindControls', 5 )
		Bindevent( Thisform, 'AfterBindControls', This, 'AfterBindControls', 1 )
	Endif
	

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE LostFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String

Try

	lcCommand = ""
	
	Try

		This.oLabel.FontBold = .F.

	Catch To oErr

	Finally

	EndTry

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = _NewObject ( 'ErrorHandler', 'ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	Wait Clear


Endtry

ENDPROC
PROCEDURE afterbindcontrols
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE initialize
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE initializerows
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""

	loBiz = This.oBiz
	loBiz.InicializarFilas()
	
Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null
	This.oBiz = Null

Endtry

ENDPROC
PROCEDURE obiz_access
Local lcCommand as String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	If Vartype( This.oBiz ) # "O"
		loBiz = NewObject( This.cClassName, This.cClassLibrary )
 		loBiz.oControl 	= This
 		loBiz.oThisForm = Thisform
		This.oBiz = loBiz
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loBiz = Null


EndTry

Return This.oBiz
ENDPROC
PROCEDURE omodelo_access
Local lcCommand as String

Try

	lcCommand = ""
	If IsNull( This.oModelo )
		This.oModelo = GetEntity( This.cModelo )
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

return This.oModelo

ENDPROC
PROCEDURE visible_assign
lparameters tVisible
This.Visible = tVisible

If Vartype( This.oLabel ) = "O"
	Local loLabel as Label
	loLabel = This.oLabel
	loLabel.Visible = tVisible
EndIf

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
cclassname Nombre de la Clase de Negocios
_memberdata XML Metadata for customizable properties
cclasslibrary Nombre de la librería donde se encuentra la Clase de Negocios
lautomaticdisplay Indica si utiliza la clase de negocios para el deploy automático
ncolumnsspan El Form se divide en 12 columnas virtuales. Indica cuantas columnas ocupa, con Label incluído
nheight Alto Total del Control en pixeles. (Label incluido)
nlabelspan En caso que el label se posicione en la misma fila del control, cantidad de columnas que ocupa el label. (no se toma en cuenta si está arriba u abajo) 0: No lleva etiqueta
nleftcolumn Columna donde se posiciona el control (con el label incluído, en caso de que el mismo estuviera a la izquierda)
nrowspan En caso de controles tipo Grilla o EditBox, indica cuantas filas ocupa
ntoprow Nº de fila donde se posiciona el control (Con el label incluido en caso caso de que el mismo estuviera arriba o abajo)
nverticalalignment En caso de encontrarse en una fila con alto doble, porque el label se encuentra arriba o abajo, indica donde se alínea, en el caso de ocupar un alto simple. 0: Abajo; 1: Arriba
nwidth Ancho Total del Control en pixeles. (Label incluido)
nlabelposition Posición del Label con respecto al control. 2 - Izquierda, 5 - Derecha, 6 - Arriba, 9 - Abajo	
ctable
obiz
cmodelo
cfieldname
olabel
omodelo
lvalid Indica si el control contiene un valor válido luego de dejar el foco
ofield
lreadonly
*obiz_access 
*initialize 
*initializerows 
*afterbindcontrols 
*omodelo_access 
*visible_assign 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _container
[START RESERVED1]
  ..\include\praxis.hÆynfdV ..\include\foxpro.hÎzÊrûF ..\include\strings.hÖ{ZOJ* ..\..\..\tools\namespaces\include\system.hÞ|±ÙF[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _66J0QIY23
[CLASS] _container
[CLASSLOC] _controles_base.vcx
[BASECLASS] container
[OBJNAME] _moverlist
[START PROPERTIES]
Width = 216
Height = 120
ofiltros = .NULL.
nsetpagesize = 1000
ofield = .NULL.
cclassname = oCB_MoverList
nlabelposition = 7
nlabelspan = 4
nleftcolumn = 1
nrowspan = 6
_memberdata =      679<VFPData><memberdata name="cargarlistbox" display="CargarListBox"/><memberdata name="agregarfiltros" display="AgregarFiltros"/><memberdata name="ofiltros" display="oFiltros"/><memberdata name="addone" display="AddOne"/><memberdata name="removeone" display="RemoveOne"/><memberdata name="addall" display="AddAll"/><memberdata name="removeall" display="RemoveAll"/><memberdata name="selectall" display="SelectAll"/><memberdata name="moveselected" display="MoveSelected"/><memberdata name="saveselected" display="SaveSelected"/><memberdata name="lvalid" display="lValid"/><memberdata name="ofield" display="oField"/><memberdata name="nsetpagesize" display="nSetPageSize"/></VFPData>
lvalid = .F.
Name = "_moverlist"
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
Local lcCommand as String

Try

	lcCommand = ""
	This.BorderWidth = 0
	If Empty( This.cTable )
		This.cTable = This.Parent.cTable
	EndIf
	
	If Pemstatus( Thisform, 'InitializeControls', 5 )
		Bindevent( Thisform, 'InitializeControls', This, 'Initialize', 1 )
	Endif

	If Pemstatus( Thisform, 'InitializeRows', 5 )
		Bindevent( Thisform, 'InitializeRows', This, 'InitializeRows', 1 )
	Endif

	If Pemstatus( Thisform, 'AfterBindControls', 5 )
		Bindevent( Thisform, 'AfterBindControls', This, 'AfterBindControls', 1 )
	Endif
	
	If Pemstatus( Thisform, 'Grabar', 5 )
		Bindevent( Thisform, 'Grabar', This, 'SaveSelected', 0 )
	Endif

	This.oFiltros = Newobject( "CollectionBase", "Tools\Namespaces\Prg\CollectionBase.Prg" )
	

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE addall
Thisform.LockScreen = .T.
This.SelectAll( This.lstavailable )
This.MoveSelected( This.lstavailable, This.lstSelected )
Thisform.LockScreen = .F.

ENDPROC
PROCEDURE addone
Thisform.LockScreen = .T.
This.MoveSelected( This.lstavailable, This.lstselected )
Thisform.LockScreen = .F.

ENDPROC
PROCEDURE agregarfiltros
Local lcCommand As String
Local loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg,;
    loFiltro As Object



Try

    lcCommand = ""

    loFiltros = This.oFiltros

    loFiltro = Createobject( "Empty" )
    AddProperty( loFiltro, "Nombre", "Activos" )
    AddProperty( loFiltro, "FieldName", "activo" )
    AddProperty( loFiltro, "FieldRelation", "==" )
    AddProperty( loFiltro, "FieldValue", "True" )
    loFiltros.AddItem( loFiltro, loFiltro.Nombre )

    loFiltro = Createobject( "Empty" )
    AddProperty( loFiltro, "Nombre", "SetPageSize" )
    AddProperty( loFiltro, "FieldName", "current_size" )
    AddProperty( loFiltro, "FieldRelation", "=" )
    AddProperty( loFiltro, "FieldValue", Transform( This.nSetPageSize ) )
    loFiltros.AddItem( loFiltro, loFiltro.Nombre )


Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    loFiltro 	= Null
    loFiltros 	= Null

Endtry

ENDPROC
PROCEDURE cargarlistbox
Local lcCommand As String,;
	lcAlias As String,;
	lcFieldValue As String

Local loModelo As oModelo Of "FrontEnd\Prg\Modelo.prg",;
	loParam As Object,;
	loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg,;
	loColId As Collection,;
	loLB As ListBox

Local lnLen As Integer,;
	i As Integer,;
	lnId As Integer


Try

	lcCommand = ""

	loModelo = This.oModelo

	This.AgregarFiltros()
	
	loColId = Evaluate( "Thisform.oRegistro." + This.cFieldName )

	lnLen = loColId.Count
	If !Empty( lnLen )
		Dimension aIds[ lnLen ]

		i = 0
		For Each lnId In loColId
			i = i + 1
			aIds[ i ] = lnId
		Endfor

	Endif

	loFiltros = This.oFiltros
	loParam = Createobject( "Empty" )

	AddProperty( loParam, "oFilterCriteria", loFiltros )

	lcAlias = loModelo.cMainCursorName + Sys(2015)
	AddProperty( loParam, "cAlias", lcAlias )

	loModelo.GetByWhere( loParam )

	This.lstSelected.Clear()
	This.lstavailable.Clear()

	Select Alias( lcAlias )
	Locate
	Scan

		lnId = Id

		If !Empty( lnLen )
			If Ascan( aIds, lnId ) > 0
				loLB = This.lstSelected

			Else
				loLB = This.lstAvailable

			Endif

		Else
			loLB = This.lstAvailable

		Endif

		loLB.AddItem( Alltrim( Nombre ))
		loLB.List( loLB.NewIndex, 2 ) = Transform( lnId )

	Endscan

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loFiltro = Null
	loFiltros = Null
	loParam = Null
	loModelo = Null

	Use In Select( lcAlias )

Endtry

ENDPROC
PROCEDURE initialize
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	If This.lAutomaticDisplay
		If Empty( This.cTable )
			This.cTable = This.Parent.cTable
		EndIf
	EndIf

	loBiz = This.oBiz
	loBiz.Initialize()
	*Thisform.oControles.Add( This, Lower( This.Name ))
	Thisform.oControles.Add( This, Lower( This.Parent.Name ) + "_" + Lower( This.Name ))
	This.CargarListBox()

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null

Endtry

ENDPROC
PROCEDURE moveselected
Lparameters toSource As ListBox, toTarget As ListBox

Local lnCnt  As Integer,;
	i As Integer
Local lnMoved As Integer
Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"

Try

	lnMoved = 1
	If toSource.MultiSelect
		* The ListCount value changes whenever the RemoveItem method is called
		lnCnt = 1
		Do While lnCnt <= toSource.ListCount
			If toSource.Selected( lnCnt )
				toTarget.AddItem( toSource.List( lnCnt ) )
				toTarget.List[ toTarget.NewIndex, 2] = toSource.List( lnCnt, 2 )

				toSource.RemoveItem( lnCnt )
				lnMoved = lnCnt

			Else
				lnCnt = lnCnt + 1

			Endif

		Enddo
	Else
		lnCnt = toSource.ListIndex
		If ! Empty( lnCnt )

			toTarget.AddItem( toSource.List( lnCnt ) )
			toTarget.List[ toTarget.NewIndex, 2] = toSource.List( lnCnt, 2 )

			toSource.RemoveItem( lnCnt )
			lnMoved = lnCnt

		Endif

	Endif

	If ! Empty( toSource.ListCount )
		toSource.Selected( Min( lnMoved, toSource.ListCount ) ) = .T.

	Endif

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "Tools\ErrorHandler\Prg\ErrorHandler.prg" )
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE removeall
Thisform.LockScreen = .T.
This.SelectAll( This.lstSelected )
This.MoveSelected( This.lstSelected, This.lstavailable )
Thisform.LockScreen = .F.

ENDPROC
PROCEDURE removeone
Thisform.LockScreen = .T.
This.MoveSelected( This.lstselected, This.lstavailable )
Thisform.LockScreen = .F.

ENDPROC
PROCEDURE saveselected
Local lcCommand As String
Local loLB As ListBox,;
	loColId As Collection

Local i As Integer,;
lnId as Integer

Try

	lcCommand = ""
	
	loColId = Evaluate( "Thisform.oRegistro." + This.cFieldName )
	loColId.Remove( -1 )

	loLB = This.lstSelected

	For i = 1 To loLB.ListCount
		lnId = Int( Val( loLB.List( i, 2 )))
		loColId.Add( lnId )
	Endfor

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE selectall
Lparameters toList As ListBox, tlUnselect As Boolean

Local lnCnt as Integer

For lnCnt = 1 To toList.ListCount
	toList.Selected( lnCnt ) = ! tlUnselect

Endfor

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
9[END RESERVED2]
[START RESERVED3]
ofiltros
nsetpagesize Tamaño de página por defecto
*cargarlistbox Carga ambos ListBox
*agregarfiltros 
*addone 
*removeone 
*addall 
*removeall 
*selectall 
*moveselected 
*saveselected Graba lo que está en el lstSelected
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _66J0ROE5S
[CLASS] _listbox
[CLASSLOC] _controles_base.vcx
[BASECLASS] listbox
[OBJNAME] lstAvailable
[PARENT] _moverlist
[START PROPERTIES]
Height = 96
Left = 0
Top = 24
Width = 96
nlabelspan = 0
Name = "lstAvailable"
[END PROPERTIES]
[START METHODS]
PROCEDURE DblClick
This.Parent.AddOne()
ENDPROC
PROCEDURE Init
Local lcCommand as String

Try

	lcCommand = ""
	
	This.BoundColumn 	= 2
	This.BoundTo 		= .T.
	This.ColumnCount 	= 1
	This.RowSourceType 	= 0
	This.RowSource 		= ""
	This.Sorted 		= .F.
	
Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = _NewObject ( 'ErrorHandler', 'ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _66J0ROE5T
[CLASS] _listbox
[CLASSLOC] _controles_base.vcx
[BASECLASS] listbox
[OBJNAME] lstSelected
[PARENT] _moverlist
[START PROPERTIES]
FontBold = .T.
Height = 96
Left = 120
Top = 24
Width = 96
nlabelspan = 0
Name = "lstSelected"
[END PROPERTIES]
[START METHODS]
PROCEDURE DblClick
This.Parent.RemoveOne()

ENDPROC
PROCEDURE Init
Local lcCommand as String

Try

	lcCommand = ""
	
	This.BoundColumn 	= 2
	This.BoundTo 		= .T.
	This.ColumnCount 	= 1
	This.RowSourceType 	= 0
	This.RowSource 		= ""
	This.Sorted 		= .F.
	
Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = _NewObject ( 'ErrorHandler', 'ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _41010GHAO
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] btnRemoveAll
[PARENT] _moverlist
[START PROPERTIES]
Top = 96
Left = 97
Height = 24
Width = 22
Picture = ..\image\bmp\removeall.bmp
Caption = ""
Name = "btnRemoveAll"
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
This.Parent.RemoveAll()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _66J0ROE5W
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] btnAddOne
[PARENT] _moverlist
[START PROPERTIES]
Top = 48
Left = 97
Height = 24
Width = 22
Picture = ..\image\bmp\addone.bmp
Caption = ""
Name = "btnAddOne"
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
This.Parent.AddOne()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _66J0ROE5Y
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] btnRemoveOne
[PARENT] _moverlist
[START PROPERTIES]
Top = 72
Left = 97
Height = 24
Width = 22
Picture = ..\image\bmp\removeone.bmp
Caption = ""
Name = "btnRemoveOne"
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
This.Parent.RemoveOne()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _66J0ROE5Z
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] btnAddAll
[PARENT] _moverlist
[START PROPERTIES]
Top = 24
Left = 97
Height = 24
Width = 22
Picture = ..\image\bmp\addall.bmp
Caption = ""
Name = "btnAddAll"
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
This.Parent.AddAll()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _41010GHAO
[CLASS] label
[BASECLASS] label
[OBJNAME] lblAvailable
[PARENT] _moverlist
[START PROPERTIES]
AutoSize = .T.
BackStyle = 0
Caption = "Disponibles"
Height = 17
Left = 0
Top = 6
Width = 69
ForeColor = 0,0,255
Name = "lblAvailable"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _66J0ROE62
[CLASS] label
[BASECLASS] label
[OBJNAME] lblSelected
[PARENT] _moverlist
[START PROPERTIES]
AutoSize = .T.
BackStyle = 0
Caption = "Seleccionados"
Height = 17
Left = 120
Top = 6
Width = 84
ForeColor = 0,0,255
Name = "lblSelected"
[END PROPERTIES]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _moverlist
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
Arial, 1, 9, 6, 15, 12, 32, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _6DO127TEE
[CLASS] _container
[CLASSLOC] _controles_base.vcx
[BASECLASS] container
[OBJNAME] _selector_listbox_old
[START PROPERTIES]
Width = 228
Height = 20
nmaxitems = 20
uid_original = 0
uid_nuevo = 0
coldvalue = 
ncolumnsspan = 8
nlabelposition = 2
nlabelspan = 4
nleftcolumn = 1
nrowspan = 1
ntoprow = 1
_memberdata =      273<VFPData><memberdata name="nmaxitems" display="nMaxItems"/><memberdata name="uid_original" display="uId_Original"/><memberdata name="uid_nuevo" display="uId_Nuevo"/><memberdata name="coldvalue" display="cOldValue"/><memberdata name="autosize" display="AutoSize"/></VFPData>
Name = "_selector_listbox"
[END PROPERTIES]
[START METHODS]
PROCEDURE Destroy
This.oBiz = Null
This.oLabel = Null

ENDPROC
PROCEDURE Init
Local lcCommand as String

Try

	If Empty( This.ListBox.cModelo )
		This.ListBox.cModelo = This.cModelo
	EndIf
	
	DoDefault()
	
	This.BackStyle = 1

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE LostFocus
DoDefault()
This.Height = This.cntSearch.Height
This.ZOrder( 0 )

This.btnUpDown.Picture 		= "v:\CloudFox\FW\Comunes\image\bmp\arrowdown.bmp"
This.btnUpDown.Height 		= This.cntSearch.Height
This.btnUpDown.ToolTipText 	= "Expandir la Lista"

ENDPROC
PROCEDURE afterbindcontrols
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE autosize
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE initialize
Local lcCommand As String

Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"
Local luId As Variant

Try

    lcCommand = ""
    *!*		If This.lAutomaticDisplay
    *!*			If Empty( This.cTable )
    *!*				This.cTable = This.Parent.cTable
    *!*			EndIf
    *!*		EndIf

    loBiz = This.oBiz
    loBiz.Initialize()

    This.ListBox.ControlSource = "Thisform.oRegistro." + This.cFieldName

    luId = Evaluate( This.ListBox.ControlSource )
    If !Empty( luId )
        This.ListBox.CargarListBox( luId )
    Endif


    *!*		Thisform.oControles.Add( This, Lower( This.Name ))
    *!*		This.CargarListBox()

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally


Endtry

ENDPROC
PROCEDURE initializerows
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	
	loBiz = This.oBiz
	loBiz.InicializarFilas()
	
Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null
	This.oBiz = Null

Endtry

ENDPROC
PROCEDURE obiz_access
Local lcCommand as String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	If Vartype( This.oBiz ) # "O"
		loBiz = NewObject( This.cClassName, This.cClassLibrary )
 		loBiz.oControl 	= This
 		loBiz.oThisForm = Thisform
		This.oBiz = loBiz
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loBiz = Null


EndTry

Return This.oBiz
ENDPROC
PROCEDURE omodelo_access
Local lcCommand as String

Try

	lcCommand = ""
	If IsNull( This.oModelo )
		This.oModelo = GetEntity( This.cModelo )
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

return This.oModelo

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
4[END RESERVED2]
[START RESERVED3]
nmaxitems Cantidad máxima de Items
uid_original Id que tenía el control al inicializarce. Se utiliza para verificar si el usuario lo modificó.
uid_nuevo El ultimo Id seleccionado por el usuario. Se compara con uId_Original para determinar si se modificó
coldvalue Se utiliza para determinar si se cambió el valor o solo se dio enter sobre el mismo valor
*autosize Specifies if a control is automatically resized to fit its contents.
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _6DO12GK66
[CLASS] _listbox
[CLASSLOC] _controles_base.vcx
[BASECLASS] listbox
[OBJNAME] ListBox
[PARENT] _selector_listbox_old
[START PROPERTIES]
Anchor = 11
Left = 0
TabIndex = 2
Top = 24
Width = 228
IntegralHeight = .T.
Name = "ListBox"
[END PROPERTIES]
[START METHODS]
PROCEDURE GotFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String

Try

	lcCommand = ""
	
*!*		This.ItemBackColor = _CB_ONFOCUS_BACKCOLOR
*!*		This.ItemForeColor = _CB_ONFOCUS_FORECOLOR
*!*		
*!*		Try

*!*			This.oLabel.FontBold = .T.

*!*		Catch To oErr

*!*		Finally

*!*		EndTry

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = _NewObject ( 'ErrorHandler', 'ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE Init
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String
Local llFormVisible As Boolean

Try

    lcCommand = ""

    llFormVisible = Thisform.Visible

	This.BoundColumn 	= 2
	This.BoundTo 		= .T.
	This.ColumnCount 	= 1
	This.RowSourceType 	= 0
	This.RowSource 		= ""
	This.Sorted 		= .T.

    This.Height 		= 24 * 10
    This.ItemBackColor 	= _CB_ONFOCUS_BACKCOLOR


    *!*		If Pemstatus( Thisform, 'InitializeControls', 5 )
    *!*			Bindevent( Thisform, 'InitializeControls', This, 'Initialize', 1 )
    *!*		Endif

    *!*		If Pemstatus( Thisform, 'InitializeRows', 5 )
    *!*			Bindevent( Thisform, 'InitializeRows', This, 'InitializeRows', 1 )
    *!*		Endif

    *!*		If Pemstatus( Thisform, 'AfterBindControls', 5 )
    *!*			Bindevent( Thisform, 'AfterBindControls', This, 'AfterBindControls', 1 )
    *!*		Endif

    This.oFiltros = Newobject( "CollectionBase", "Tools\Namespaces\Prg\CollectionBase.Prg" )



Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = _NewObject ( 'ErrorHandler', 'ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    Thisform.Visible = llFormVisible
    Thisform.WindowType = 1

Endtry

ENDPROC
PROCEDURE InteractiveChange
This.Parent.cntSearch.txtSearch.Value = This.DisplayValue
This.parent.uId_Nuevo = This.Value
This.Parent.cntSearch.txtSearch.SetFocus()

ENDPROC
PROCEDURE KeyPress
#INCLUDE "FW\Comunes\Include\Praxis.h"

Lparameters nKeyCode, nShiftAltCtrl

Do Case
    Case nKeyCode = KEY_TAB
        This.Parent.btnUpDown.SetFocus()

    Otherwise

Endcase

ENDPROC
PROCEDURE LostFocus
#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String

Try

	lcCommand = ""
*!*		This.ItemBackColor = _CB_BACKCOLOR
*!*		This.ItemForeColor = _CB_FORECOLOR
*!*		
*!*		Try

*!*			This.oLabel.FontBold = .F.

*!*		Catch To oErr

*!*		Finally

*!*		EndTry

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = _NewObject ( 'ErrorHandler', 'ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	Wait Clear


Endtry

ENDPROC
PROCEDURE ProgrammaticChange
This.InteractiveChange()
ENDPROC
PROCEDURE afterbindcontrols
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE agregarfiltros
Local lcCommand As String
Local loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg,;
    loFiltro As Object

Try

    lcCommand = ""

    loFiltros = This.oFiltros

    loFiltro = Createobject( "Empty" )
    AddProperty( loFiltro, "Nombre", "Activos" )
    AddProperty( loFiltro, "FieldName", "activo" )
    AddProperty( loFiltro, "FieldRelation", "==" )
    AddProperty( loFiltro, "FieldValue", "True" )
    loFiltros.AddItem( loFiltro, loFiltro.Nombre )

	* RA 14/07/2022(17:53:56)
	* Hacer un hit para traer un solo registro
	* para verificar la cantidad total de items
    loFiltro = Createobject( "Empty" )
    AddProperty( loFiltro, "Nombre", "SetPageSize" )
    AddProperty( loFiltro, "FieldName", "current_size" )
    AddProperty( loFiltro, "FieldRelation", "=" )
    AddProperty( loFiltro, "FieldValue", Transform( 1 ) )
    loFiltros.AddItem( loFiltro, loFiltro.Nombre )



Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    loFiltro 	= Null
    loFiltros 	= Null

Endtry

ENDPROC
PROCEDURE cargarlistbox
Lparameters uId As Variant

Local lcCommand As String,;
    lcAlias As String
Local loModelo As oModelo Of "FrontEnd\Prg\Modelo.prg",;
    loParam As Object,;
    loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg,;
    loReturn As Object

Local llFormVisible as Boolean

Try

    lcCommand = ""
    loModelo = This.oModelo
    llFormVisible = Thisform.Visible

    If !Empty( uId )
        loReturn = loModelo.GetByPK( uId )
        This.Clear()
        This.AddItem( Alltrim( loReturn.oRegistro.Nombre ))
        This.List( This.NewIndex, 2 ) = Transform( uId )

        This.Selected( 1 ) = .T.

    Else
        This.AgregarFiltros()

        loFiltros = This.oFiltros
        loParam = Createobject( "Empty" )

        AddProperty( loParam, "oFilterCriteria", loFiltros )

        lcAlias = loModelo.cMainCursorName + Sys(2015)
        AddProperty( loParam, "cAlias", lcAlias )

        loReturn = loModelo.GetByWhere( loParam )

        If loReturn.nTally <= This.Parent.nMaxItems And !Empty( loReturn.nTally )
            If loReturn.nTally > 1

                This.RemoverFiltro( "SetPageSize" )

                loFiltro = Createobject( "Empty" )
                AddProperty( loFiltro, "Nombre", "SetPageSize" )
                AddProperty( loFiltro, "FieldName", "current_size" )
                AddProperty( loFiltro, "FieldRelation", "=" )
                AddProperty( loFiltro, "FieldValue", Transform( This.Parent.nMaxItems ) )
                loFiltros.AddItem( loFiltro, loFiltro.Nombre )

                *----------------------------------------------

                loReturn = loModelo.GetByWhere( loParam )
            Endif

            This.Clear()
            Select Alias( lcAlias )
            Locate
            Scan
                This.AddItem( Alltrim( Nombre ))
                This.List( This.NewIndex, 2 ) = Transform( Evaluate( loModelo.cPKField ) )
            Endscan

            If loReturn.nTally > 1
                This.Parent.btnUpDown.Click()
            Else
                This.Selected( 1 ) = .T.

            Endif

        Else
            If Empty( loReturn.nTally )
                Warning( "No se encontraron registros" )

            Else
                Warning( "Filtrar Más" )

            Endif

        Endif
    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    loFiltro = Null
    loFiltros = Null
    loParam = Null
    loModelo = Null
    loReturn = Null

    If !Empty( lcAlias )
        Use In Select( lcAlias )
    EndIf

    Thisform.Visible = llFormVisible
    Try

    	* RA 19/07/2022(17:02:57)
    	* Al inicializar los controles, This.Selected( 1 ) = .T.  pone
    	* Thisform.WindowType = 0 y da error en Modelo.LounchEditFotm()
    	* Do Form (This.cFormIndividual) With loParam To loStatus
    	* diciendo que debe ser Modal
    	* Cuando el Formulario ya está activo Thisform.WindowType = 1 da error
    	* de que Thisform.WindowType es de solo lectura
    	Thisform.WindowType = 1 	

    Catch To oErr

    Finally

    EndTry




Endtry

ENDPROC
PROCEDURE initialize
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
*!*		If This.lAutomaticDisplay
*!*			If Empty( This.cTable )
*!*				This.cTable = This.Parent.cTable
*!*			EndIf
*!*		EndIf

*!*		loBiz = This.oBiz
*!*		loBiz.Initialize()
*!*		This.ControlSource = "Thisform.oRegistro." + This.cFieldName
*!*		Thisform.oControles.Add( This, Lower( This.Name ))
*!*		This.CargarListBox()

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null

Endtry

ENDPROC
PROCEDURE initializerows
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""

*!*		loBiz = This.oBiz
*!*		loBiz.InicializarFilas()
	
Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null
	This.oBiz = Null

Endtry

ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _6DO12GK69
[CLASS] brwsearch
[CLASSLOC] prxbrowse.vcx
[BASECLASS] container
[OBJNAME] cntSearch
[PARENT] _selector_listbox_old
[START PROPERTIES]
Anchor = 11
Top = 0
Left = 0
Width = 204
TabIndex = 1
Name = "cntSearch"
txtSearch.Name = "txtSearch"
btnSearch.Name = "btnSearch"
[END PROPERTIES]
[START METHODS]
PROCEDURE btnSearch.KeyPress
#INCLUDE "FW\Comunes\Include\Praxis.h"

Lparameters nKeyCode, nShiftAltCtrl

Do Case
    Case nKeyCode = KEY_TAB
        This.Parent.Parent.btnUpDown.SetFocus()

    Otherwise

Endcase

ENDPROC
PROCEDURE buscar
Local lcCommand As String,;
    lcSearchString As String

Local loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg,;
    loFiltro As Object


Try

    lcCommand = ""

    If This.Parent.cOldValue # This.txtSearch.Value

        This.Parent.ListBox.RemoverFiltro( "Search" )

        If This.txtSearch.Value == This.cCueText
            lcSearchString = ""

        Else
            lcSearchString = Strtran( Alltrim( This.txtSearch.Value ), " ", "+" )

        Endif

        If !Empty( lcSearchString )

            loFiltros = This.Parent.ListBox.oFiltros

            loFiltro = Createobject( "Empty" )
            AddProperty( loFiltro, "Nombre", "Search"  )
            AddProperty( loFiltro, "FieldName", "search" )
            AddProperty( loFiltro, "FieldRelation", "=" )
            AddProperty( loFiltro, "FieldValue", lcSearchString )

            loFiltros.AddItem( loFiltro, loFiltro.Nombre )
        Endif

        This.Parent.ListBox.CargarListBox()
    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    loFiltro = Null
    loFiltros = Null


Endtry

ENDPROC
PROCEDURE txtSearch.GotFocus
This.parent.parent.cOldValue = This.Value
DoDefault()
ENDPROC
PROCEDURE txtSearch.KeyPress
#INCLUDE "FW\Comunes\Include\Praxis.h"

Lparameters nKeyCode, nShiftAltCtrl

Do Case
    Case nKeyCode = KEY_TAB
        This.Parent.Parent.btnUpDown.SetFocus()

    Case nKeyCode = KEY_ENTER
        This.Parent.Buscar()

    Otherwise

Endcase

ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _6DP153BOS
[CLASS] search
[CLASSLOC] buttons.vcx
[BASECLASS] commandbutton
[OBJNAME] btnUpDown
[PARENT] _selector_listbox_old
[START PROPERTIES]
Top = 0
Left = 204
Height = 24
Width = 24
Anchor = 8
Picture = ..\image\bmp\arrowdown.bmp
Caption = ""
TabIndex = 3
ToolTipText = "Expandir la lista"
Name = "btnUpDown"
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
Local lcCommand As String

Try

    lcCommand = ""
    If This.Parent.Height = This.Parent.cntSearch.Height
        This.Picture = "v:\CloudFox\FW\Comunes\image\bmp\arrowup.bmp"
        This.Parent.Height = This.Parent.ListBox.Height + 24
        This.ToolTipText = "Contraer la Lista"

    Else
        This.Picture = "v:\CloudFox\FW\Comunes\image\bmp\arrowdown.bmp"
        This.Parent.Height = This.Parent.cntSearch.Height
        This.ToolTipText = "Expandir la Lista"

    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally


Endtry

ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _selector_listbox_old
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]
[START RESERVED1]
  ..\include\praxis.hÆynfdV ..\include\foxpro.hÎzÊrûF ..\include\strings.hÖ{ZOJ* ..\..\..\tools\namespaces\include\system.hÞ|±ÙF[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _6E0149C9Q
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] _editbutton
[START PROPERTIES]
Height = 36
Width = 38
Picture = ..\image\ico\menus.ico
Caption = ""
oparent = .NULL.
_memberdata = <VFPData><memberdata name="oparent" display="oParent"/></VFPData>
Name = "_editbutton"
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
nButton = 2
nShift = 0
nXCoord = 0
nYCoord = 0

This.oParent.MouseDown(nButton, nShift, This.Top, This.Left)

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
oparent Referencia al parent
_memberdata
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _editbutton
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _6GH0NNCEU
[CLASS] _container
[CLASSLOC] _controles_base.vcx
[BASECLASS] container
[OBJNAME] _selector_listbox
[START PROPERTIES]
Width = 228
Height = 24
BorderWidth = 0
coldvalue = 
csearchfieldname = Nombre
lcasesensitive = .F.
ofiltros = .NULL.
uid_nuevo = 0
uid_original = 0
nmaxitems = 20
_memberdata =     1000<VFPData><memberdata name="autosize" display="Autosize"/><memberdata name="cargarselector" display="CargarSelector"/><memberdata name="buscar" display="Buscar"/><memberdata name="agregarfiltros" display="AgregarFiltros"/><memberdata name="removerfiltro" display="RemoverFiltro"/><memberdata name="coldvalue" display="cOldValue"/><memberdata name="csearchfieldname" display="cSearchFieldName"/><memberdata name="lcasesensitive" display="lCaseSensitive"/><memberdata name="ofiltros" display="oFiltros"/><memberdata name="uid_nuevo" display="uId_Nuevo"/><memberdata name="uid_original" display="uId_Original"/><memberdata name="ncolumnsspan" display="nColumnsSpan"/><memberdata name="nlabelposition" display="nLabelPosition"/><memberdata name="nlabelspan" display="nLabelSpan" favorites="True"/><memberdata name="nleftcolumn" display="nLeftColumn"/><memberdata name="nrowspan" display="nRowSpan"/><memberdata name="ntoprow" display="nTopRow"/><memberdata name="nmaxitems" display="nMaxItems"/></VFPData>
ncolumnsspan = 8
nlabelposition = 2
nlabelspan = 4
nleftcolumn = 1
nrowspan = 1
ntoprow = 1
Name = "_selector_listbox"
[END PROPERTIES]
[START METHODS]
PROCEDURE Destroy
This.oBiz = Null
This.oLabel = Null

ENDPROC
PROCEDURE Init
Local lcCommand as String

Try


	DoDefault()
	
	This.BackStyle = 1
	This.oFiltros = Newobject( "CollectionBase", "Tools\Namespaces\Prg\CollectionBase.Prg" )

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE afterbindcontrols
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE agregarfiltros
Local lcCommand As String
Local loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg,;
    loFiltro As Object

Try

    lcCommand = ""

    loFiltros = This.oFiltros

    loFiltro = Createobject( "Empty" )
    AddProperty( loFiltro, "Nombre", "Activos" )
    AddProperty( loFiltro, "FieldName", "activo" )
    AddProperty( loFiltro, "FieldRelation", "==" )
    AddProperty( loFiltro, "FieldValue", "True" )
    loFiltros.AddItem( loFiltro, loFiltro.Nombre )

	* RA 14/07/2022(17:53:56)
	* Hacer un hit para traer un solo registro
	* para verificar la cantidad total de items
    loFiltro = Createobject( "Empty" )
    AddProperty( loFiltro, "Nombre", "SetPageSize" )
    AddProperty( loFiltro, "FieldName", "current_size" )
    AddProperty( loFiltro, "FieldRelation", "=" )
    AddProperty( loFiltro, "FieldValue", Transform( 1 ) )
    loFiltros.AddItem( loFiltro, loFiltro.Nombre )


    loFiltro = Createobject( "Empty" )
    AddProperty( loFiltro, "Nombre", "Combo" )
    AddProperty( loFiltro, "FieldName", "combo" )
    AddProperty( loFiltro, "FieldRelation", "=" )
    AddProperty( loFiltro, "FieldValue", "True" )
    loFiltros.AddItem( loFiltro, loFiltro.Nombre )

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    loFiltro 	= Null
    loFiltros 	= Null

Endtry

ENDPROC
PROCEDURE autosize
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE buscar
Local lcCommand As String,;
    lcSearchString As String,;
    lcSearchCommand As String

Local loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg,;
    loFiltro As Object


Try

    lcCommand = ""

    If This.cOldValue # This.cntSearch.txtSearch.Value

        This.RemoverFiltro( "Search" )

        If This.cntSearch.txtSearch.Value == This.cntSearch.cCueText
            lcSearchString = ""

        Else
            lcSearchString = Strtran( Alltrim( This.cntSearch.txtSearch.Value ), " ", "+" )

        Endif

        If !Empty( lcSearchString )

            lcSearchCommand = Lower( This.cSearchFieldName )

            If This.lCaseSensitive = .T.
                lcSearchCommand = lcSearchCommand + "__contains"

            Else
                lcSearchCommand = lcSearchCommand + "__icontains"

            Endif

            loFiltros = This.oFiltros

            loFiltro = Createobject( "Empty" )
            AddProperty( loFiltro, "Nombre", "Search"  )
            AddProperty( loFiltro, "FieldName", lcSearchCommand )
            AddProperty( loFiltro, "FieldRelation", "=" )
            AddProperty( loFiltro, "FieldValue", lcSearchString )

            loFiltros.AddItem( loFiltro, loFiltro.Nombre )
        Endif

        *This.Parent.ListBox.CargarListBox()
      	This.CargarSelector()
      	
    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    loFiltro = Null
    loFiltros = Null


Endtry

ENDPROC
PROCEDURE cargarselector
Lparameters uId As Variant

Local lcCommand As String,;
    lcAlias As String
Local loModelo As oModelo Of "FrontEnd\Prg\Modelo.prg",;
    loParam As Object,;
    loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg,;
    loReturn As Object

Local llFormVisible As Boolean
Local i As Integer,;
lnOpcion as Integer

Try

    lcCommand = ""
    loModelo = This.oModelo
    llFormVisible = Thisform.Visible

    If !Empty( uId )
        loReturn = loModelo.GetByPK( uId )

        This.cntSearch.txtSearch.Value = Alltrim( loReturn.oRegistro.Nombre )

        TEXT To lcCommand NoShow TextMerge Pretext 15
        Thisform.oRegistro.<<This.cFieldName>> = <<uId>>
        ENDTEXT

        &lcCommand
        lcCommand = ""

    Else
        This.AgregarFiltros()

        loFiltros = This.oFiltros
        loParam = Createobject( "Empty" )

        AddProperty( loParam, "oFilterCriteria", loFiltros )

        lcAlias = loModelo.cMainCursorName + Sys(2015)
        AddProperty( loParam, "cAlias", lcAlias )

        loReturn = loModelo.GetByWhere( loParam )

        If loReturn.nTally <= This.nMaxItems And !Empty( loReturn.nTally )
            If loReturn.nTally > 1

                This.RemoverFiltro( "SetPageSize" )

                loFiltro = Createobject( "Empty" )
                AddProperty( loFiltro, "Nombre", "SetPageSize" )
                AddProperty( loFiltro, "FieldName", "current_size" )
                AddProperty( loFiltro, "FieldRelation", "=" )
                AddProperty( loFiltro, "FieldValue", Transform( This.nMaxItems ) )
                loFiltros.AddItem( loFiltro, loFiltro.Nombre )

                *----------------------------------------------

                loReturn = loModelo.GetByWhere( loParam )
            Endif

            Dimension aRegistros[ loReturn.nTally ],;
                aIds[ loReturn.nTally ]

            If loReturn.nTally = 1
                This.cntSearch.txtSearch.Value = Alltrim( loReturn.oRegistro.Nombre )

                TEXT To lcCommand NoShow TextMerge Pretext 15
        		Thisform.oRegistro.<<This.cFieldName>> = <<uId>>
                ENDTEXT

                &lcCommand
                lcCommand = ""

            Else

                Select Alias( lcAlias )
                Locate
                Scan
                    aRegistros[ Recno() ] = Alltrim( Nombre )
                    aIds[ Recno() ] = Evaluate( loModelo.cPKField )

                EndScan

                lnOpcion = 0
                lnOpcion = S_Opcion( -1,-1,0,0, "aRegistros", 1, .F., loModelo.cTituloEnGrilla )

            	If !Empty( lnOpcion )

	                This.cntSearch.txtSearch.Value = aRegistros[ lnOpcion ]

	                TEXT To lcCommand NoShow TextMerge Pretext 15
	        		Thisform.oRegistro.<<This.cFieldName>> = <<aIds[ lnOpcion ]>>
	                ENDTEXT

	                &lcCommand
	                lcCommand = ""

            	EndIf

            Endif


        Else
            If Empty( loReturn.nTally )
                Warning( "No se encontraron registros" )

            Else
                TEXT To lcMsg NoShow TextMerge Pretext 03
                La Consulta ha devuelto <<loReturn.nTally>> registros.
                Por favor, agregue más elementos de filtro
                para reducir las opciones.
                ENDTEXT

                Warning( lcMsg )

            Endif

        Endif
    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    loFiltro = Null
    loFiltros = Null
    loParam = Null
    loModelo = Null
    loReturn = Null

    If !Empty( lcAlias )
        Use In Select( lcAlias )
    Endif

    Thisform.Visible = llFormVisible
    Try

        * RA 19/07/2022(17:02:57)
        * Al inicializar los controles, This.Selected( 1 ) = .T.  pone
        * Thisform.WindowType = 0 y da error en Modelo.LounchEditFotm()
        * Do Form (This.cFormIndividual) With loParam To loStatus
        * diciendo que debe ser Modal
        * Cuando el Formulario ya está activo Thisform.WindowType = 1 da error
        * de que Thisform.WindowType es de solo lectura
        Thisform.WindowType = 1

    Catch To oErr

    Finally

    Endtry




Endtry

ENDPROC
PROCEDURE initialize
Local lcCommand As String

Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"
Local luId As Variant

Try

    lcCommand = ""

    loBiz = This.oBiz
    loBiz.Initialize()

    luId = Evaluate( "Thisform.oRegistro." + This.cFieldName )
    This.uId_Original = luId

    If !Empty( luId )
        This.CargarSelector( luId )
    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally


Endtry

ENDPROC
PROCEDURE initializerows
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	
	loBiz = This.oBiz
	loBiz.InicializarFilas()
	
Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null
	This.oBiz = Null

Endtry

ENDPROC
PROCEDURE obiz_access
Local lcCommand as String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	If Vartype( This.oBiz ) # "O"
		loBiz = NewObject( This.cClassName, This.cClassLibrary )
 		loBiz.oControl 	= This
 		loBiz.oThisForm = Thisform
		This.oBiz = loBiz
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loBiz = Null


EndTry

Return This.oBiz
ENDPROC
PROCEDURE omodelo_access
Local lcCommand as String

Try

	lcCommand = ""
	If IsNull( This.oModelo )
		This.oModelo = GetEntity( This.cModelo )
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

return This.oModelo

ENDPROC
PROCEDURE removerfiltro
Lparameters cFilterName as String
Local lcCommand as String
Local loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg

Try

	lcCommand = ""
	loFiltros = This.oFiltros
	loFiltros.RemoveItem( cFilterName )

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loFiltros = Null


EndTry

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
2[END RESERVED2]
[START RESERVED3]
coldvalue Se utiliza para determinar si se cambió el valor o solo se dio enter sobre el mismo valor
csearchfieldname Nombre del campo sobre el que se realizará la consulta
lcasesensitive Indica si diferencia mayúsculas de minúsculas
ofiltros
uid_nuevo El ultimo Id seleccionado por el usuario. Se compara con uId_Original para determinar si se modificó
uid_original Id que tenía el control al inicializarce. Se utiliza para verificar si el usuario lo modificó.
nmaxitems Cantidad máxima de Items
*autosize Specifies if a control is automatically resized to fit its contents.
*cargarselector 
*buscar 
*agregarfiltros 
*removerfiltro 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _6GH0OGZB4
[CLASS] brwsearch
[CLASSLOC] prxbrowse.vcx
[BASECLASS] container
[OBJNAME] cntSearch
[PARENT] _selector_listbox
[START PROPERTIES]
Top = 0
Left = 0
Width = 228
Name = "cntSearch"
txtSearch.Width = 204
txtSearch.Name = "txtSearch"
btnSearch.Left = 204
btnSearch.Name = "btnSearch"
[END PROPERTIES]
[START METHODS]
PROCEDURE btnSearch.KeyPress
#INCLUDE "FW\Comunes\Include\Praxis.h"

Lparameters nKeyCode, nShiftAltCtrl

Do Case
    Case nKeyCode = KEY_ENTER
        This.Parent.Parent.Buscar()

    Otherwise

Endcase

ENDPROC
PROCEDURE buscar
Local lcCommand As String,;
    lcSearchString As String,;
    lcSearchCommand As String

Local loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg,;
    loFiltro As Object


Try

    lcCommand = ""

    If This.Parent.cOldValue # This.txtSearch.Value

        This.Parent.ListBox.RemoverFiltro( "Search" )

        If This.txtSearch.Value == This.cCueText
            lcSearchString = ""

        Else
            lcSearchString = Strtran( Alltrim( This.txtSearch.Value ), " ", "+" )

        Endif

        If !Empty( lcSearchString )

            lcSearchCommand = Lower( This.Parent.cSearchFieldName )

            If This.Parent.lCaseSensitive = .T.
                lcSearchCommand = lcSearchCommand + "__contains"

            Else
                lcSearchCommand = lcSearchCommand + "__icontains"

            Endif

            loFiltros = This.Parent.ListBox.oFiltros

            loFiltro = Createobject( "Empty" )
            AddProperty( loFiltro, "Nombre", "Search"  )
            AddProperty( loFiltro, "FieldName", lcSearchCommand )
            AddProperty( loFiltro, "FieldRelation", "=" )
            AddProperty( loFiltro, "FieldValue", lcSearchString )

            loFiltros.AddItem( loFiltro, loFiltro.Nombre )
        Endif

        *This.Parent.ListBox.CargarListBox()
      	This.Parent.CargarSelector()
      	
    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    loFiltro = Null
    loFiltros = Null


Endtry

ENDPROC
PROCEDURE txtSearch.GotFocus
This.parent.parent.cOldValue = This.Value
DoDefault()
ENDPROC
PROCEDURE txtSearch.KeyPress
#INCLUDE "FW\Comunes\Include\Praxis.h"

Lparameters nKeyCode, nShiftAltCtrl

Do Case
    Case nKeyCode = KEY_ENTER
        This.Parent.Parent.Buscar()

    Otherwise

Endcase

ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _selector_listbox
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]
[START RESERVED1]
  ..\include\praxis.hÆynfdV ..\include\foxpro.hÎzÊrûF ..\include\strings.hÖ{ZOJ* ..\..\..\tools\namespaces\include\system.hÞ|±ÙF[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _6GH0QDY1O
[CLASS] _textbox
[CLASSLOC] _controles_base.vcx
[BASECLASS] textbox
[OBJNAME] _txtsearch
[START PROPERTIES]
Value = 
ccontrolsource = 
cmodelo = 
coldvalue = 
csearchfieldname = Nombre
lcasesensitive = .F.
nmaxitems = 25
ofiltros = .NULL.
omodelo = .NULL.
uid_nuevo = 0
uid_original = 0
cclassname = oCB_SearchBox
_memberdata =      981<VFPData><memberdata name="cclassname" display="cClassName"/><memberdata name="ccontrolsource" display="cControlSource"/><memberdata name="cmodelo" display="cModelo"/><memberdata name="coldvalue" display="cOldValue"/><memberdata name="csearchfieldname" display="cSearchFieldName"/><memberdata name="lcasesensitive" display="lCaseSensitive"/><memberdata name="nmaxitems" display="nMaxItems"/><memberdata name="ofiltros" display="oFiltros"/><memberdata name="omodelo" display="oModelo"/><memberdata name="omodelo_access" display="oModelo_Access"/><memberdata name="uid_nuevo" display="uId_Nuevo"/><memberdata name="uid_original" display="uId_Original"/><memberdata name="agregarfiltros" display="AgregarFiltros"/><memberdata name="buscar" display="Buscar"/><memberdata name="cargarselector" display="CargarSelector"/><memberdata name="removerfiltro" display="RemoverFiltro"/><memberdata name="value" display="Value"/><memberdata name="value_assign" display="Value_Assign"/></VFPData>
Name = "_txtsearch"
[END PROPERTIES]
[START METHODS]
PROCEDURE GotFocus
This.cOldValue = This.Value
DoDefault()
ENDPROC
PROCEDURE Init
Local lcCommand as String

Try

	DoDefault()
	This.oFiltros = Newobject( "CollectionBase", "Tools\Namespaces\Prg\CollectionBase.Prg" )

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE InteractiveChange
DoDefault()
If Empty( This.Value )
    If !Empty( This.cCueText )
        Wait Window Nowait Noclear This.cCueText
    Endif
Endif

ENDPROC
PROCEDURE KeyPress
#INCLUDE "FW\Comunes\Include\Praxis.h"

Lparameters nKeyCode, nShiftAltCtrl

Do Case
    Case nKeyCode = KEY_ENTER
        This.Buscar()

    Otherwise

Endcase

ENDPROC
PROCEDURE agregarfiltros
Local lcCommand As String
Local loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg,;
    loFiltro As Object

Try

    lcCommand = ""

    loFiltros = This.oFiltros

    loFiltro = Createobject( "Empty" )
    AddProperty( loFiltro, "Nombre", "Activos" )
    AddProperty( loFiltro, "FieldName", "activo" )
    AddProperty( loFiltro, "FieldRelation", "==" )
    AddProperty( loFiltro, "FieldValue", "True" )
    loFiltros.AddItem( loFiltro, loFiltro.Nombre )

	* RA 14/07/2022(17:53:56)
	* Hacer un hit para traer un solo registro
	* para verificar la cantidad total de items
    loFiltro = Createobject( "Empty" )
    AddProperty( loFiltro, "Nombre", "SetPageSize" )
    AddProperty( loFiltro, "FieldName", "current_size" )
    AddProperty( loFiltro, "FieldRelation", "=" )
    AddProperty( loFiltro, "FieldValue", Transform( 1 ) )
    loFiltros.AddItem( loFiltro, loFiltro.Nombre )


    loFiltro = Createobject( "Empty" )
    AddProperty( loFiltro, "Nombre", "Combo" )
    AddProperty( loFiltro, "FieldName", "combo" )
    AddProperty( loFiltro, "FieldRelation", "=" )
    AddProperty( loFiltro, "FieldValue", "True" )
    loFiltros.AddItem( loFiltro, loFiltro.Nombre )

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    loFiltro 	= Null
    loFiltros 	= Null

Endtry

ENDPROC
PROCEDURE buscar
Local lcCommand As String,;
    lcSearchString As String,;
    lcSearchCommand As String

Local loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg,;
    loFiltro As Object


Try

    lcCommand = ""

    If This.cOldValue # This.Value

        This.RemoverFiltro( "Search" )

        If This.Value == This.cCueText
            lcSearchString = ""

        Else
            lcSearchString = Strtran( Alltrim( This.Value ), " ", "+" )

        Endif

        If !Empty( lcSearchString )

            lcSearchCommand = "search"

            loFiltros = This.oFiltros

            loFiltro = Createobject( "Empty" )
            AddProperty( loFiltro, "Nombre", "Search"  )
            AddProperty( loFiltro, "FieldName", lcSearchCommand )
            AddProperty( loFiltro, "FieldRelation", "=" )
            AddProperty( loFiltro, "FieldValue", lcSearchString )

            loFiltros.AddItem( loFiltro, loFiltro.Nombre )
        Endif

      	This.CargarSelector()
      	
    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    loFiltro = Null
    loFiltros = Null


Endtry

ENDPROC
PROCEDURE cargarselector
Lparameters uId As Variant

Local lcCommand As String,;
    lcAlias As String
Local loModelo As oModelo Of "FrontEnd\Prg\Modelo.prg",;
    loParam As Object,;
    loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg,;
    loReturn As Object

Local llFormVisible As Boolean
Local i As Integer,;
    lnOpcion As Integer

Try

    lcCommand = ""
    loModelo = This.oModelo
    llFormVisible = Thisform.Visible

    If !Empty( uId )

        Try

            * Si el formulario trajo la FK y el nombre de la FK
            * los carga de allí
            This.Value = Alltrim( Evaluate( "Thisform.oRegistro.str_" + This.cFieldName ))

        Catch To oErr
            loReturn = loModelo.GetByPK( uId )

            This.Value = Alltrim( loReturn.oRegistro.Nombre )

        Finally
            TEXT To lcCommand NoShow TextMerge Pretext 15
	        Thisform.oRegistro.<<This.cFieldName>> = <<uId>>
            ENDTEXT

            &lcCommand
            lcCommand = ""

        Endtry



    Else
        This.AgregarFiltros()

        loFiltros = This.oFiltros
        loParam = Createobject( "Empty" )

        AddProperty( loParam, "oFilterCriteria", loFiltros )

        lcAlias = loModelo.cMainCursorName + Sys(2015)
        AddProperty( loParam, "cAlias", lcAlias )

        loReturn = loModelo.GetByWhere( loParam )

        If loReturn.nTally <= This.nMaxItems And !Empty( loReturn.nTally )
            If loReturn.nTally > 1

                This.RemoverFiltro( "SetPageSize" )

                loFiltro = Createobject( "Empty" )
                AddProperty( loFiltro, "Nombre", "SetPageSize" )
                AddProperty( loFiltro, "FieldName", "current_size" )
                AddProperty( loFiltro, "FieldRelation", "=" )
                AddProperty( loFiltro, "FieldValue", Transform( This.nMaxItems ) )
                loFiltros.AddItem( loFiltro, loFiltro.Nombre )

                *----------------------------------------------

                loReturn = loModelo.GetByWhere( loParam )
            Endif

            Dimension aRegistros[ loReturn.nTally ],;
                aIds[ loReturn.nTally ]

            If loReturn.nTally = 1
*!*	            	Set Step On
*!*	                This.Value = Alltrim( loReturn.oRegistro.Nombre )

*!*	                TEXT To lcCommand NoShow TextMerge Pretext 15
*!*	        		Thisform.oRegistro.<<This.cFieldName>> = <<uId>>
*!*	                ENDTEXT

*!*	                &lcCommand
*!*	                lcCommand = ""

                Select Alias( lcAlias )
                Locate

                This.Value = Alltrim( Nombre )
                TEXT To lcCommand NoShow TextMerge Pretext 15
        		Thisform.oRegistro.<<This.cFieldName>> = <<Evaluate( loModelo.cPKField )>>
                ENDTEXT

                &lcCommand
                lcCommand = ""


            Else

                Select Alias( lcAlias )
                Locate
                Scan
                    aRegistros[ Recno() ] = Alltrim( Nombre )
                    aIds[ Recno() ] = Evaluate( loModelo.cPKField )

                Endscan

                lnOpcion = 0
                lnOpcion = S_Opcion( -1,-1,0,0, "aRegistros", 1, .F., loModelo.cTituloEnGrilla )

                If !Empty( lnOpcion )

                    This.Value = aRegistros[ lnOpcion ]

                    TEXT To lcCommand NoShow TextMerge Pretext 15
	        		Thisform.oRegistro.<<This.cFieldName>> = <<aIds[ lnOpcion ]>>
                    ENDTEXT

                    &lcCommand
                    lcCommand = ""

                Endif

            Endif


        Else
            If Empty( loReturn.nTally )
                Warning( "No se encontraron registros" )

            Else
                TEXT To lcMsg NoShow TextMerge Pretext 03
                La Consulta ha devuelto <<loReturn.nTally>> registros.
                Por favor, agregue más elementos de filtro
                para reducir las opciones.
                ENDTEXT

                Warning( lcMsg )

            Endif

        Endif
    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally
    loFiltro = Null
    loFiltros = Null
    loParam = Null
    loModelo = Null
    loReturn = Null

    If !Empty( lcAlias )
        Use In Select( lcAlias )
    Endif

    Thisform.Visible = llFormVisible
    Try

        * RA 19/07/2022(17:02:57)
        * Al inicializar los controles, This.Selected( 1 ) = .T.  pone
        * Thisform.WindowType = 0 y da error en Modelo.LounchEditFotm()
        * Do Form (This.cFormIndividual) With loParam To loStatus
        * diciendo que debe ser Modal
        * Cuando el Formulario ya está activo Thisform.WindowType = 1 da error
        * de que Thisform.WindowType es de solo lectura
        Thisform.WindowType = 1

    Catch To oErr

    Finally

    Endtry




Endtry

ENDPROC
PROCEDURE initialize
Local lcCommand As String

Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"
Local luId As Variant

Try

    lcCommand = ""
    DoDefault()

    This.ControlSource = ""

    Do Case
        Case Pemstatus( Thisform.oRegistro, This.cFieldName, 5 )
        	* No hacer Nada

        Case Pemstatus( Thisform.oRegistro, This.cFieldName + "_Id", 5 )
            This.cFieldName = This.cFieldName + "_Id"

        Case Pemstatus( Thisform.oRegistro, This.cFieldName + "_Str", 5 )
             This.cFieldName = This.cFieldName + "_Str"

    Endcase

	This.cControlSource = "Thisform.oRegistro." + This.cFieldName
	
    luId = Evaluate( This.cControlSource )
    If !Empty( luId )
        This.CargarSelector( luId )
    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally


Endtry

ENDPROC
PROCEDURE omodelo_access
Local lcCommand As String

Try

    lcCommand = ""
    If Isnull( This.oModelo )
        This.oModelo = GetEntity( This.cModelo )
    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally


Endtry

Return This.oModelo

ENDPROC
PROCEDURE removerfiltro
Lparameters cFilterName as String
Local lcCommand as String
Local loFiltros As CollectionBase Of Tools\Namespaces\Prg\CollectionBase.Prg

Try

	lcCommand = ""
	loFiltros = This.oFiltros
	loFiltros.RemoveItem( cFilterName )

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loFiltros = Null


EndTry

ENDPROC
PROCEDURE value_assign
Lparameters tValue
This.Value = tValue
If Empty( tValue )
    If !Empty( This.cCueText )
        Wait Window Nowait Noclear This.cCueText
    Endif
Endif

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
ccontrolsource Reemplaza al ControlSource del control, que está vacío, y lo vincula con el valor de referencia
cmodelo
coldvalue Se utiliza para determinar si se cambió el valor o solo se dio enter sobre el mismo valor
csearchfieldname Nombre del campo sobre el que se realizará la consulta
lcasesensitive Indica si diferencia mayúsculas de minúsculas
nmaxitems
ofiltros
omodelo
uid_nuevo El ultimo Id seleccionado por el usuario. Se compara con uId_Original para determinar si se modificó
uid_original Id que tenía el control al inicializarce. Se utiliza para verificar si el usuario lo modificó.
*omodelo_access 
*agregarfiltros 
*buscar 
*cargarselector 
*removerfiltro 
*value_assign 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _txtsearch
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]
[START RESERVED1]
  ..\include\praxis.hÆynfdV ..\include\foxpro.hÎzÊrûF ..\include\strings.hÖ{ZOJ* ..\..\..\tools\namespaces\include\system.hÞ|±ÙF[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _6IC0MBHLY
[CLASS] _textbox
[CLASSLOC] _controles_base.vcx
[BASECLASS] textbox
[OBJNAME] _numbox
[START PROPERTIES]
ncolumnsspan = 6
Name = "_numbox"
[END PROPERTIES]
[START METHODS]
PROCEDURE Valid
Local lcCommand As String
Local loField As oField Of 'Tools\DataDictionary\prg\oField.prg'
Local llValid As Boolean

Try

    lcCommand = ""
    llValid = .T.
    loField = This.oField

    If !Isnull( loField )
        If llValid
            If !Empty( loField.cCheck )
            	uValue = Val( Transform(This.Value))
            	
                If !Evaluate( loField.cCheck )
                    llValid = .F.

                    TEXT To lcMsg NoShow TextMerge Pretext 03
					<<loField.cCaption>>

					<<loField.cErrorMessage>>
                    ENDTEXT

                    Wait Window Nowait Noclear lcMsg

                Endif
            Endif
        Endif
    Endif

    This.lValid = llValid

    If llValid
        Wait Clear
    Endif

Catch To loErr
    Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
    loError = Newobject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
    loError.cRemark = lcCommand
    loError.Process ( m.loErr )
    Throw loError

Finally


Endtry

* RA 19/09/2021(17:31:19)
* Permite seguir. La validación final se hacel al confirmar globalmente
Return .T.

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _numbox
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _6IL0R026R
[CLASS] _label
[CLASSLOC] _controles_base.vcx
[BASECLASS] label
[OBJNAME] _titulo
[START PROPERTIES]
AutoSize = .T.
FontBold = .T.
FontSize = 12
Caption = "Título"
ForeColor = 0,64,128
obiz = .NULL.
cclassname = oCb_Titulo
cclasslibrary = FW\Comunes\vcx\_Controles_Base.prg
lautomaticdisplay = .T.
_memberdata =      467<VFPData><memberdata name="initialize" display="Initialize"/><memberdata name="initializerows" display="InitializeRows"/><memberdata name="afterbindcontrols" display="AfterBindControls"/><memberdata name="obiz" display="oBiz"/><memberdata name="obiz_access" display="oBiz_Access"/><memberdata name="cclassname" display="cClassName"/><memberdata name="cclasslibrary" display="cClassLibrary"/><memberdata name="lautomaticdisplay" display="lAutomaticDisplay"/></VFPData>
Name = "_titulo"
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
Local lcCommand As String

Try

	lcCommand = ""
	DoDefault()
		
	If Pemstatus( Thisform, 'InitializeControls', 5 )
		Bindevent( Thisform, 'InitializeControls', This, 'Initialize', 1 )
	Endif

	If Pemstatus( Thisform, 'InitializeRows', 5 )
		Bindevent( Thisform, 'InitializeRows', This, 'InitializeRows', 1 )
	Endif

	If Pemstatus( Thisform, 'AfterBindControls', 5 )
		Bindevent( Thisform, 'AfterBindControls', This, 'AfterBindControls', 1 )
	Endif

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE afterbindcontrols
Local lcCommand as String

Try

	lcCommand = ""

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally


EndTry

ENDPROC
PROCEDURE initialize
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

    lcCommand = ""

    loBiz = This.oBiz
    loBiz.Initialize()
    Thisform.oControles.Add( This, Lower( This.Parent.Name ) + "_" + Lower( This.Name ))

Catch To oErr
    Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
    loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
    loError.Cremark = lcCommand
    loError.Process( oErr )
    Throw loError

Finally
    loBiz = Null

Endtry

ENDPROC
PROCEDURE initializerows
Local lcCommand As String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	
	loBiz = This.oBiz
	loBiz.InicializarFilas()
	
Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Cremark = lcCommand
	loError.Process( oErr )
	Throw loError

Finally
	loBiz = Null
	This.oBiz = Null

Endtry

ENDPROC
PROCEDURE obiz_access
Local lcCommand as String
Local loBiz As ControlesBase Of "FW\Comunes\vcx\_Controles_Base.prg"

Try

	lcCommand = ""
	If Vartype( This.oBiz ) # "O"
		loBiz = NewObject( This.cClassName, This.cClassLibrary )
 		loBiz.oControl = This
 		loBiz.oThisForm = Thisform
		This.oBiz = loBiz
	EndIf

Catch To loErr
	Local loError As ErrorHandler Of 'Tools\ErrorHandler\Prg\ErrorHandler.prg'
	loError = NewObject( 'ErrorHandler', 'Tools\ErrorHandler\Prg\ErrorHandler.prg' )
	loError.cRemark = lcCommand
	loError.Process ( m.loErr )
	Throw loError

Finally
	loBiz = Null


EndTry

Return This.oBiz
ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
obiz
cclassname
cclasslibrary
lautomaticdisplay
*initialize 
*initializerows 
*afterbindcontrols 
*obiz_access 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] _titulo
[EOF]
