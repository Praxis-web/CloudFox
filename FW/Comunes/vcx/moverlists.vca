SCCTEXT Version 4.0.0.2
PLATFORM C(8,0),UNIQUEID C(10,0),TIMESTAMP N(10,0),CLASS M(4,0),CLASSLOC M(4,0),BASECLASS M(4,0),OBJNAME M(4,0),PARENT M(4,0),PROPERTIES M(4,0),PROTECTED M(4,0),METHODS M(4,0),OBJCODE M(4,0),OLE M(4,0),OLE2 M(4,0),RESERVED1 M(4,0),RESERVED2 M(4,0),RESERVED3 M(4,0),RESERVED4 M(4,0),RESERVED5 M(4,0),RESERVED6 M(4,0),RESERVED7 M(4,0),RESERVED8 M(4,0),USER M(4,0)
1252

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] Class     
[START RESERVED1]
VERSION =   3.00[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _25F13PGHA
[CLASS] ccmarco
[CLASSLOC] controles_varios.vcx
[BASECLASS] container
[OBJNAME] moverlists
[START PROPERTIES]
Width = 380
Height = 236
candropicon = DragMove.cur
dragthreshold = 8
mousex = 0
mousey = 0
nodropicon = NoDrop.Cur
nvirtualcolumns = 1
_memberdata =     1840<VFPData><memberdata name="autofit" type="method" display="Autofit"/><memberdata name="nGap" type="property" display="nGap"/><memberdata name="lautofit" type="property" display="lAutofit"/><memberdata name="lautosetup" type="property" display="lAutoSetup"/><memberdata name="samerowasprevious" type="property" display="SameRowAsPrevious" favorites="True"/><memberdata name="fittoparent" type="method" display="FitToParent"/><memberdata name="nupdatefontsize" type="property" display="nUpdateFontSize"/><memberdata name="nupdatefontsize_assign" type="method" display="nUpdateFontSize_Assign"/><memberdata name="nBottomPadding" type="Property" favorites="True"/><memberdata name="resalttittle" type="property" display="ResaltTittle" favorites="True"/><memberdata name="oldshapecolor" type="property" display="OldShapeColor"/><memberdata name="lresalttittle" type="property" display="lResaltTittle" favorites="True"/><memberdata name="resalttittle" type="method" display="ResaltTittle"/><memberdata name="addone" type="method" display="AddOne"/><memberdata name="removeone" type="method" display="RemoveOne"/><memberdata name="addall" type="method" display="AddAll"/><memberdata name="removeall" type="method" display="RemoveAll"/><memberdata name="selectall" type="method" display="SelectAll"/><memberdata name="moveselected" type="method" display="MoveSelected"/><memberdata name="candropicon" type="property" display="CanDropIcon"/><memberdata name="dragthreshold" type="property" display="DragThreshold"/><memberdata name="mousex" type="property" display="MouseX"/><memberdata name="mousey" type="property" display="MouseY"/><memberdata name="nodropicon" type="property" display="NoDropIcon"/><memberdata name="contextualmenu" type="method" display="ContextualMenu"/><memberdata name="nvirtualcolumns" display="nVirtualColumns"/></VFPData>
Name = "moverlists"
Shape.Name = "Shape"
shpLabel.Name = "shpLabel"
lblTitulo.TabIndex = 1
lblTitulo.Name = "lblTitulo"
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
NoDefault
This.BorderWidth = 0
This.AutoSetup()


ENDPROC
PROCEDURE MouseDown
LPARAMETERS nButton, nShift, nXCoord, nYCoord, oListBox

If IsEmpty( oListBox )
	DoDefault( nButton, nShift, nXCoord, nYCoord )
	
Else
	This.ContextualMenu( oListBox ) 	
	
Endif


ENDPROC
PROCEDURE addall

Thisform.LockScreen = .T.

This.SelectAll( This.SourceList.Dato )
This.MoveSelected( This.SourceList.Dato, This.TargetList.Dato )

Thisform.LockScreen = .F.

ENDPROC
PROCEDURE addone

Thisform.LockScreen = .T.

This.MoveSelected( This.SourceList.Dato, This.TargetList.Dato )

Thisform.LockScreen = .F.

ENDPROC
PROCEDURE contextualmenu
Lparameters oListBox As ListBox

#Define BAR_SELECT_ALL 1
#Define BAR_CLEAN_ALL  2

Local lnSelected As Integer

lnSelected = 0

Define Popup emergente SHORTCUT Relative From Mrow(),Mcol()

Define Bar BAR_SELECT_ALL Of emergente Prompt "Selecciona Todos" ;
	MESSAGE "Selecciona todos los ítems" ;
	STYLE "B"
On Selection Bar BAR_SELECT_ALL Of emergente lnSelected = BAR_SELECT_ALL

Define Bar BAR_CLEAN_ALL Of emergente Prompt "Desmarca Todos" ;
	PICTRES _Mfi_open ;
	MESSAGE "Desmarca todos los ítems"
On Selection Bar BAR_CLEAN_ALL Of emergente lnSelected = BAR_CLEAN_ALL

Activate Popup emergente
Release Popups emergente

If Not Empty( lnSelected )
	Thisform.LockScreen = .T.
	Do Case
		Case lnSelected = BAR_SELECT_ALL
			This.SelectAll( oListBox )

		Case lnSelected = BAR_CLEAN_ALL
			This.SelectAll( oListBox, .T. )

		Otherwise

	Endcase
	Thisform.LockScreen = .F.
Endif

ENDPROC
PROCEDURE moveselected
Lparameters toSource As ListBox, toTarget As ListBox

Local lnCnt  As Integer,;
	i As Integer
Local lnMoved As Integer
Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"

Try

	lnMoved = 1
	If toSource.MultiSelect
		* The ListCount value changes whenever the RemoveItem method is called
		lnCnt = 1
		Do While lnCnt <= toSource.ListCount
			If toSource.Selected( lnCnt )
				For i = 1 To Max( This.nVirtualColumns, toSource.ColumnCount )
					If i = 1
						toTarget.AddItem( toSource.List( lnCnt ) )

					Else
						toTarget.List[ toTarget.NewIndex, i] = toSource.List( lnCnt, i )

					Endif

				Endfor

				toSource.RemoveItem( lnCnt )
				lnMoved = lnCnt

			Else
				lnCnt = lnCnt + 1

			Endif

		Enddo
	Else
		lnCnt = toSource.ListIndex
		If ! Empty( lnCnt )

			For i = 1 To Max( This.nVirtualColumns, toSource.ColumnCount )
				If i = 1
					toTarget.AddItem( toSource.List( lnCnt ) )

				Else
					toTarget.List[ toTarget.NewIndex, i] = toSource.List( lnCnt, i )

				Endif

			Endfor

			toSource.RemoveItem( lnCnt )
			lnMoved = lnCnt

		Endif

	Endif

	If ! Empty( toSource.ListCount )
		toSource.Selected( Min( lnMoved, toSource.ListCount ) ) = .T.

	Endif

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "Tools\ErrorHandler\Prg\ErrorHandler.prg" )
	loError.Process( oErr )
	Throw loError

Finally


Endtry

ENDPROC
PROCEDURE removeall
Thisform.LockScreen = .T.
This.SelectAll( This.TargetList.Dato )
This.MoveSelected( This.TargetList.Dato, This.SourceList.Dato )
Thisform.LockScreen = .F.

ENDPROC
PROCEDURE removeone
Thisform.LockScreen = .T.
This.MoveSelected( This.TargetList.Dato, This.SourceList.Dato )
Thisform.LockScreen = .F.

ENDPROC
PROCEDURE selectall
Lparameters toList As ListBox, tlUnselect As Boolean

Local lnCnt as Integer

For lnCnt = 1 To toList.ListCount
	toList.Selected( lnCnt ) = ! tlUnselect

Endfor

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
4[END RESERVED2]
[START RESERVED3]
candropicon Cursor when dropping is OK
dragthreshold
mousex Coordenada X del mouse
mousey Coordenada Y del mouse
nodropicon Cursor when dropping not is OK
nvirtualcolumns Cantidad de columnas virtuales del ListBox. Es mayor o igau a ColumnCount. Por cada item, debe moverse hasta la columna indicada en nVirtualColumns
*addone Mueve el item seleccionado en SourceList a TargetList. Si la propiedad MultiSelect = .T., mueve todos los ítems seleccionados
*removeone Mueve el item seleccionado en TargetList a SourcetList. Si la propiedad MultiSelect = .T., mueve todos los ítems seleccionados
*addall Mueve todos los ítems de SourceList a TargetList. 
*removeall Mueve todos los ítems de TargetList a SourceList.
*selectall Selecciona todos los ítems de la lista
*moveselected Mueve los items seleccionados de un ListBox al otro
*contextualmenu 
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _25F14TXFN
[CLASS] mvrlistbox
[CLASSLOC] moverlists.vcx
[BASECLASS] container
[OBJNAME] SourceList
[PARENT] moverlists
[START PROPERTIES]
Top = 27
Left = 10
TabIndex = 2
lsamerowasprevious = .T.
Name = "SourceList"
Label.Caption = "Origen"
Label.Name = "Label"
CheckButton.Name = "CheckButton"
Dato.Name = "Dato"
[END PROPERTIES]
[START METHODS]
PROCEDURE Dato.DblClick

This.Parent.Parent.AddOne()

ENDPROC
PROCEDURE Dato.DragDrop
Lparameters oSource, nXCoord, nYCoord

If oSource.Name != This.Name
	This.Parent.Parent.RemoveOne()

Endif

ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _25F14TXG5
[CLASS] mvrbuttons
[CLASSLOC] moverlists.vcx
[BASECLASS] container
[OBJNAME] MoverButtons
[PARENT] moverlists
[START PROPERTIES]
Top = 27
Left = 171
TabIndex = 3
lsamerowasprevious = .T.
Name = "MoverButtons"
Shape.Name = "Shape"
shpLabel.Name = "shpLabel"
lblTitulo.Name = "lblTitulo"
AddOne.Top = 14
AddOne.Left = 5
AddOne.ToolTipText = "Agrega los ítems seleccionados"
AddOne.Name = "AddOne"
AddAll.ToolTipText = "Agrega Todos los ítems "
AddAll.Name = "AddAll"
RemoveAll.Top = 66
RemoveAll.Left = 5
RemoveAll.ToolTipText = "Quita Todos los ítems "
RemoveAll.Name = "RemoveAll"
RemoveOne.Top = 92
RemoveOne.Left = 5
RemoveOne.ToolTipText = "Quita los ítems seleccionados"
RemoveOne.Name = "RemoveOne"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _25F14TXGN
[CLASS] mvrlistbox
[CLASSLOC] moverlists.vcx
[BASECLASS] container
[OBJNAME] TargetList
[PARENT] moverlists
[START PROPERTIES]
Top = 27
Left = 215
TabIndex = 4
lsamerowasprevious = .T.
Name = "TargetList"
Label.Caption = "Destino"
Label.Name = "Label"
CheckButton.Name = "CheckButton"
Dato.Name = "Dato"
[END PROPERTIES]
[START METHODS]
PROCEDURE Dato.DblClick

This.Parent.Parent.RemoveOne()

ENDPROC
PROCEDURE Dato.DragDrop
Lparameters oSource, nXCoord, nYCoord

If oSource.Name != This.Name
	This.Parent.Parent.AddOne()

Endif

ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] moverlists
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _25F13X5M0
[CLASS] iblistbox
[CLASSLOC] inputboxes.vcx
[BASECLASS] container
[OBJNAME] mvrlistbox
[START PROPERTIES]
Width = 150
Height = 197
llabelontop = .T.
lfittoparent = .T.
nfitmode = 2
lsubscribetocolib = .F.
llaunchform = .F.
Name = "mvrlistbox"
Label.Name = "Label"
CheckButton.Name = "CheckButton"
Dato.Height = 188
Dato.Left = 0
Dato.MultiSelect = .T.
Dato.Sorted = .T.
Dato.Top = 20
Dato.Width = 148
Dato.Name = "Dato"
[END PROPERTIES]
[START METHODS]
PROCEDURE CheckButton.Init
NoDefault

ENDPROC
PROCEDURE Dato.DblClick

*!*	This.Parent.lstSelected.AddItem( This.List( This.ListIndex ) )
*!*	This.RemoveItem( This.ListIndex )


ENDPROC
PROCEDURE Dato.DragDrop
Lparameters oSource, nXCoord, nYCoord

* DAE 2009-08-14(16:41:56)
*!*	If oSource.Name != This.Name
*!*		* DAE 2009-08-14(16:37:50)
*!*		* This.Parent.cmdRemove.Click()
*!*		This.Parent.RemoveOne()

*!*	Endif


ENDPROC
PROCEDURE Dato.DragOver
Lparameters oSource, nXCoord, nYCoord, nState

#INCLUDE "FW\Comunes\Include\Praxis.h"

Local lcCommand As String

Try

	lcCommand = ""


	Do Case
		Case nState = 0 && Enter
			oSource.DragIcon = Addbs( FL_IMAGE ) + "Cur\" + This.Parent.Parent.CanDropIcon

		Case nState = 1 && Leave
			oSource.DragIcon = Addbs( FL_IMAGE ) + "Cur\" + This.Parent.Parent.NoDropIcon

	Endcase


Catch To oErr
*!*		Local loError As prxErrorHandler Of "FW\ErrorHandler\prxErrorHandler.prg"
*!*		loError = Newobject( "prxErrorHandler", "prxErrorHandler.prg" )
*!*		loError.Remark = lcCommand
*!*		loError.Process( oErr )
*!*		Throw loError

Finally


Endtry

ENDPROC
PROCEDURE Dato.Init
NoDefault

ENDPROCPROCEDURE Dato.KeyPress
Lparameters nKeyCode, nShiftAltCtrl

#INCLUDE "FW\Comunes\Include\Praxis.h"
#INCLUDE "FW\Tieradapter\Include\TA.h"

Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"

Try

	***=Messagebox( "nKeyCode: "+ ANY2cHAR(nKeyCode) + CR + "nShiftAltCtrl: " + ANY2cHAR(nShiftAltCtrl))

	Do Case
		Case nShiftAltCtrl = 0
			DoDefault( nKeyCode, nShiftAltCtrl )

		Case nShiftAltCtrl = KEY_SHIFT_DOWN
			DoDefault( nKeyCode, nShiftAltCtrl )

		Case nShiftAltCtrl = KEY_CTRL_DOWN
			Do Case
					*Case nKeyCode = "E"
				Case nKeyCode = 5
					This.Parent.Parent.SelectAll( This )

				Otherwise
					DoDefault( nKeyCode, nShiftAltCtrl )

			Endcase

		Otherwise
			DoDefault( nKeyCode, nShiftAltCtrl )

	Endcase


Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Process( oErr )
	Throw loError

Finally
	
	
EndTry

ENDPROC
PROCEDURE Dato.MouseDown
Lparameters nButton, nShift, nXCoord, nYCoord

Do Case
	Case nButton = 2 And nShift = 0  && RightClick
		****This.Parent.Parent.MouseDown( nButton, nShift, nXCoord, nYCoord, This )

	Otherwise
		This.Parent.Parent.MouseX = nXCoord
		This.Parent.Parent.MouseY = nYCoord


Endcase


ENDPROC
PROCEDURE Dato.MouseMove
Lparameters nButton, nShift, nXCoord, nYCoord

If nButton = 1 && Left Mouse
	If Abs(nXCoord - This.Parent.Parent.MouseX) > This.Parent.Parent.DragThreshold ;
	Or ABS(nYCoord - This.Parent.Parent.MouseY) > This.Parent.Parent.DragThreshold
		This.Drag()
		
	EndIf
	
Endif

ENDPROC
PROCEDURE Init
NoDefault
This.BorderWidth = 0
ENDPROC
PROCEDURE Label.Init
NoDefault

ENDPROC
PROCEDURE interactivechange
Lparameters nEntidadId As Integer

NoDefault

ENDPROC
PROCEDURE releaseobjects
Local loObj As Object
Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
Try
	With This As prxcontainer Of FW\Comunes\vcx\prxbase.vcx
		.oColObjects = Null
		.oImageList = Null
		For Each loObj In .Objects
			If Pemstatus( loObj, 'ReleaseObjects', 5 )
				loObj.ReleaseObjects()
			Endif
		Endfor
	Endwith

Catch To oErr
	Local loError As ErrorHandler Of "Tools\ErrorHandler\Prg\ErrorHandler.prg"
	loError = Newobject( "ErrorHandler", "ErrorhandlerPrg\ErrorHandler.prg" )
	loError.Process( oErr )
	Throw loError

Finally
	loObj = Null

Endtry

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] mvrlistbox
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]
[START RESERVED1]
  ..\include\praxis.hÞìs~\V ..\include\foxpro.hæíÊrûF ..\include\strings.hîîZOJ* ..\..\..\tools\namespaces\include\system.höï±ÙF ..\..\tieradapter\include\ta.hþðîU[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _25F13YYUI
[CLASS] optionpanelbase
[CLASSLOC] prxmainform.vcx
[BASECLASS] container
[OBJNAME] mvrbuttons
[START PROPERTIES]
Width = 32
Height = 148
ntoppadding = 5
ngap = 5
nleftpadding = 5
nrightpadding = 5
ctarget = This.Parent
Name = "mvrbuttons"
Shape.Name = "Shape"
shpLabel.Name = "shpLabel"
lblTitulo.Left = -500
lblTitulo.Top = -500
lblTitulo.Visible = .F.
lblTitulo.TabIndex = 1
lblTitulo.Name = "lblTitulo"
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
NoDefault
This.BorderWidth = 0
ENDPROC
PROCEDURE lblTitulo.Init
NoDefault

ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
5[END RESERVED2]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _25F13PGHA
[CLASS] next
[CLASSLOC] buttons.vcx
[BASECLASS] commandbutton
[OBJNAME] AddOne
[PARENT] mvrbuttons
[START PROPERTIES]
AutoSize = .F.
Top = 2
Left = 5
Width = 20
Picture = ..\image\bmp\addone.bmp
Caption = ""
TabIndex = 2
SpecialEffect = 2
ccommand = AddOne
lautosetup = .T.
Name = "AddOne"
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
NoDefault

ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _25F14LATN
[CLASS] last
[CLASSLOC] buttons.vcx
[BASECLASS] commandbutton
[OBJNAME] AddAll
[PARENT] mvrbuttons
[START PROPERTIES]
AutoSize = .F.
Top = 40
Left = 5
Width = 20
Picture = ..\image\bmp\addall.bmp
Caption = ""
TabIndex = 3
SpecialEffect = 2
ccommand = AddAll
lautosetup = .T.
Name = "AddAll"
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
NoDefault
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _25F14LATQ
[CLASS] first
[CLASSLOC] buttons.vcx
[BASECLASS] commandbutton
[OBJNAME] RemoveAll
[PARENT] mvrbuttons
[START PROPERTIES]
AutoSize = .F.
Top = 78
Left = 5
Width = 20
Picture = ..\image\bmp\removeall.bmp
Caption = ""
TabIndex = 4
SpecialEffect = 2
ccommand = RemoveAll
lautosetup = .T.
Name = "RemoveAll"
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
NoDefault
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _25F14LATS
[CLASS] prior
[CLASSLOC] buttons.vcx
[BASECLASS] commandbutton
[OBJNAME] RemoveOne
[PARENT] mvrbuttons
[START PROPERTIES]
AutoSize = .F.
Top = 116
Left = 5
Width = 20
Picture = ..\image\bmp\removeone.bmp
Caption = ""
TabIndex = 5
SpecialEffect = 2
ccommand = RemoveOne
lautosetup = .T.
Name = "RemoveOne"
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
NoDefault
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] mvrbuttons
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]
[EOF]
